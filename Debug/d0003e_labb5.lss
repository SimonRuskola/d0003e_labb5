
d0003e_labb5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00002034  000020c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002034  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  00800106  00800106  000020ce  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000020ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002100  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  00002140  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021f3  00000000  00000000  00002340  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ee8  00000000  00000000  00004533  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013f2  00000000  00000000  0000541b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b08  00000000  00000000  00006810  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000947  00000000  00000000  00007318  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000263b  00000000  00000000  00007c5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000a29a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 65 00 	jmp	0xca	; 0xca <__ctors_end>
       4:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__vector_1>
       8:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__vector_2>
       c:	0c 94 cd 04 	jmp	0x99a	; 0x99a <__vector_3>
      10:	0c 94 39 05 	jmp	0xa72	; 0xa72 <__vector_4>
      14:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__vector_5>
      18:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
      1c:	0c 94 39 0c 	jmp	0x1872	; 0x1872 <__vector_7>
      20:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
      24:	0c 94 e7 0b 	jmp	0x17ce	; 0x17ce <__vector_9>
      28:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__vector_10>
      2c:	0c 94 7d 06 	jmp	0xcfa	; 0xcfa <__vector_11>
      30:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__vector_12>
      34:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <__vector_13>
      38:	0c 94 c1 07 	jmp	0xf82	; 0xf82 <__vector_14>
      3c:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__vector_15>
      40:	0c 94 99 08 	jmp	0x1132	; 0x1132 <__vector_16>
      44:	0c 94 05 09 	jmp	0x120a	; 0x120a <__vector_17>
      48:	0c 94 71 09 	jmp	0x12e2	; 0x12e2 <__vector_18>
      4c:	0c 94 dd 09 	jmp	0x13ba	; 0x13ba <__vector_19>
      50:	0c 94 49 0a 	jmp	0x1492	; 0x1492 <__vector_20>
      54:	0c 94 b5 0a 	jmp	0x156a	; 0x156a <__vector_21>
      58:	0c 94 21 0b 	jmp	0x1642	; 0x1642 <__vector_22>
      5c:	bc 00       	.word	0x00bc	; ????
      5e:	9e 00       	.word	0x009e	; ????
      60:	a1 00       	.word	0x00a1	; ????
      62:	a4 00       	.word	0x00a4	; ????
      64:	a7 00       	.word	0x00a7	; ????
      66:	aa 00       	.word	0x00aa	; ????
      68:	ad 00       	.word	0x00ad	; ????
      6a:	b0 00       	.word	0x00b0	; ????
      6c:	b3 00       	.word	0x00b3	; ????
      6e:	b6 00       	.word	0x00b6	; ????
      70:	08 00       	.word	0x0008	; ????
      72:	00 00       	nop
      74:	be 92       	st	-X, r11
      76:	24 49       	sbci	r18, 0x94	; 148
      78:	12 3e       	cpi	r17, 0xE2	; 226
      7a:	ab aa       	std	Y+51, r10	; 0x33
      7c:	aa 2a       	or	r10, r26
      7e:	be cd       	rjmp	.-1156   	; 0xfffffbfc <__eeprom_end+0xff7efbfc>
      80:	cc cc       	rjmp	.-1640   	; 0xfffffa1a <__eeprom_end+0xff7efa1a>
      82:	4c 3e       	cpi	r20, 0xEC	; 236
      84:	00 00       	nop
      86:	00 80       	ld	r0, Z
      88:	be ab       	std	Y+54, r27	; 0x36
      8a:	aa aa       	std	Y+50, r10	; 0x32
      8c:	aa 3e       	cpi	r26, 0xEA	; 234
      8e:	00 00       	nop
      90:	00 00       	nop
      92:	bf 00       	.word	0x00bf	; ????
      94:	00 00       	nop
      96:	80 3f       	cpi	r24, 0xF0	; 240
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	00 08       	sbc	r0, r0
      9e:	41 78       	andi	r20, 0x81	; 129
      a0:	d3 bb       	out	0x13, r29	; 19
      a2:	43 87       	std	Z+11, r20	; 0x0b
      a4:	d1 13       	cpse	r29, r17
      a6:	3d 19       	sub	r19, r13
      a8:	0e 3c       	cpi	r16, 0xCE	; 206
      aa:	c3 bd       	out	0x23, r28	; 35
      ac:	42 82       	std	Z+2, r4	; 0x02
      ae:	ad 2b       	or	r26, r29
      b0:	3e 68       	ori	r19, 0x8E	; 142
      b2:	ec 82       	std	Y+4, r14	; 0x04
      b4:	76 be       	out	0x36, r7	; 54
      b6:	d9 8f       	std	Y+25, r29	; 0x19
      b8:	e1 a9       	ldd	r30, Z+49	; 0x31
      ba:	3e 4c       	sbci	r19, 0xCE	; 206
      bc:	80 ef       	ldi	r24, 0xF0	; 240
      be:	ff be       	out	0x3f, r15	; 63
      c0:	01 c4       	rjmp	.+2050   	; 0x8c4 <__vector_2+0x2>
      c2:	ff 7f       	andi	r31, 0xFF	; 255
      c4:	3f 00       	.word	0x003f	; ????
      c6:	00 00       	nop
	...

000000ca <__ctors_end>:
      ca:	11 24       	eor	r1, r1
      cc:	1f be       	out	0x3f, r1	; 63
      ce:	cf ef       	ldi	r28, 0xFF	; 255
      d0:	d4 e0       	ldi	r29, 0x04	; 4
      d2:	de bf       	out	0x3e, r29	; 62
      d4:	cd bf       	out	0x3d, r28	; 61

000000d6 <__do_copy_data>:
      d6:	11 e0       	ldi	r17, 0x01	; 1
      d8:	a0 e0       	ldi	r26, 0x00	; 0
      da:	b1 e0       	ldi	r27, 0x01	; 1
      dc:	e4 e3       	ldi	r30, 0x34	; 52
      de:	f0 e2       	ldi	r31, 0x20	; 32
      e0:	02 c0       	rjmp	.+4      	; 0xe6 <__do_copy_data+0x10>
      e2:	05 90       	lpm	r0, Z+
      e4:	0d 92       	st	X+, r0
      e6:	a6 30       	cpi	r26, 0x06	; 6
      e8:	b1 07       	cpc	r27, r17
      ea:	d9 f7       	brne	.-10     	; 0xe2 <__do_copy_data+0xc>

000000ec <__do_clear_bss>:
      ec:	24 e0       	ldi	r18, 0x04	; 4
      ee:	a6 e0       	ldi	r26, 0x06	; 6
      f0:	b1 e0       	ldi	r27, 0x01	; 1
      f2:	01 c0       	rjmp	.+2      	; 0xf6 <.do_clear_bss_start>

000000f4 <.do_clear_bss_loop>:
      f4:	1d 92       	st	X+, r1

000000f6 <.do_clear_bss_start>:
      f6:	a1 36       	cpi	r26, 0x61	; 97
      f8:	b2 07       	cpc	r27, r18
      fa:	e1 f7       	brne	.-8      	; 0xf4 <.do_clear_bss_loop>
      fc:	0e 94 91 03 	call	0x722	; 0x722 <main>
     100:	0c 94 18 10 	jmp	0x2030	; 0x2030 <_exit>

00000104 <__bad_interrupt>:
     104:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000108 <LCD_Init>:
void printAt(long num, int pos) {
    int pp = pos;
    writeChar( (num % 100) / 10 + '0', pp);
    pp++;
    writeChar( num % 10 + '0', pp);
}
     108:	e1 e6       	ldi	r30, 0x61	; 97
     10a:	f0 e0       	ldi	r31, 0x00	; 0
     10c:	80 e8       	ldi	r24, 0x80	; 128
     10e:	80 83       	st	Z, r24
     110:	10 82       	st	Z, r1
     112:	87 eb       	ldi	r24, 0xB7	; 183
     114:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     118:	87 e0       	ldi	r24, 0x07	; 7
     11a:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     11e:	8f e0       	ldi	r24, 0x0F	; 15
     120:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     124:	80 ec       	ldi	r24, 0xC0	; 192
     126:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     12a:	08 95       	ret

0000012c <getValueArray>:
     12c:	8a 30       	cpi	r24, 0x0A	; 10
     12e:	91 05       	cpc	r25, r1
     130:	00 f5       	brcc	.+64     	; 0x172 <getValueArray+0x46>
     132:	fc 01       	movw	r30, r24
     134:	e2 5d       	subi	r30, 0xD2	; 210
     136:	ff 4f       	sbci	r31, 0xFF	; 255
     138:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__tablejump2__>
     13c:	80 e8       	ldi	r24, 0x80	; 128
     13e:	90 e2       	ldi	r25, 0x20	; 32
     140:	08 95       	ret
     142:	81 e1       	ldi	r24, 0x11	; 17
     144:	9e e1       	ldi	r25, 0x1E	; 30
     146:	08 95       	ret
     148:	81 e1       	ldi	r24, 0x11	; 17
     14a:	9b e1       	ldi	r25, 0x1B	; 27
     14c:	08 95       	ret
     14e:	80 e5       	ldi	r24, 0x50	; 80
     150:	9b e0       	ldi	r25, 0x0B	; 11
     152:	08 95       	ret
     154:	81 e4       	ldi	r24, 0x41	; 65
     156:	9b e1       	ldi	r25, 0x1B	; 27
     158:	08 95       	ret
     15a:	81 e4       	ldi	r24, 0x41	; 65
     15c:	9f e1       	ldi	r25, 0x1F	; 31
     15e:	08 95       	ret
     160:	81 e1       	ldi	r24, 0x11	; 17
     162:	91 e0       	ldi	r25, 0x01	; 1
     164:	08 95       	ret
     166:	81 e5       	ldi	r24, 0x51	; 81
     168:	9f e1       	ldi	r25, 0x1F	; 31
     16a:	08 95       	ret
     16c:	81 e5       	ldi	r24, 0x51	; 81
     16e:	9b e0       	ldi	r25, 0x0B	; 11
     170:	08 95       	ret
     172:	80 e0       	ldi	r24, 0x00	; 0
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	08 95       	ret
     178:	81 e5       	ldi	r24, 0x51	; 81
     17a:	95 e1       	ldi	r25, 0x15	; 21
     17c:	08 95       	ret

0000017e <writeChar>:
     17e:	ef 92       	push	r14
     180:	ff 92       	push	r15
     182:	1f 93       	push	r17
     184:	cf 93       	push	r28
     186:	df 93       	push	r29
     188:	00 d0       	rcall	.+0      	; 0x18a <writeChar+0xc>
     18a:	cd b7       	in	r28, 0x3d	; 61
     18c:	de b7       	in	r29, 0x3e	; 62
     18e:	1a 82       	std	Y+2, r1	; 0x02
     190:	19 82       	std	Y+1, r1	; 0x01
     192:	66 30       	cpi	r22, 0x06	; 6
     194:	71 05       	cpc	r23, r1
     196:	08 f0       	brcs	.+2      	; 0x19a <writeChar+0x1c>
     198:	fe c1       	rjmp	.+1020   	; 0x596 <__stack+0x97>
     19a:	90 ed       	ldi	r25, 0xD0	; 208
     19c:	98 0f       	add	r25, r24
     19e:	9a 30       	cpi	r25, 0x0A	; 10
     1a0:	28 f0       	brcs	.+10     	; 0x1ac <writeChar+0x2e>
     1a2:	8a e0       	ldi	r24, 0x0A	; 10
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	9a 83       	std	Y+2, r25	; 0x02
     1a8:	89 83       	std	Y+1, r24	; 0x01
     1aa:	04 c0       	rjmp	.+8      	; 0x1b4 <writeChar+0x36>
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	c0 97       	sbiw	r24, 0x30	; 48
     1b0:	9a 83       	std	Y+2, r25	; 0x02
     1b2:	89 83       	std	Y+1, r24	; 0x01
     1b4:	61 15       	cp	r22, r1
     1b6:	71 05       	cpc	r23, r1
     1b8:	09 f0       	breq	.+2      	; 0x1bc <writeChar+0x3e>
     1ba:	4e c0       	rjmp	.+156    	; 0x258 <__EEPROM_REGION_LENGTH__+0x58>
     1bc:	0f 2e       	mov	r0, r31
     1be:	fc ee       	ldi	r31, 0xEC	; 236
     1c0:	ef 2e       	mov	r14, r31
     1c2:	f1 2c       	mov	r15, r1
     1c4:	f0 2d       	mov	r31, r0
     1c6:	f7 01       	movw	r30, r14
     1c8:	10 81       	ld	r17, Z
     1ca:	89 81       	ldd	r24, Y+1	; 0x01
     1cc:	9a 81       	ldd	r25, Y+2	; 0x02
     1ce:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     1d2:	10 7f       	andi	r17, 0xF0	; 240
     1d4:	8f 70       	andi	r24, 0x0F	; 15
     1d6:	81 2b       	or	r24, r17
     1d8:	f7 01       	movw	r30, r14
     1da:	80 83       	st	Z, r24
     1dc:	0f 2e       	mov	r0, r31
     1de:	f1 ef       	ldi	r31, 0xF1	; 241
     1e0:	ef 2e       	mov	r14, r31
     1e2:	f1 2c       	mov	r15, r1
     1e4:	f0 2d       	mov	r31, r0
     1e6:	f7 01       	movw	r30, r14
     1e8:	10 81       	ld	r17, Z
     1ea:	89 81       	ldd	r24, Y+1	; 0x01
     1ec:	9a 81       	ldd	r25, Y+2	; 0x02
     1ee:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     1f2:	80 7f       	andi	r24, 0xF0	; 240
     1f4:	99 27       	eor	r25, r25
     1f6:	95 95       	asr	r25
     1f8:	87 95       	ror	r24
     1fa:	95 95       	asr	r25
     1fc:	87 95       	ror	r24
     1fe:	95 95       	asr	r25
     200:	87 95       	ror	r24
     202:	95 95       	asr	r25
     204:	87 95       	ror	r24
     206:	10 7f       	andi	r17, 0xF0	; 240
     208:	81 2b       	or	r24, r17
     20a:	f7 01       	movw	r30, r14
     20c:	80 83       	st	Z, r24
     20e:	0f 2e       	mov	r0, r31
     210:	f6 ef       	ldi	r31, 0xF6	; 246
     212:	ef 2e       	mov	r14, r31
     214:	f1 2c       	mov	r15, r1
     216:	f0 2d       	mov	r31, r0
     218:	f7 01       	movw	r30, r14
     21a:	10 81       	ld	r17, Z
     21c:	89 81       	ldd	r24, Y+1	; 0x01
     21e:	9a 81       	ldd	r25, Y+2	; 0x02
     220:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     224:	88 27       	eor	r24, r24
     226:	9f 70       	andi	r25, 0x0F	; 15
     228:	10 7f       	andi	r17, 0xF0	; 240
     22a:	19 2b       	or	r17, r25
     22c:	f7 01       	movw	r30, r14
     22e:	10 83       	st	Z, r17
     230:	0f 2e       	mov	r0, r31
     232:	fb ef       	ldi	r31, 0xFB	; 251
     234:	ef 2e       	mov	r14, r31
     236:	f1 2c       	mov	r15, r1
     238:	f0 2d       	mov	r31, r0
     23a:	f7 01       	movw	r30, r14
     23c:	10 81       	ld	r17, Z
     23e:	89 81       	ldd	r24, Y+1	; 0x01
     240:	9a 81       	ldd	r25, Y+2	; 0x02
     242:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     246:	10 7f       	andi	r17, 0xF0	; 240
     248:	95 95       	asr	r25
     24a:	95 95       	asr	r25
     24c:	95 95       	asr	r25
     24e:	95 95       	asr	r25
     250:	91 2b       	or	r25, r17
     252:	f7 01       	movw	r30, r14
     254:	90 83       	st	Z, r25
     256:	9f c1       	rjmp	.+830    	; 0x596 <__stack+0x97>
     258:	61 30       	cpi	r22, 0x01	; 1
     25a:	71 05       	cpc	r23, r1
     25c:	09 f0       	breq	.+2      	; 0x260 <__EEPROM_REGION_LENGTH__+0x60>
     25e:	50 c0       	rjmp	.+160    	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
     260:	0f 2e       	mov	r0, r31
     262:	fc ee       	ldi	r31, 0xEC	; 236
     264:	ef 2e       	mov	r14, r31
     266:	f1 2c       	mov	r15, r1
     268:	f0 2d       	mov	r31, r0
     26a:	f7 01       	movw	r30, r14
     26c:	10 81       	ld	r17, Z
     26e:	89 81       	ldd	r24, Y+1	; 0x01
     270:	9a 81       	ldd	r25, Y+2	; 0x02
     272:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     276:	1f 70       	andi	r17, 0x0F	; 15
     278:	82 95       	swap	r24
     27a:	92 95       	swap	r25
     27c:	90 7f       	andi	r25, 0xF0	; 240
     27e:	98 27       	eor	r25, r24
     280:	80 7f       	andi	r24, 0xF0	; 240
     282:	98 27       	eor	r25, r24
     284:	81 2b       	or	r24, r17
     286:	f7 01       	movw	r30, r14
     288:	80 83       	st	Z, r24
     28a:	0f 2e       	mov	r0, r31
     28c:	f1 ef       	ldi	r31, 0xF1	; 241
     28e:	ef 2e       	mov	r14, r31
     290:	f1 2c       	mov	r15, r1
     292:	f0 2d       	mov	r31, r0
     294:	f7 01       	movw	r30, r14
     296:	10 81       	ld	r17, Z
     298:	89 81       	ldd	r24, Y+1	; 0x01
     29a:	9a 81       	ldd	r25, Y+2	; 0x02
     29c:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     2a0:	1f 70       	andi	r17, 0x0F	; 15
     2a2:	80 7f       	andi	r24, 0xF0	; 240
     2a4:	81 2b       	or	r24, r17
     2a6:	f7 01       	movw	r30, r14
     2a8:	80 83       	st	Z, r24
     2aa:	0f 2e       	mov	r0, r31
     2ac:	f6 ef       	ldi	r31, 0xF6	; 246
     2ae:	ef 2e       	mov	r14, r31
     2b0:	f1 2c       	mov	r15, r1
     2b2:	f0 2d       	mov	r31, r0
     2b4:	f7 01       	movw	r30, r14
     2b6:	10 81       	ld	r17, Z
     2b8:	89 81       	ldd	r24, Y+1	; 0x01
     2ba:	9a 81       	ldd	r25, Y+2	; 0x02
     2bc:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     2c0:	88 27       	eor	r24, r24
     2c2:	9f 70       	andi	r25, 0x0F	; 15
     2c4:	95 95       	asr	r25
     2c6:	87 95       	ror	r24
     2c8:	95 95       	asr	r25
     2ca:	87 95       	ror	r24
     2cc:	95 95       	asr	r25
     2ce:	87 95       	ror	r24
     2d0:	95 95       	asr	r25
     2d2:	87 95       	ror	r24
     2d4:	1f 70       	andi	r17, 0x0F	; 15
     2d6:	81 2b       	or	r24, r17
     2d8:	f7 01       	movw	r30, r14
     2da:	80 83       	st	Z, r24
     2dc:	0f 2e       	mov	r0, r31
     2de:	fb ef       	ldi	r31, 0xFB	; 251
     2e0:	ef 2e       	mov	r14, r31
     2e2:	f1 2c       	mov	r15, r1
     2e4:	f0 2d       	mov	r31, r0
     2e6:	f7 01       	movw	r30, r14
     2e8:	10 81       	ld	r17, Z
     2ea:	89 81       	ldd	r24, Y+1	; 0x01
     2ec:	9a 81       	ldd	r25, Y+2	; 0x02
     2ee:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     2f2:	88 27       	eor	r24, r24
     2f4:	90 7f       	andi	r25, 0xF0	; 240
     2f6:	1f 70       	andi	r17, 0x0F	; 15
     2f8:	19 2b       	or	r17, r25
     2fa:	f7 01       	movw	r30, r14
     2fc:	10 83       	st	Z, r17
     2fe:	4b c1       	rjmp	.+662    	; 0x596 <__stack+0x97>
     300:	62 30       	cpi	r22, 0x02	; 2
     302:	71 05       	cpc	r23, r1
     304:	09 f0       	breq	.+2      	; 0x308 <__EEPROM_REGION_LENGTH__+0x108>
     306:	4e c0       	rjmp	.+156    	; 0x3a4 <__EEPROM_REGION_LENGTH__+0x1a4>
     308:	0f 2e       	mov	r0, r31
     30a:	fd ee       	ldi	r31, 0xED	; 237
     30c:	ef 2e       	mov	r14, r31
     30e:	f1 2c       	mov	r15, r1
     310:	f0 2d       	mov	r31, r0
     312:	f7 01       	movw	r30, r14
     314:	10 81       	ld	r17, Z
     316:	89 81       	ldd	r24, Y+1	; 0x01
     318:	9a 81       	ldd	r25, Y+2	; 0x02
     31a:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     31e:	10 7f       	andi	r17, 0xF0	; 240
     320:	8f 70       	andi	r24, 0x0F	; 15
     322:	81 2b       	or	r24, r17
     324:	f7 01       	movw	r30, r14
     326:	80 83       	st	Z, r24
     328:	0f 2e       	mov	r0, r31
     32a:	f2 ef       	ldi	r31, 0xF2	; 242
     32c:	ef 2e       	mov	r14, r31
     32e:	f1 2c       	mov	r15, r1
     330:	f0 2d       	mov	r31, r0
     332:	f7 01       	movw	r30, r14
     334:	10 81       	ld	r17, Z
     336:	89 81       	ldd	r24, Y+1	; 0x01
     338:	9a 81       	ldd	r25, Y+2	; 0x02
     33a:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     33e:	80 7f       	andi	r24, 0xF0	; 240
     340:	99 27       	eor	r25, r25
     342:	95 95       	asr	r25
     344:	87 95       	ror	r24
     346:	95 95       	asr	r25
     348:	87 95       	ror	r24
     34a:	95 95       	asr	r25
     34c:	87 95       	ror	r24
     34e:	95 95       	asr	r25
     350:	87 95       	ror	r24
     352:	10 7f       	andi	r17, 0xF0	; 240
     354:	81 2b       	or	r24, r17
     356:	f7 01       	movw	r30, r14
     358:	80 83       	st	Z, r24
     35a:	0f 2e       	mov	r0, r31
     35c:	f7 ef       	ldi	r31, 0xF7	; 247
     35e:	ef 2e       	mov	r14, r31
     360:	f1 2c       	mov	r15, r1
     362:	f0 2d       	mov	r31, r0
     364:	f7 01       	movw	r30, r14
     366:	10 81       	ld	r17, Z
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	9a 81       	ldd	r25, Y+2	; 0x02
     36c:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     370:	88 27       	eor	r24, r24
     372:	9f 70       	andi	r25, 0x0F	; 15
     374:	10 7f       	andi	r17, 0xF0	; 240
     376:	19 2b       	or	r17, r25
     378:	f7 01       	movw	r30, r14
     37a:	10 83       	st	Z, r17
     37c:	0f 2e       	mov	r0, r31
     37e:	fc ef       	ldi	r31, 0xFC	; 252
     380:	ef 2e       	mov	r14, r31
     382:	f1 2c       	mov	r15, r1
     384:	f0 2d       	mov	r31, r0
     386:	f7 01       	movw	r30, r14
     388:	10 81       	ld	r17, Z
     38a:	89 81       	ldd	r24, Y+1	; 0x01
     38c:	9a 81       	ldd	r25, Y+2	; 0x02
     38e:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     392:	10 7f       	andi	r17, 0xF0	; 240
     394:	95 95       	asr	r25
     396:	95 95       	asr	r25
     398:	95 95       	asr	r25
     39a:	95 95       	asr	r25
     39c:	91 2b       	or	r25, r17
     39e:	f7 01       	movw	r30, r14
     3a0:	90 83       	st	Z, r25
     3a2:	f9 c0       	rjmp	.+498    	; 0x596 <__stack+0x97>
     3a4:	63 30       	cpi	r22, 0x03	; 3
     3a6:	71 05       	cpc	r23, r1
     3a8:	09 f0       	breq	.+2      	; 0x3ac <__EEPROM_REGION_LENGTH__+0x1ac>
     3aa:	50 c0       	rjmp	.+160    	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
     3ac:	0f 2e       	mov	r0, r31
     3ae:	fd ee       	ldi	r31, 0xED	; 237
     3b0:	ef 2e       	mov	r14, r31
     3b2:	f1 2c       	mov	r15, r1
     3b4:	f0 2d       	mov	r31, r0
     3b6:	f7 01       	movw	r30, r14
     3b8:	10 81       	ld	r17, Z
     3ba:	89 81       	ldd	r24, Y+1	; 0x01
     3bc:	9a 81       	ldd	r25, Y+2	; 0x02
     3be:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     3c2:	1f 70       	andi	r17, 0x0F	; 15
     3c4:	82 95       	swap	r24
     3c6:	92 95       	swap	r25
     3c8:	90 7f       	andi	r25, 0xF0	; 240
     3ca:	98 27       	eor	r25, r24
     3cc:	80 7f       	andi	r24, 0xF0	; 240
     3ce:	98 27       	eor	r25, r24
     3d0:	81 2b       	or	r24, r17
     3d2:	f7 01       	movw	r30, r14
     3d4:	80 83       	st	Z, r24
     3d6:	0f 2e       	mov	r0, r31
     3d8:	f2 ef       	ldi	r31, 0xF2	; 242
     3da:	ef 2e       	mov	r14, r31
     3dc:	f1 2c       	mov	r15, r1
     3de:	f0 2d       	mov	r31, r0
     3e0:	f7 01       	movw	r30, r14
     3e2:	10 81       	ld	r17, Z
     3e4:	89 81       	ldd	r24, Y+1	; 0x01
     3e6:	9a 81       	ldd	r25, Y+2	; 0x02
     3e8:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     3ec:	1f 70       	andi	r17, 0x0F	; 15
     3ee:	80 7f       	andi	r24, 0xF0	; 240
     3f0:	81 2b       	or	r24, r17
     3f2:	f7 01       	movw	r30, r14
     3f4:	80 83       	st	Z, r24
     3f6:	0f 2e       	mov	r0, r31
     3f8:	f7 ef       	ldi	r31, 0xF7	; 247
     3fa:	ef 2e       	mov	r14, r31
     3fc:	f1 2c       	mov	r15, r1
     3fe:	f0 2d       	mov	r31, r0
     400:	f7 01       	movw	r30, r14
     402:	10 81       	ld	r17, Z
     404:	89 81       	ldd	r24, Y+1	; 0x01
     406:	9a 81       	ldd	r25, Y+2	; 0x02
     408:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     40c:	88 27       	eor	r24, r24
     40e:	9f 70       	andi	r25, 0x0F	; 15
     410:	95 95       	asr	r25
     412:	87 95       	ror	r24
     414:	95 95       	asr	r25
     416:	87 95       	ror	r24
     418:	95 95       	asr	r25
     41a:	87 95       	ror	r24
     41c:	95 95       	asr	r25
     41e:	87 95       	ror	r24
     420:	1f 70       	andi	r17, 0x0F	; 15
     422:	81 2b       	or	r24, r17
     424:	f7 01       	movw	r30, r14
     426:	80 83       	st	Z, r24
     428:	0f 2e       	mov	r0, r31
     42a:	fc ef       	ldi	r31, 0xFC	; 252
     42c:	ef 2e       	mov	r14, r31
     42e:	f1 2c       	mov	r15, r1
     430:	f0 2d       	mov	r31, r0
     432:	f7 01       	movw	r30, r14
     434:	10 81       	ld	r17, Z
     436:	89 81       	ldd	r24, Y+1	; 0x01
     438:	9a 81       	ldd	r25, Y+2	; 0x02
     43a:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     43e:	88 27       	eor	r24, r24
     440:	90 7f       	andi	r25, 0xF0	; 240
     442:	1f 70       	andi	r17, 0x0F	; 15
     444:	19 2b       	or	r17, r25
     446:	f7 01       	movw	r30, r14
     448:	10 83       	st	Z, r17
     44a:	a5 c0       	rjmp	.+330    	; 0x596 <__stack+0x97>
     44c:	64 30       	cpi	r22, 0x04	; 4
     44e:	71 05       	cpc	r23, r1
     450:	09 f0       	breq	.+2      	; 0x454 <__DATA_REGION_LENGTH__+0x54>
     452:	4e c0       	rjmp	.+156    	; 0x4f0 <__DATA_REGION_LENGTH__+0xf0>
     454:	0f 2e       	mov	r0, r31
     456:	fe ee       	ldi	r31, 0xEE	; 238
     458:	ef 2e       	mov	r14, r31
     45a:	f1 2c       	mov	r15, r1
     45c:	f0 2d       	mov	r31, r0
     45e:	f7 01       	movw	r30, r14
     460:	10 81       	ld	r17, Z
     462:	89 81       	ldd	r24, Y+1	; 0x01
     464:	9a 81       	ldd	r25, Y+2	; 0x02
     466:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     46a:	10 7f       	andi	r17, 0xF0	; 240
     46c:	8f 70       	andi	r24, 0x0F	; 15
     46e:	81 2b       	or	r24, r17
     470:	f7 01       	movw	r30, r14
     472:	80 83       	st	Z, r24
     474:	0f 2e       	mov	r0, r31
     476:	f3 ef       	ldi	r31, 0xF3	; 243
     478:	ef 2e       	mov	r14, r31
     47a:	f1 2c       	mov	r15, r1
     47c:	f0 2d       	mov	r31, r0
     47e:	f7 01       	movw	r30, r14
     480:	10 81       	ld	r17, Z
     482:	89 81       	ldd	r24, Y+1	; 0x01
     484:	9a 81       	ldd	r25, Y+2	; 0x02
     486:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     48a:	80 7f       	andi	r24, 0xF0	; 240
     48c:	99 27       	eor	r25, r25
     48e:	95 95       	asr	r25
     490:	87 95       	ror	r24
     492:	95 95       	asr	r25
     494:	87 95       	ror	r24
     496:	95 95       	asr	r25
     498:	87 95       	ror	r24
     49a:	95 95       	asr	r25
     49c:	87 95       	ror	r24
     49e:	10 7f       	andi	r17, 0xF0	; 240
     4a0:	81 2b       	or	r24, r17
     4a2:	f7 01       	movw	r30, r14
     4a4:	80 83       	st	Z, r24
     4a6:	0f 2e       	mov	r0, r31
     4a8:	f8 ef       	ldi	r31, 0xF8	; 248
     4aa:	ef 2e       	mov	r14, r31
     4ac:	f1 2c       	mov	r15, r1
     4ae:	f0 2d       	mov	r31, r0
     4b0:	f7 01       	movw	r30, r14
     4b2:	10 81       	ld	r17, Z
     4b4:	89 81       	ldd	r24, Y+1	; 0x01
     4b6:	9a 81       	ldd	r25, Y+2	; 0x02
     4b8:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     4bc:	88 27       	eor	r24, r24
     4be:	9f 70       	andi	r25, 0x0F	; 15
     4c0:	10 7f       	andi	r17, 0xF0	; 240
     4c2:	19 2b       	or	r17, r25
     4c4:	f7 01       	movw	r30, r14
     4c6:	10 83       	st	Z, r17
     4c8:	0f 2e       	mov	r0, r31
     4ca:	fd ef       	ldi	r31, 0xFD	; 253
     4cc:	ef 2e       	mov	r14, r31
     4ce:	f1 2c       	mov	r15, r1
     4d0:	f0 2d       	mov	r31, r0
     4d2:	f7 01       	movw	r30, r14
     4d4:	10 81       	ld	r17, Z
     4d6:	89 81       	ldd	r24, Y+1	; 0x01
     4d8:	9a 81       	ldd	r25, Y+2	; 0x02
     4da:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     4de:	10 7f       	andi	r17, 0xF0	; 240
     4e0:	95 95       	asr	r25
     4e2:	95 95       	asr	r25
     4e4:	95 95       	asr	r25
     4e6:	95 95       	asr	r25
     4e8:	91 2b       	or	r25, r17
     4ea:	f7 01       	movw	r30, r14
     4ec:	90 83       	st	Z, r25
     4ee:	53 c0       	rjmp	.+166    	; 0x596 <__stack+0x97>
     4f0:	65 30       	cpi	r22, 0x05	; 5
     4f2:	71 05       	cpc	r23, r1
     4f4:	09 f0       	breq	.+2      	; 0x4f8 <__DATA_REGION_LENGTH__+0xf8>
     4f6:	4f c0       	rjmp	.+158    	; 0x596 <__stack+0x97>
     4f8:	0f 2e       	mov	r0, r31
     4fa:	fe ee       	ldi	r31, 0xEE	; 238
     4fc:	ef 2e       	mov	r14, r31
     4fe:	f1 2c       	mov	r15, r1
     500:	f0 2d       	mov	r31, r0
     502:	f7 01       	movw	r30, r14
     504:	10 81       	ld	r17, Z
     506:	89 81       	ldd	r24, Y+1	; 0x01
     508:	9a 81       	ldd	r25, Y+2	; 0x02
     50a:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     50e:	1f 70       	andi	r17, 0x0F	; 15
     510:	82 95       	swap	r24
     512:	92 95       	swap	r25
     514:	90 7f       	andi	r25, 0xF0	; 240
     516:	98 27       	eor	r25, r24
     518:	80 7f       	andi	r24, 0xF0	; 240
     51a:	98 27       	eor	r25, r24
     51c:	81 2b       	or	r24, r17
     51e:	f7 01       	movw	r30, r14
     520:	80 83       	st	Z, r24
     522:	0f 2e       	mov	r0, r31
     524:	f3 ef       	ldi	r31, 0xF3	; 243
     526:	ef 2e       	mov	r14, r31
     528:	f1 2c       	mov	r15, r1
     52a:	f0 2d       	mov	r31, r0
     52c:	f7 01       	movw	r30, r14
     52e:	10 81       	ld	r17, Z
     530:	89 81       	ldd	r24, Y+1	; 0x01
     532:	9a 81       	ldd	r25, Y+2	; 0x02
     534:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     538:	1f 70       	andi	r17, 0x0F	; 15
     53a:	80 7f       	andi	r24, 0xF0	; 240
     53c:	81 2b       	or	r24, r17
     53e:	f7 01       	movw	r30, r14
     540:	80 83       	st	Z, r24
     542:	0f 2e       	mov	r0, r31
     544:	f8 ef       	ldi	r31, 0xF8	; 248
     546:	ef 2e       	mov	r14, r31
     548:	f1 2c       	mov	r15, r1
     54a:	f0 2d       	mov	r31, r0
     54c:	f7 01       	movw	r30, r14
     54e:	10 81       	ld	r17, Z
     550:	89 81       	ldd	r24, Y+1	; 0x01
     552:	9a 81       	ldd	r25, Y+2	; 0x02
     554:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     558:	88 27       	eor	r24, r24
     55a:	9f 70       	andi	r25, 0x0F	; 15
     55c:	95 95       	asr	r25
     55e:	87 95       	ror	r24
     560:	95 95       	asr	r25
     562:	87 95       	ror	r24
     564:	95 95       	asr	r25
     566:	87 95       	ror	r24
     568:	95 95       	asr	r25
     56a:	87 95       	ror	r24
     56c:	1f 70       	andi	r17, 0x0F	; 15
     56e:	81 2b       	or	r24, r17
     570:	f7 01       	movw	r30, r14
     572:	80 83       	st	Z, r24
     574:	0f 2e       	mov	r0, r31
     576:	fd ef       	ldi	r31, 0xFD	; 253
     578:	ef 2e       	mov	r14, r31
     57a:	f1 2c       	mov	r15, r1
     57c:	f0 2d       	mov	r31, r0
     57e:	f7 01       	movw	r30, r14
     580:	10 81       	ld	r17, Z
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	9a 81       	ldd	r25, Y+2	; 0x02
     586:	0e 94 96 00 	call	0x12c	; 0x12c <getValueArray>
     58a:	88 27       	eor	r24, r24
     58c:	90 7f       	andi	r25, 0xF0	; 240
     58e:	1f 70       	andi	r17, 0x0F	; 15
     590:	19 2b       	or	r17, r25
     592:	f7 01       	movw	r30, r14
     594:	10 83       	st	Z, r17
     596:	0f 90       	pop	r0
     598:	0f 90       	pop	r0
     59a:	df 91       	pop	r29
     59c:	cf 91       	pop	r28
     59e:	1f 91       	pop	r17
     5a0:	ff 90       	pop	r15
     5a2:	ef 90       	pop	r14
     5a4:	08 95       	ret

000005a6 <writeLong>:


void writeLong(long i) {
     5a6:	4f 92       	push	r4
     5a8:	5f 92       	push	r5
     5aa:	6f 92       	push	r6
     5ac:	7f 92       	push	r7
     5ae:	8f 92       	push	r8
     5b0:	9f 92       	push	r9
     5b2:	af 92       	push	r10
     5b4:	bf 92       	push	r11
     5b6:	cf 92       	push	r12
     5b8:	df 92       	push	r13
     5ba:	ef 92       	push	r14
     5bc:	ff 92       	push	r15
     5be:	0f 93       	push	r16
     5c0:	1f 93       	push	r17
     5c2:	cf 93       	push	r28
     5c4:	df 93       	push	r29
     5c6:	cd b7       	in	r28, 0x3d	; 61
     5c8:	de b7       	in	r29, 0x3e	; 62
     5ca:	62 97       	sbiw	r28, 0x12	; 18
     5cc:	0f b6       	in	r0, 0x3f	; 63
     5ce:	f8 94       	cli
     5d0:	de bf       	out	0x3e, r29	; 62
     5d2:	0f be       	out	0x3f, r0	; 63
     5d4:	cd bf       	out	0x3d, r28	; 61
     5d6:	6b 87       	std	Y+11, r22	; 0x0b
     5d8:	7c 87       	std	Y+12, r23	; 0x0c
     5da:	8d 87       	std	Y+13, r24	; 0x0d
     5dc:	9e 87       	std	Y+14, r25	; 0x0e
	int32_t iDigits;
	if(i==0){iDigits=1;}
     5de:	61 15       	cp	r22, r1
     5e0:	71 05       	cpc	r23, r1
     5e2:	81 05       	cpc	r24, r1
     5e4:	91 05       	cpc	r25, r1
     5e6:	c1 f0       	breq	.+48     	; 0x618 <writeLong+0x72>

	else{iDigits = floor(log10( i )) + 1;}
     5e8:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <__floatsisf>
     5ec:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <log10>
     5f0:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <floor>
     5f4:	20 e0       	ldi	r18, 0x00	; 0
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	40 e8       	ldi	r20, 0x80	; 128
     5fa:	5f e3       	ldi	r21, 0x3F	; 63
     5fc:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <__addsf3>
     600:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__fixsfsi>
     604:	6f 87       	std	Y+15, r22	; 0x0f
     606:	78 8b       	std	Y+16, r23	; 0x10
     608:	89 8b       	std	Y+17, r24	; 0x11
     60a:	9a 8b       	std	Y+18, r25	; 0x12

	char Number[6];
	
	
	for(int j=0; j<iDigits; j++){
     60c:	16 16       	cp	r1, r22
     60e:	17 06       	cpc	r1, r23
     610:	18 06       	cpc	r1, r24
     612:	19 06       	cpc	r1, r25
     614:	4c f0       	brlt	.+18     	; 0x628 <writeLong+0x82>
     616:	68 c0       	rjmp	.+208    	; 0x6e8 <writeLong+0x142>
}


void writeLong(long i) {
	int32_t iDigits;
	if(i==0){iDigits=1;}
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	a0 e0       	ldi	r26, 0x00	; 0
     61e:	b0 e0       	ldi	r27, 0x00	; 0
     620:	8f 87       	std	Y+15, r24	; 0x0f
     622:	98 8b       	std	Y+16, r25	; 0x10
     624:	a9 8b       	std	Y+17, r26	; 0x11
     626:	ba 8b       	std	Y+18, r27	; 0x12
     628:	af 84       	ldd	r10, Y+15	; 0x0f
     62a:	b8 88       	ldd	r11, Y+16	; 0x10
     62c:	91 e0       	ldi	r25, 0x01	; 1
     62e:	a9 1a       	sub	r10, r25
     630:	b1 08       	sbc	r11, r1
     632:	de 01       	movw	r26, r28
     634:	11 96       	adiw	r26, 0x01	; 1
     636:	4d 01       	movw	r8, r26
     638:	41 2c       	mov	r4, r1
     63a:	51 2c       	mov	r5, r1
     63c:	32 01       	movw	r6, r4
	
	for(int j=0; j<iDigits; j++){
		 volatile int32_t i_copy = i;

		for(int k=iDigits-j-1; k>0; k--){
			i_copy = i_copy/10;
     63e:	0f 2e       	mov	r0, r31
     640:	fa e0       	ldi	r31, 0x0A	; 10
     642:	cf 2e       	mov	r12, r31
     644:	d1 2c       	mov	r13, r1
     646:	e1 2c       	mov	r14, r1
     648:	f1 2c       	mov	r15, r1
     64a:	f0 2d       	mov	r31, r0

	char Number[6];
	
	
	for(int j=0; j<iDigits; j++){
		 volatile int32_t i_copy = i;
     64c:	8b 85       	ldd	r24, Y+11	; 0x0b
     64e:	9c 85       	ldd	r25, Y+12	; 0x0c
     650:	ad 85       	ldd	r26, Y+13	; 0x0d
     652:	be 85       	ldd	r27, Y+14	; 0x0e
     654:	8f 83       	std	Y+7, r24	; 0x07
     656:	98 87       	std	Y+8, r25	; 0x08
     658:	a9 87       	std	Y+9, r26	; 0x09
     65a:	ba 87       	std	Y+10, r27	; 0x0a

		for(int k=iDigits-j-1; k>0; k--){
     65c:	85 01       	movw	r16, r10
     65e:	1a 14       	cp	r1, r10
     660:	1b 04       	cpc	r1, r11
     662:	7c f4       	brge	.+30     	; 0x682 <writeLong+0xdc>
			i_copy = i_copy/10;
     664:	6f 81       	ldd	r22, Y+7	; 0x07
     666:	78 85       	ldd	r23, Y+8	; 0x08
     668:	89 85       	ldd	r24, Y+9	; 0x09
     66a:	9a 85       	ldd	r25, Y+10	; 0x0a
     66c:	a7 01       	movw	r20, r14
     66e:	96 01       	movw	r18, r12
     670:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <__divmodsi4>
     674:	2f 83       	std	Y+7, r18	; 0x07
     676:	38 87       	std	Y+8, r19	; 0x08
     678:	49 87       	std	Y+9, r20	; 0x09
     67a:	5a 87       	std	Y+10, r21	; 0x0a
	
	
	for(int j=0; j<iDigits; j++){
		 volatile int32_t i_copy = i;

		for(int k=iDigits-j-1; k>0; k--){
     67c:	01 50       	subi	r16, 0x01	; 1
     67e:	11 09       	sbc	r17, r1
     680:	89 f7       	brne	.-30     	; 0x664 <writeLong+0xbe>
			i_copy = i_copy/10;

		} i_copy= i_copy%10;
     682:	6f 81       	ldd	r22, Y+7	; 0x07
     684:	78 85       	ldd	r23, Y+8	; 0x08
     686:	89 85       	ldd	r24, Y+9	; 0x09
     688:	9a 85       	ldd	r25, Y+10	; 0x0a
     68a:	a7 01       	movw	r20, r14
     68c:	96 01       	movw	r18, r12
     68e:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <__divmodsi4>
     692:	6f 83       	std	Y+7, r22	; 0x07
     694:	78 87       	std	Y+8, r23	; 0x08
     696:	89 87       	std	Y+9, r24	; 0x09
     698:	9a 87       	std	Y+10, r25	; 0x0a


		Number[j] = (char) (i_copy+48);
     69a:	8f 81       	ldd	r24, Y+7	; 0x07
     69c:	98 85       	ldd	r25, Y+8	; 0x08
     69e:	a9 85       	ldd	r26, Y+9	; 0x09
     6a0:	ba 85       	ldd	r27, Y+10	; 0x0a
     6a2:	80 5d       	subi	r24, 0xD0	; 208
     6a4:	d4 01       	movw	r26, r8
     6a6:	8d 93       	st	X+, r24
     6a8:	4d 01       	movw	r8, r26
     6aa:	b1 e0       	ldi	r27, 0x01	; 1
     6ac:	ab 1a       	sub	r10, r27
     6ae:	b1 08       	sbc	r11, r1
     6b0:	ef ef       	ldi	r30, 0xFF	; 255
     6b2:	4e 1a       	sub	r4, r30
     6b4:	5e 0a       	sbc	r5, r30
     6b6:	6e 0a       	sbc	r6, r30
     6b8:	7e 0a       	sbc	r7, r30
	else{iDigits = floor(log10( i )) + 1;}

	char Number[6];
	
	
	for(int j=0; j<iDigits; j++){
     6ba:	8f 85       	ldd	r24, Y+15	; 0x0f
     6bc:	98 89       	ldd	r25, Y+16	; 0x10
     6be:	a9 89       	ldd	r26, Y+17	; 0x11
     6c0:	ba 89       	ldd	r27, Y+18	; 0x12
     6c2:	48 16       	cp	r4, r24
     6c4:	59 06       	cpc	r5, r25
     6c6:	6a 06       	cpc	r6, r26
     6c8:	7b 06       	cpc	r7, r27
     6ca:	0c f4       	brge	.+2      	; 0x6ce <writeLong+0x128>
     6cc:	bf cf       	rjmp	.-130    	; 0x64c <writeLong+0xa6>
     6ce:	0c c0       	rjmp	.+24     	; 0x6e8 <writeLong+0x142>
	}
	

	for(int j = 0; j<6; j++){
		
		writeChar(Number[j],j);
     6d0:	b8 01       	movw	r22, r16
     6d2:	d7 01       	movw	r26, r14
     6d4:	8d 91       	ld	r24, X+
     6d6:	7d 01       	movw	r14, r26
     6d8:	0e 94 bf 00 	call	0x17e	; 0x17e <writeChar>
		Number[j] = (char) (i_copy+48);
		//printf("print %c \n",Number[j]);
	}
	

	for(int j = 0; j<6; j++){
     6dc:	0f 5f       	subi	r16, 0xFF	; 255
     6de:	1f 4f       	sbci	r17, 0xFF	; 255
     6e0:	06 30       	cpi	r16, 0x06	; 6
     6e2:	11 05       	cpc	r17, r1
     6e4:	a9 f7       	brne	.-22     	; 0x6d0 <writeLong+0x12a>
     6e6:	06 c0       	rjmp	.+12     	; 0x6f4 <writeLong+0x14e>
     6e8:	fe 01       	movw	r30, r28
     6ea:	31 96       	adiw	r30, 0x01	; 1
     6ec:	7f 01       	movw	r14, r30
}


void writeLong(long i) {
	int32_t iDigits;
	if(i==0){iDigits=1;}
     6ee:	00 e0       	ldi	r16, 0x00	; 0
     6f0:	10 e0       	ldi	r17, 0x00	; 0
     6f2:	ee cf       	rjmp	.-36     	; 0x6d0 <writeLong+0x12a>
		writeChar(Number[j],j);
		//printf("pos: %d",j);
		//printf(" Value: %c \n",Number[j]);
	}
	
     6f4:	62 96       	adiw	r28, 0x12	; 18
     6f6:	0f b6       	in	r0, 0x3f	; 63
     6f8:	f8 94       	cli
     6fa:	de bf       	out	0x3e, r29	; 62
     6fc:	0f be       	out	0x3f, r0	; 63
     6fe:	cd bf       	out	0x3d, r28	; 61
     700:	df 91       	pop	r29
     702:	cf 91       	pop	r28
     704:	1f 91       	pop	r17
     706:	0f 91       	pop	r16
     708:	ff 90       	pop	r15
     70a:	ef 90       	pop	r14
     70c:	df 90       	pop	r13
     70e:	cf 90       	pop	r12
     710:	bf 90       	pop	r11
     712:	af 90       	pop	r10
     714:	9f 90       	pop	r9
     716:	8f 90       	pop	r8
     718:	7f 90       	pop	r7
     71a:	6f 90       	pop	r6
     71c:	5f 90       	pop	r5
     71e:	4f 90       	pop	r4
     720:	08 95       	ret

00000722 <main>:



int main( void )
{
    LCD_Init();
     722:	0e 94 84 00 	call	0x108	; 0x108 <LCD_Init>
    USART_Init(&serial);
     726:	86 e0       	ldi	r24, 0x06	; 6
     728:	91 e0       	ldi	r25, 0x01	; 1
     72a:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <USART_Init>
    while (1)
    {
        USART_Echo();
     72e:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <USART_Echo>
     732:	fd cf       	rjmp	.-6      	; 0x72e <main+0xc>

00000734 <dispatch>:

Thread pop(Thread *stack) {
    Thread t = *stack;
    *stack = t->next;
    return t;
}
     734:	cf 93       	push	r28
     736:	df 93       	push	r29
     738:	00 d0       	rcall	.+0      	; 0x73a <dispatch+0x6>
     73a:	cd b7       	in	r28, 0x3d	; 61
     73c:	de b7       	in	r29, 0x3e	; 62
     73e:	9a 83       	std	Y+2, r25	; 0x02
     740:	89 83       	std	Y+1, r24	; 0x01
     742:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     746:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     74a:	06 96       	adiw	r24, 0x06	; 6
     74c:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <setjmp>
     750:	89 2b       	or	r24, r25
     752:	59 f4       	brne	.+22     	; 0x76a <dispatch+0x36>
     754:	89 81       	ldd	r24, Y+1	; 0x01
     756:	9a 81       	ldd	r25, Y+2	; 0x02
     758:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     75c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     760:	61 e0       	ldi	r22, 0x01	; 1
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	06 96       	adiw	r24, 0x06	; 6
     766:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <longjmp>
     76a:	0f 90       	pop	r0
     76c:	0f 90       	pop	r0
     76e:	df 91       	pop	r29
     770:	cf 91       	pop	r28
     772:	08 95       	ret

00000774 <schedule>:
     774:	0f 93       	push	r16
     776:	1f 93       	push	r17
     778:	cf 93       	push	r28
     77a:	df 93       	push	r29
     77c:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <msgQ>
     780:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <msgQ+0x1>
     784:	30 97       	sbiw	r30, 0x00	; 0
     786:	61 f1       	breq	.+88     	; 0x7e0 <schedule+0x6c>
     788:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     78c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     790:	00 97       	sbiw	r24, 0x00	; 0
     792:	31 f1       	breq	.+76     	; 0x7e0 <schedule+0x6c>
     794:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     798:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     79c:	aa 81       	ldd	r26, Y+2	; 0x02
     79e:	bb 81       	ldd	r27, Y+3	; 0x03
     7a0:	10 97       	sbiw	r26, 0x00	; 0
     7a2:	79 f0       	breq	.+30     	; 0x7c2 <schedule+0x4e>
     7a4:	46 81       	ldd	r20, Z+6	; 0x06
     7a6:	57 81       	ldd	r21, Z+7	; 0x07
     7a8:	60 85       	ldd	r22, Z+8	; 0x08
     7aa:	71 85       	ldd	r23, Z+9	; 0x09
     7ac:	16 96       	adiw	r26, 0x06	; 6
     7ae:	0d 91       	ld	r16, X+
     7b0:	1d 91       	ld	r17, X+
     7b2:	2d 91       	ld	r18, X+
     7b4:	3c 91       	ld	r19, X
     7b6:	19 97       	sbiw	r26, 0x09	; 9
     7b8:	40 1b       	sub	r20, r16
     7ba:	51 0b       	sbc	r21, r17
     7bc:	62 0b       	sbc	r22, r18
     7be:	73 0b       	sbc	r23, r19
     7c0:	7a f4       	brpl	.+30     	; 0x7e0 <schedule+0x6c>
     7c2:	fc 01       	movw	r30, r24
     7c4:	20 81       	ld	r18, Z
     7c6:	31 81       	ldd	r19, Z+1	; 0x01
     7c8:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     7cc:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     7d0:	d1 83       	std	Z+1, r29	; 0x01
     7d2:	c0 83       	st	Z, r28
     7d4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     7d8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     7dc:	0e 94 9a 03 	call	0x734	; 0x734 <dispatch>
     7e0:	df 91       	pop	r29
     7e2:	cf 91       	pop	r28
     7e4:	1f 91       	pop	r17
     7e6:	0f 91       	pop	r16
     7e8:	08 95       	ret

000007ea <__vector_1>:
     7ea:	1f 92       	push	r1
     7ec:	0f 92       	push	r0
     7ee:	0f b6       	in	r0, 0x3f	; 63
     7f0:	0f 92       	push	r0
     7f2:	11 24       	eor	r1, r1
     7f4:	2f 93       	push	r18
     7f6:	3f 93       	push	r19
     7f8:	4f 93       	push	r20
     7fa:	5f 93       	push	r21
     7fc:	6f 93       	push	r22
     7fe:	7f 93       	push	r23
     800:	8f 93       	push	r24
     802:	9f 93       	push	r25
     804:	af 93       	push	r26
     806:	bf 93       	push	r27
     808:	ef 93       	push	r30
     80a:	ff 93       	push	r31
     80c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     810:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     814:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     818:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     81c:	c9 01       	movw	r24, r18
     81e:	03 2e       	mov	r0, r19
     820:	00 0c       	add	r0, r0
     822:	aa 0b       	sbc	r26, r26
     824:	bb 0b       	sbc	r27, r27
     826:	dc 01       	movw	r26, r24
     828:	99 27       	eor	r25, r25
     82a:	88 27       	eor	r24, r24
     82c:	60 e0       	ldi	r22, 0x00	; 0
     82e:	70 e0       	ldi	r23, 0x00	; 0
     830:	84 2b       	or	r24, r20
     832:	95 2b       	or	r25, r21
     834:	a6 2b       	or	r26, r22
     836:	b7 2b       	or	r27, r23
     838:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     83c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     840:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     844:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     848:	b0 9b       	sbis	0x16, 0	; 22
     84a:	1b c0       	rjmp	.+54     	; 0x882 <__vector_1+0x98>
     84c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     850:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     854:	c9 01       	movw	r24, r18
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	09 2e       	mov	r0, r25
     85a:	00 0c       	add	r0, r0
     85c:	aa 0b       	sbc	r26, r26
     85e:	bb 0b       	sbc	r27, r27
     860:	dc 01       	movw	r26, r24
     862:	99 27       	eor	r25, r25
     864:	88 27       	eor	r24, r24
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	84 2b       	or	r24, r20
     86c:	95 2b       	or	r25, r21
     86e:	a6 2b       	or	r26, r22
     870:	b7 2b       	or	r27, r23
     872:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     876:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     87a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     87e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     882:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <mtable>
     886:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <mtable+0x1>
     88a:	30 97       	sbiw	r30, 0x00	; 0
     88c:	39 f0       	breq	.+14     	; 0x89c <__vector_1+0xb2>
     88e:	60 e0       	ldi	r22, 0x00	; 0
     890:	70 e0       	ldi	r23, 0x00	; 0
     892:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <otable>
     896:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <otable+0x1>
     89a:	09 95       	icall
     89c:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     8a0:	ff 91       	pop	r31
     8a2:	ef 91       	pop	r30
     8a4:	bf 91       	pop	r27
     8a6:	af 91       	pop	r26
     8a8:	9f 91       	pop	r25
     8aa:	8f 91       	pop	r24
     8ac:	7f 91       	pop	r23
     8ae:	6f 91       	pop	r22
     8b0:	5f 91       	pop	r21
     8b2:	4f 91       	pop	r20
     8b4:	3f 91       	pop	r19
     8b6:	2f 91       	pop	r18
     8b8:	0f 90       	pop	r0
     8ba:	0f be       	out	0x3f, r0	; 63
     8bc:	0f 90       	pop	r0
     8be:	1f 90       	pop	r1
     8c0:	18 95       	reti

000008c2 <__vector_2>:
     8c2:	1f 92       	push	r1
     8c4:	0f 92       	push	r0
     8c6:	0f b6       	in	r0, 0x3f	; 63
     8c8:	0f 92       	push	r0
     8ca:	11 24       	eor	r1, r1
     8cc:	2f 93       	push	r18
     8ce:	3f 93       	push	r19
     8d0:	4f 93       	push	r20
     8d2:	5f 93       	push	r21
     8d4:	6f 93       	push	r22
     8d6:	7f 93       	push	r23
     8d8:	8f 93       	push	r24
     8da:	9f 93       	push	r25
     8dc:	af 93       	push	r26
     8de:	bf 93       	push	r27
     8e0:	ef 93       	push	r30
     8e2:	ff 93       	push	r31
     8e4:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     8e8:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     8ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8f4:	c9 01       	movw	r24, r18
     8f6:	03 2e       	mov	r0, r19
     8f8:	00 0c       	add	r0, r0
     8fa:	aa 0b       	sbc	r26, r26
     8fc:	bb 0b       	sbc	r27, r27
     8fe:	dc 01       	movw	r26, r24
     900:	99 27       	eor	r25, r25
     902:	88 27       	eor	r24, r24
     904:	60 e0       	ldi	r22, 0x00	; 0
     906:	70 e0       	ldi	r23, 0x00	; 0
     908:	84 2b       	or	r24, r20
     90a:	95 2b       	or	r25, r21
     90c:	a6 2b       	or	r26, r22
     90e:	b7 2b       	or	r27, r23
     910:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     914:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     918:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     91c:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     920:	b0 9b       	sbis	0x16, 0	; 22
     922:	1b c0       	rjmp	.+54     	; 0x95a <__vector_2+0x98>
     924:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     928:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     92c:	c9 01       	movw	r24, r18
     92e:	01 96       	adiw	r24, 0x01	; 1
     930:	09 2e       	mov	r0, r25
     932:	00 0c       	add	r0, r0
     934:	aa 0b       	sbc	r26, r26
     936:	bb 0b       	sbc	r27, r27
     938:	dc 01       	movw	r26, r24
     93a:	99 27       	eor	r25, r25
     93c:	88 27       	eor	r24, r24
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	84 2b       	or	r24, r20
     944:	95 2b       	or	r25, r21
     946:	a6 2b       	or	r26, r22
     948:	b7 2b       	or	r27, r23
     94a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     94e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     952:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     956:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     95a:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable+0x2>
     95e:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0x3>
     962:	30 97       	sbiw	r30, 0x00	; 0
     964:	39 f0       	breq	.+14     	; 0x974 <__vector_2+0xb2>
     966:	61 e0       	ldi	r22, 0x01	; 1
     968:	70 e0       	ldi	r23, 0x00	; 0
     96a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable+0x2>
     96e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0x3>
     972:	09 95       	icall
     974:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     978:	ff 91       	pop	r31
     97a:	ef 91       	pop	r30
     97c:	bf 91       	pop	r27
     97e:	af 91       	pop	r26
     980:	9f 91       	pop	r25
     982:	8f 91       	pop	r24
     984:	7f 91       	pop	r23
     986:	6f 91       	pop	r22
     988:	5f 91       	pop	r21
     98a:	4f 91       	pop	r20
     98c:	3f 91       	pop	r19
     98e:	2f 91       	pop	r18
     990:	0f 90       	pop	r0
     992:	0f be       	out	0x3f, r0	; 63
     994:	0f 90       	pop	r0
     996:	1f 90       	pop	r1
     998:	18 95       	reti

0000099a <__vector_3>:
     99a:	1f 92       	push	r1
     99c:	0f 92       	push	r0
     99e:	0f b6       	in	r0, 0x3f	; 63
     9a0:	0f 92       	push	r0
     9a2:	11 24       	eor	r1, r1
     9a4:	2f 93       	push	r18
     9a6:	3f 93       	push	r19
     9a8:	4f 93       	push	r20
     9aa:	5f 93       	push	r21
     9ac:	6f 93       	push	r22
     9ae:	7f 93       	push	r23
     9b0:	8f 93       	push	r24
     9b2:	9f 93       	push	r25
     9b4:	af 93       	push	r26
     9b6:	bf 93       	push	r27
     9b8:	ef 93       	push	r30
     9ba:	ff 93       	push	r31
     9bc:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     9c0:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     9c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9cc:	c9 01       	movw	r24, r18
     9ce:	03 2e       	mov	r0, r19
     9d0:	00 0c       	add	r0, r0
     9d2:	aa 0b       	sbc	r26, r26
     9d4:	bb 0b       	sbc	r27, r27
     9d6:	dc 01       	movw	r26, r24
     9d8:	99 27       	eor	r25, r25
     9da:	88 27       	eor	r24, r24
     9dc:	60 e0       	ldi	r22, 0x00	; 0
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	84 2b       	or	r24, r20
     9e2:	95 2b       	or	r25, r21
     9e4:	a6 2b       	or	r26, r22
     9e6:	b7 2b       	or	r27, r23
     9e8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     9ec:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     9f0:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     9f4:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     9f8:	b0 9b       	sbis	0x16, 0	; 22
     9fa:	1b c0       	rjmp	.+54     	; 0xa32 <__vector_3+0x98>
     9fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a00:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a04:	c9 01       	movw	r24, r18
     a06:	01 96       	adiw	r24, 0x01	; 1
     a08:	09 2e       	mov	r0, r25
     a0a:	00 0c       	add	r0, r0
     a0c:	aa 0b       	sbc	r26, r26
     a0e:	bb 0b       	sbc	r27, r27
     a10:	dc 01       	movw	r26, r24
     a12:	99 27       	eor	r25, r25
     a14:	88 27       	eor	r24, r24
     a16:	60 e0       	ldi	r22, 0x00	; 0
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	84 2b       	or	r24, r20
     a1c:	95 2b       	or	r25, r21
     a1e:	a6 2b       	or	r26, r22
     a20:	b7 2b       	or	r27, r23
     a22:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     a26:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     a2a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     a2e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     a32:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0x4>
     a36:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0x5>
     a3a:	30 97       	sbiw	r30, 0x00	; 0
     a3c:	39 f0       	breq	.+14     	; 0xa4c <__vector_3+0xb2>
     a3e:	62 e0       	ldi	r22, 0x02	; 2
     a40:	70 e0       	ldi	r23, 0x00	; 0
     a42:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0x4>
     a46:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0x5>
     a4a:	09 95       	icall
     a4c:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     a50:	ff 91       	pop	r31
     a52:	ef 91       	pop	r30
     a54:	bf 91       	pop	r27
     a56:	af 91       	pop	r26
     a58:	9f 91       	pop	r25
     a5a:	8f 91       	pop	r24
     a5c:	7f 91       	pop	r23
     a5e:	6f 91       	pop	r22
     a60:	5f 91       	pop	r21
     a62:	4f 91       	pop	r20
     a64:	3f 91       	pop	r19
     a66:	2f 91       	pop	r18
     a68:	0f 90       	pop	r0
     a6a:	0f be       	out	0x3f, r0	; 63
     a6c:	0f 90       	pop	r0
     a6e:	1f 90       	pop	r1
     a70:	18 95       	reti

00000a72 <__vector_4>:
     a72:	1f 92       	push	r1
     a74:	0f 92       	push	r0
     a76:	0f b6       	in	r0, 0x3f	; 63
     a78:	0f 92       	push	r0
     a7a:	11 24       	eor	r1, r1
     a7c:	2f 93       	push	r18
     a7e:	3f 93       	push	r19
     a80:	4f 93       	push	r20
     a82:	5f 93       	push	r21
     a84:	6f 93       	push	r22
     a86:	7f 93       	push	r23
     a88:	8f 93       	push	r24
     a8a:	9f 93       	push	r25
     a8c:	af 93       	push	r26
     a8e:	bf 93       	push	r27
     a90:	ef 93       	push	r30
     a92:	ff 93       	push	r31
     a94:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     a98:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     a9c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     aa0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     aa4:	c9 01       	movw	r24, r18
     aa6:	03 2e       	mov	r0, r19
     aa8:	00 0c       	add	r0, r0
     aaa:	aa 0b       	sbc	r26, r26
     aac:	bb 0b       	sbc	r27, r27
     aae:	dc 01       	movw	r26, r24
     ab0:	99 27       	eor	r25, r25
     ab2:	88 27       	eor	r24, r24
     ab4:	60 e0       	ldi	r22, 0x00	; 0
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	84 2b       	or	r24, r20
     aba:	95 2b       	or	r25, r21
     abc:	a6 2b       	or	r26, r22
     abe:	b7 2b       	or	r27, r23
     ac0:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     ac4:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     ac8:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     acc:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     ad0:	b0 9b       	sbis	0x16, 0	; 22
     ad2:	1b c0       	rjmp	.+54     	; 0xb0a <__vector_4+0x98>
     ad4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ad8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     adc:	c9 01       	movw	r24, r18
     ade:	01 96       	adiw	r24, 0x01	; 1
     ae0:	09 2e       	mov	r0, r25
     ae2:	00 0c       	add	r0, r0
     ae4:	aa 0b       	sbc	r26, r26
     ae6:	bb 0b       	sbc	r27, r27
     ae8:	dc 01       	movw	r26, r24
     aea:	99 27       	eor	r25, r25
     aec:	88 27       	eor	r24, r24
     aee:	60 e0       	ldi	r22, 0x00	; 0
     af0:	70 e0       	ldi	r23, 0x00	; 0
     af2:	84 2b       	or	r24, r20
     af4:	95 2b       	or	r25, r21
     af6:	a6 2b       	or	r26, r22
     af8:	b7 2b       	or	r27, r23
     afa:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     afe:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     b02:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     b06:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     b0a:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0x6>
     b0e:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0x7>
     b12:	30 97       	sbiw	r30, 0x00	; 0
     b14:	39 f0       	breq	.+14     	; 0xb24 <__vector_4+0xb2>
     b16:	63 e0       	ldi	r22, 0x03	; 3
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0x6>
     b1e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0x7>
     b22:	09 95       	icall
     b24:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     b28:	ff 91       	pop	r31
     b2a:	ef 91       	pop	r30
     b2c:	bf 91       	pop	r27
     b2e:	af 91       	pop	r26
     b30:	9f 91       	pop	r25
     b32:	8f 91       	pop	r24
     b34:	7f 91       	pop	r23
     b36:	6f 91       	pop	r22
     b38:	5f 91       	pop	r21
     b3a:	4f 91       	pop	r20
     b3c:	3f 91       	pop	r19
     b3e:	2f 91       	pop	r18
     b40:	0f 90       	pop	r0
     b42:	0f be       	out	0x3f, r0	; 63
     b44:	0f 90       	pop	r0
     b46:	1f 90       	pop	r1
     b48:	18 95       	reti

00000b4a <__vector_5>:
     b4a:	1f 92       	push	r1
     b4c:	0f 92       	push	r0
     b4e:	0f b6       	in	r0, 0x3f	; 63
     b50:	0f 92       	push	r0
     b52:	11 24       	eor	r1, r1
     b54:	2f 93       	push	r18
     b56:	3f 93       	push	r19
     b58:	4f 93       	push	r20
     b5a:	5f 93       	push	r21
     b5c:	6f 93       	push	r22
     b5e:	7f 93       	push	r23
     b60:	8f 93       	push	r24
     b62:	9f 93       	push	r25
     b64:	af 93       	push	r26
     b66:	bf 93       	push	r27
     b68:	ef 93       	push	r30
     b6a:	ff 93       	push	r31
     b6c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     b70:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     b74:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b78:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b7c:	c9 01       	movw	r24, r18
     b7e:	03 2e       	mov	r0, r19
     b80:	00 0c       	add	r0, r0
     b82:	aa 0b       	sbc	r26, r26
     b84:	bb 0b       	sbc	r27, r27
     b86:	dc 01       	movw	r26, r24
     b88:	99 27       	eor	r25, r25
     b8a:	88 27       	eor	r24, r24
     b8c:	60 e0       	ldi	r22, 0x00	; 0
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	84 2b       	or	r24, r20
     b92:	95 2b       	or	r25, r21
     b94:	a6 2b       	or	r26, r22
     b96:	b7 2b       	or	r27, r23
     b98:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     b9c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     ba0:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     ba4:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     ba8:	b0 9b       	sbis	0x16, 0	; 22
     baa:	1b c0       	rjmp	.+54     	; 0xbe2 <__vector_5+0x98>
     bac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bb0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bb4:	c9 01       	movw	r24, r18
     bb6:	01 96       	adiw	r24, 0x01	; 1
     bb8:	09 2e       	mov	r0, r25
     bba:	00 0c       	add	r0, r0
     bbc:	aa 0b       	sbc	r26, r26
     bbe:	bb 0b       	sbc	r27, r27
     bc0:	dc 01       	movw	r26, r24
     bc2:	99 27       	eor	r25, r25
     bc4:	88 27       	eor	r24, r24
     bc6:	60 e0       	ldi	r22, 0x00	; 0
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	84 2b       	or	r24, r20
     bcc:	95 2b       	or	r25, r21
     bce:	a6 2b       	or	r26, r22
     bd0:	b7 2b       	or	r27, r23
     bd2:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     bd6:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     bda:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     bde:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     be2:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <mtable+0x8>
     be6:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <mtable+0x9>
     bea:	30 97       	sbiw	r30, 0x00	; 0
     bec:	39 f0       	breq	.+14     	; 0xbfc <__vector_5+0xb2>
     bee:	64 e0       	ldi	r22, 0x04	; 4
     bf0:	70 e0       	ldi	r23, 0x00	; 0
     bf2:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <otable+0x8>
     bf6:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <otable+0x9>
     bfa:	09 95       	icall
     bfc:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     c00:	ff 91       	pop	r31
     c02:	ef 91       	pop	r30
     c04:	bf 91       	pop	r27
     c06:	af 91       	pop	r26
     c08:	9f 91       	pop	r25
     c0a:	8f 91       	pop	r24
     c0c:	7f 91       	pop	r23
     c0e:	6f 91       	pop	r22
     c10:	5f 91       	pop	r21
     c12:	4f 91       	pop	r20
     c14:	3f 91       	pop	r19
     c16:	2f 91       	pop	r18
     c18:	0f 90       	pop	r0
     c1a:	0f be       	out	0x3f, r0	; 63
     c1c:	0f 90       	pop	r0
     c1e:	1f 90       	pop	r1
     c20:	18 95       	reti

00000c22 <__vector_10>:
     c22:	1f 92       	push	r1
     c24:	0f 92       	push	r0
     c26:	0f b6       	in	r0, 0x3f	; 63
     c28:	0f 92       	push	r0
     c2a:	11 24       	eor	r1, r1
     c2c:	2f 93       	push	r18
     c2e:	3f 93       	push	r19
     c30:	4f 93       	push	r20
     c32:	5f 93       	push	r21
     c34:	6f 93       	push	r22
     c36:	7f 93       	push	r23
     c38:	8f 93       	push	r24
     c3a:	9f 93       	push	r25
     c3c:	af 93       	push	r26
     c3e:	bf 93       	push	r27
     c40:	ef 93       	push	r30
     c42:	ff 93       	push	r31
     c44:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     c48:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     c4c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c50:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c54:	c9 01       	movw	r24, r18
     c56:	03 2e       	mov	r0, r19
     c58:	00 0c       	add	r0, r0
     c5a:	aa 0b       	sbc	r26, r26
     c5c:	bb 0b       	sbc	r27, r27
     c5e:	dc 01       	movw	r26, r24
     c60:	99 27       	eor	r25, r25
     c62:	88 27       	eor	r24, r24
     c64:	60 e0       	ldi	r22, 0x00	; 0
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	84 2b       	or	r24, r20
     c6a:	95 2b       	or	r25, r21
     c6c:	a6 2b       	or	r26, r22
     c6e:	b7 2b       	or	r27, r23
     c70:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     c74:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     c78:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     c7c:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     c80:	b0 9b       	sbis	0x16, 0	; 22
     c82:	1b c0       	rjmp	.+54     	; 0xcba <__vector_10+0x98>
     c84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c8c:	c9 01       	movw	r24, r18
     c8e:	01 96       	adiw	r24, 0x01	; 1
     c90:	09 2e       	mov	r0, r25
     c92:	00 0c       	add	r0, r0
     c94:	aa 0b       	sbc	r26, r26
     c96:	bb 0b       	sbc	r27, r27
     c98:	dc 01       	movw	r26, r24
     c9a:	99 27       	eor	r25, r25
     c9c:	88 27       	eor	r24, r24
     c9e:	60 e0       	ldi	r22, 0x00	; 0
     ca0:	70 e0       	ldi	r23, 0x00	; 0
     ca2:	84 2b       	or	r24, r20
     ca4:	95 2b       	or	r25, r21
     ca6:	a6 2b       	or	r26, r22
     ca8:	b7 2b       	or	r27, r23
     caa:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     cae:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     cb2:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     cb6:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     cba:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <mtable+0xa>
     cbe:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <mtable+0xb>
     cc2:	30 97       	sbiw	r30, 0x00	; 0
     cc4:	39 f0       	breq	.+14     	; 0xcd4 <__vector_10+0xb2>
     cc6:	65 e0       	ldi	r22, 0x05	; 5
     cc8:	70 e0       	ldi	r23, 0x00	; 0
     cca:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <otable+0xa>
     cce:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <otable+0xb>
     cd2:	09 95       	icall
     cd4:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     cd8:	ff 91       	pop	r31
     cda:	ef 91       	pop	r30
     cdc:	bf 91       	pop	r27
     cde:	af 91       	pop	r26
     ce0:	9f 91       	pop	r25
     ce2:	8f 91       	pop	r24
     ce4:	7f 91       	pop	r23
     ce6:	6f 91       	pop	r22
     ce8:	5f 91       	pop	r21
     cea:	4f 91       	pop	r20
     cec:	3f 91       	pop	r19
     cee:	2f 91       	pop	r18
     cf0:	0f 90       	pop	r0
     cf2:	0f be       	out	0x3f, r0	; 63
     cf4:	0f 90       	pop	r0
     cf6:	1f 90       	pop	r1
     cf8:	18 95       	reti

00000cfa <__vector_11>:
     cfa:	1f 92       	push	r1
     cfc:	0f 92       	push	r0
     cfe:	0f b6       	in	r0, 0x3f	; 63
     d00:	0f 92       	push	r0
     d02:	11 24       	eor	r1, r1
     d04:	2f 93       	push	r18
     d06:	3f 93       	push	r19
     d08:	4f 93       	push	r20
     d0a:	5f 93       	push	r21
     d0c:	6f 93       	push	r22
     d0e:	7f 93       	push	r23
     d10:	8f 93       	push	r24
     d12:	9f 93       	push	r25
     d14:	af 93       	push	r26
     d16:	bf 93       	push	r27
     d18:	ef 93       	push	r30
     d1a:	ff 93       	push	r31
     d1c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     d20:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     d24:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d28:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d2c:	c9 01       	movw	r24, r18
     d2e:	03 2e       	mov	r0, r19
     d30:	00 0c       	add	r0, r0
     d32:	aa 0b       	sbc	r26, r26
     d34:	bb 0b       	sbc	r27, r27
     d36:	dc 01       	movw	r26, r24
     d38:	99 27       	eor	r25, r25
     d3a:	88 27       	eor	r24, r24
     d3c:	60 e0       	ldi	r22, 0x00	; 0
     d3e:	70 e0       	ldi	r23, 0x00	; 0
     d40:	84 2b       	or	r24, r20
     d42:	95 2b       	or	r25, r21
     d44:	a6 2b       	or	r26, r22
     d46:	b7 2b       	or	r27, r23
     d48:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     d4c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     d50:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     d54:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     d58:	b0 9b       	sbis	0x16, 0	; 22
     d5a:	1b c0       	rjmp	.+54     	; 0xd92 <__vector_11+0x98>
     d5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d64:	c9 01       	movw	r24, r18
     d66:	01 96       	adiw	r24, 0x01	; 1
     d68:	09 2e       	mov	r0, r25
     d6a:	00 0c       	add	r0, r0
     d6c:	aa 0b       	sbc	r26, r26
     d6e:	bb 0b       	sbc	r27, r27
     d70:	dc 01       	movw	r26, r24
     d72:	99 27       	eor	r25, r25
     d74:	88 27       	eor	r24, r24
     d76:	60 e0       	ldi	r22, 0x00	; 0
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	84 2b       	or	r24, r20
     d7c:	95 2b       	or	r25, r21
     d7e:	a6 2b       	or	r26, r22
     d80:	b7 2b       	or	r27, r23
     d82:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     d86:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     d8a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     d8e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     d92:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable+0xc>
     d96:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0xd>
     d9a:	30 97       	sbiw	r30, 0x00	; 0
     d9c:	39 f0       	breq	.+14     	; 0xdac <__vector_11+0xb2>
     d9e:	66 e0       	ldi	r22, 0x06	; 6
     da0:	70 e0       	ldi	r23, 0x00	; 0
     da2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable+0xc>
     da6:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0xd>
     daa:	09 95       	icall
     dac:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     db0:	ff 91       	pop	r31
     db2:	ef 91       	pop	r30
     db4:	bf 91       	pop	r27
     db6:	af 91       	pop	r26
     db8:	9f 91       	pop	r25
     dba:	8f 91       	pop	r24
     dbc:	7f 91       	pop	r23
     dbe:	6f 91       	pop	r22
     dc0:	5f 91       	pop	r21
     dc2:	4f 91       	pop	r20
     dc4:	3f 91       	pop	r19
     dc6:	2f 91       	pop	r18
     dc8:	0f 90       	pop	r0
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	0f 90       	pop	r0
     dce:	1f 90       	pop	r1
     dd0:	18 95       	reti

00000dd2 <__vector_12>:
     dd2:	1f 92       	push	r1
     dd4:	0f 92       	push	r0
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	0f 92       	push	r0
     dda:	11 24       	eor	r1, r1
     ddc:	2f 93       	push	r18
     dde:	3f 93       	push	r19
     de0:	4f 93       	push	r20
     de2:	5f 93       	push	r21
     de4:	6f 93       	push	r22
     de6:	7f 93       	push	r23
     de8:	8f 93       	push	r24
     dea:	9f 93       	push	r25
     dec:	af 93       	push	r26
     dee:	bf 93       	push	r27
     df0:	ef 93       	push	r30
     df2:	ff 93       	push	r31
     df4:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     df8:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     dfc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e00:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e04:	c9 01       	movw	r24, r18
     e06:	03 2e       	mov	r0, r19
     e08:	00 0c       	add	r0, r0
     e0a:	aa 0b       	sbc	r26, r26
     e0c:	bb 0b       	sbc	r27, r27
     e0e:	dc 01       	movw	r26, r24
     e10:	99 27       	eor	r25, r25
     e12:	88 27       	eor	r24, r24
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	84 2b       	or	r24, r20
     e1a:	95 2b       	or	r25, r21
     e1c:	a6 2b       	or	r26, r22
     e1e:	b7 2b       	or	r27, r23
     e20:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     e24:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     e28:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     e2c:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     e30:	b0 9b       	sbis	0x16, 0	; 22
     e32:	1b c0       	rjmp	.+54     	; 0xe6a <__vector_12+0x98>
     e34:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e38:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e3c:	c9 01       	movw	r24, r18
     e3e:	01 96       	adiw	r24, 0x01	; 1
     e40:	09 2e       	mov	r0, r25
     e42:	00 0c       	add	r0, r0
     e44:	aa 0b       	sbc	r26, r26
     e46:	bb 0b       	sbc	r27, r27
     e48:	dc 01       	movw	r26, r24
     e4a:	99 27       	eor	r25, r25
     e4c:	88 27       	eor	r24, r24
     e4e:	60 e0       	ldi	r22, 0x00	; 0
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	84 2b       	or	r24, r20
     e54:	95 2b       	or	r25, r21
     e56:	a6 2b       	or	r26, r22
     e58:	b7 2b       	or	r27, r23
     e5a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     e5e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     e62:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     e66:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     e6a:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0xe>
     e6e:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0xf>
     e72:	30 97       	sbiw	r30, 0x00	; 0
     e74:	39 f0       	breq	.+14     	; 0xe84 <__vector_12+0xb2>
     e76:	67 e0       	ldi	r22, 0x07	; 7
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0xe>
     e7e:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0xf>
     e82:	09 95       	icall
     e84:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     e88:	ff 91       	pop	r31
     e8a:	ef 91       	pop	r30
     e8c:	bf 91       	pop	r27
     e8e:	af 91       	pop	r26
     e90:	9f 91       	pop	r25
     e92:	8f 91       	pop	r24
     e94:	7f 91       	pop	r23
     e96:	6f 91       	pop	r22
     e98:	5f 91       	pop	r21
     e9a:	4f 91       	pop	r20
     e9c:	3f 91       	pop	r19
     e9e:	2f 91       	pop	r18
     ea0:	0f 90       	pop	r0
     ea2:	0f be       	out	0x3f, r0	; 63
     ea4:	0f 90       	pop	r0
     ea6:	1f 90       	pop	r1
     ea8:	18 95       	reti

00000eaa <__vector_13>:
     eaa:	1f 92       	push	r1
     eac:	0f 92       	push	r0
     eae:	0f b6       	in	r0, 0x3f	; 63
     eb0:	0f 92       	push	r0
     eb2:	11 24       	eor	r1, r1
     eb4:	2f 93       	push	r18
     eb6:	3f 93       	push	r19
     eb8:	4f 93       	push	r20
     eba:	5f 93       	push	r21
     ebc:	6f 93       	push	r22
     ebe:	7f 93       	push	r23
     ec0:	8f 93       	push	r24
     ec2:	9f 93       	push	r25
     ec4:	af 93       	push	r26
     ec6:	bf 93       	push	r27
     ec8:	ef 93       	push	r30
     eca:	ff 93       	push	r31
     ecc:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     ed0:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     ed4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ed8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     edc:	c9 01       	movw	r24, r18
     ede:	03 2e       	mov	r0, r19
     ee0:	00 0c       	add	r0, r0
     ee2:	aa 0b       	sbc	r26, r26
     ee4:	bb 0b       	sbc	r27, r27
     ee6:	dc 01       	movw	r26, r24
     ee8:	99 27       	eor	r25, r25
     eea:	88 27       	eor	r24, r24
     eec:	60 e0       	ldi	r22, 0x00	; 0
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	84 2b       	or	r24, r20
     ef2:	95 2b       	or	r25, r21
     ef4:	a6 2b       	or	r26, r22
     ef6:	b7 2b       	or	r27, r23
     ef8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     efc:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     f00:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     f04:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     f08:	b0 9b       	sbis	0x16, 0	; 22
     f0a:	1b c0       	rjmp	.+54     	; 0xf42 <__vector_13+0x98>
     f0c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f10:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f14:	c9 01       	movw	r24, r18
     f16:	01 96       	adiw	r24, 0x01	; 1
     f18:	09 2e       	mov	r0, r25
     f1a:	00 0c       	add	r0, r0
     f1c:	aa 0b       	sbc	r26, r26
     f1e:	bb 0b       	sbc	r27, r27
     f20:	dc 01       	movw	r26, r24
     f22:	99 27       	eor	r25, r25
     f24:	88 27       	eor	r24, r24
     f26:	60 e0       	ldi	r22, 0x00	; 0
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	84 2b       	or	r24, r20
     f2c:	95 2b       	or	r25, r21
     f2e:	a6 2b       	or	r26, r22
     f30:	b7 2b       	or	r27, r23
     f32:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     f36:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     f3a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     f3e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     f42:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x10>
     f46:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x11>
     f4a:	30 97       	sbiw	r30, 0x00	; 0
     f4c:	39 f0       	breq	.+14     	; 0xf5c <__vector_13+0xb2>
     f4e:	68 e0       	ldi	r22, 0x08	; 8
     f50:	70 e0       	ldi	r23, 0x00	; 0
     f52:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x10>
     f56:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x11>
     f5a:	09 95       	icall
     f5c:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
     f60:	ff 91       	pop	r31
     f62:	ef 91       	pop	r30
     f64:	bf 91       	pop	r27
     f66:	af 91       	pop	r26
     f68:	9f 91       	pop	r25
     f6a:	8f 91       	pop	r24
     f6c:	7f 91       	pop	r23
     f6e:	6f 91       	pop	r22
     f70:	5f 91       	pop	r21
     f72:	4f 91       	pop	r20
     f74:	3f 91       	pop	r19
     f76:	2f 91       	pop	r18
     f78:	0f 90       	pop	r0
     f7a:	0f be       	out	0x3f, r0	; 63
     f7c:	0f 90       	pop	r0
     f7e:	1f 90       	pop	r1
     f80:	18 95       	reti

00000f82 <__vector_14>:
     f82:	1f 92       	push	r1
     f84:	0f 92       	push	r0
     f86:	0f b6       	in	r0, 0x3f	; 63
     f88:	0f 92       	push	r0
     f8a:	11 24       	eor	r1, r1
     f8c:	2f 93       	push	r18
     f8e:	3f 93       	push	r19
     f90:	4f 93       	push	r20
     f92:	5f 93       	push	r21
     f94:	6f 93       	push	r22
     f96:	7f 93       	push	r23
     f98:	8f 93       	push	r24
     f9a:	9f 93       	push	r25
     f9c:	af 93       	push	r26
     f9e:	bf 93       	push	r27
     fa0:	ef 93       	push	r30
     fa2:	ff 93       	push	r31
     fa4:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
     fa8:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
     fac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fb0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fb4:	c9 01       	movw	r24, r18
     fb6:	03 2e       	mov	r0, r19
     fb8:	00 0c       	add	r0, r0
     fba:	aa 0b       	sbc	r26, r26
     fbc:	bb 0b       	sbc	r27, r27
     fbe:	dc 01       	movw	r26, r24
     fc0:	99 27       	eor	r25, r25
     fc2:	88 27       	eor	r24, r24
     fc4:	60 e0       	ldi	r22, 0x00	; 0
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	84 2b       	or	r24, r20
     fca:	95 2b       	or	r25, r21
     fcc:	a6 2b       	or	r26, r22
     fce:	b7 2b       	or	r27, r23
     fd0:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     fd4:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     fd8:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     fdc:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     fe0:	b0 9b       	sbis	0x16, 0	; 22
     fe2:	1b c0       	rjmp	.+54     	; 0x101a <__vector_14+0x98>
     fe4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fe8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fec:	c9 01       	movw	r24, r18
     fee:	01 96       	adiw	r24, 0x01	; 1
     ff0:	09 2e       	mov	r0, r25
     ff2:	00 0c       	add	r0, r0
     ff4:	aa 0b       	sbc	r26, r26
     ff6:	bb 0b       	sbc	r27, r27
     ff8:	dc 01       	movw	r26, r24
     ffa:	99 27       	eor	r25, r25
     ffc:	88 27       	eor	r24, r24
     ffe:	60 e0       	ldi	r22, 0x00	; 0
    1000:	70 e0       	ldi	r23, 0x00	; 0
    1002:	84 2b       	or	r24, r20
    1004:	95 2b       	or	r25, r21
    1006:	a6 2b       	or	r26, r22
    1008:	b7 2b       	or	r27, r23
    100a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    100e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1012:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    1016:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    101a:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x12>
    101e:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x13>
    1022:	30 97       	sbiw	r30, 0x00	; 0
    1024:	39 f0       	breq	.+14     	; 0x1034 <__vector_14+0xb2>
    1026:	69 e0       	ldi	r22, 0x09	; 9
    1028:	70 e0       	ldi	r23, 0x00	; 0
    102a:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x12>
    102e:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x13>
    1032:	09 95       	icall
    1034:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    1038:	ff 91       	pop	r31
    103a:	ef 91       	pop	r30
    103c:	bf 91       	pop	r27
    103e:	af 91       	pop	r26
    1040:	9f 91       	pop	r25
    1042:	8f 91       	pop	r24
    1044:	7f 91       	pop	r23
    1046:	6f 91       	pop	r22
    1048:	5f 91       	pop	r21
    104a:	4f 91       	pop	r20
    104c:	3f 91       	pop	r19
    104e:	2f 91       	pop	r18
    1050:	0f 90       	pop	r0
    1052:	0f be       	out	0x3f, r0	; 63
    1054:	0f 90       	pop	r0
    1056:	1f 90       	pop	r1
    1058:	18 95       	reti

0000105a <__vector_15>:
    105a:	1f 92       	push	r1
    105c:	0f 92       	push	r0
    105e:	0f b6       	in	r0, 0x3f	; 63
    1060:	0f 92       	push	r0
    1062:	11 24       	eor	r1, r1
    1064:	2f 93       	push	r18
    1066:	3f 93       	push	r19
    1068:	4f 93       	push	r20
    106a:	5f 93       	push	r21
    106c:	6f 93       	push	r22
    106e:	7f 93       	push	r23
    1070:	8f 93       	push	r24
    1072:	9f 93       	push	r25
    1074:	af 93       	push	r26
    1076:	bf 93       	push	r27
    1078:	ef 93       	push	r30
    107a:	ff 93       	push	r31
    107c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    1080:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    1084:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1088:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    108c:	c9 01       	movw	r24, r18
    108e:	03 2e       	mov	r0, r19
    1090:	00 0c       	add	r0, r0
    1092:	aa 0b       	sbc	r26, r26
    1094:	bb 0b       	sbc	r27, r27
    1096:	dc 01       	movw	r26, r24
    1098:	99 27       	eor	r25, r25
    109a:	88 27       	eor	r24, r24
    109c:	60 e0       	ldi	r22, 0x00	; 0
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	84 2b       	or	r24, r20
    10a2:	95 2b       	or	r25, r21
    10a4:	a6 2b       	or	r26, r22
    10a6:	b7 2b       	or	r27, r23
    10a8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    10ac:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    10b0:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    10b4:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    10b8:	b0 9b       	sbis	0x16, 0	; 22
    10ba:	1b c0       	rjmp	.+54     	; 0x10f2 <__vector_15+0x98>
    10bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10c4:	c9 01       	movw	r24, r18
    10c6:	01 96       	adiw	r24, 0x01	; 1
    10c8:	09 2e       	mov	r0, r25
    10ca:	00 0c       	add	r0, r0
    10cc:	aa 0b       	sbc	r26, r26
    10ce:	bb 0b       	sbc	r27, r27
    10d0:	dc 01       	movw	r26, r24
    10d2:	99 27       	eor	r25, r25
    10d4:	88 27       	eor	r24, r24
    10d6:	60 e0       	ldi	r22, 0x00	; 0
    10d8:	70 e0       	ldi	r23, 0x00	; 0
    10da:	84 2b       	or	r24, r20
    10dc:	95 2b       	or	r25, r21
    10de:	a6 2b       	or	r26, r22
    10e0:	b7 2b       	or	r27, r23
    10e2:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    10e6:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    10ea:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    10ee:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    10f2:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x14>
    10f6:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x15>
    10fa:	30 97       	sbiw	r30, 0x00	; 0
    10fc:	39 f0       	breq	.+14     	; 0x110c <__vector_15+0xb2>
    10fe:	6a e0       	ldi	r22, 0x0A	; 10
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x14>
    1106:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x15>
    110a:	09 95       	icall
    110c:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    1110:	ff 91       	pop	r31
    1112:	ef 91       	pop	r30
    1114:	bf 91       	pop	r27
    1116:	af 91       	pop	r26
    1118:	9f 91       	pop	r25
    111a:	8f 91       	pop	r24
    111c:	7f 91       	pop	r23
    111e:	6f 91       	pop	r22
    1120:	5f 91       	pop	r21
    1122:	4f 91       	pop	r20
    1124:	3f 91       	pop	r19
    1126:	2f 91       	pop	r18
    1128:	0f 90       	pop	r0
    112a:	0f be       	out	0x3f, r0	; 63
    112c:	0f 90       	pop	r0
    112e:	1f 90       	pop	r1
    1130:	18 95       	reti

00001132 <__vector_16>:
    1132:	1f 92       	push	r1
    1134:	0f 92       	push	r0
    1136:	0f b6       	in	r0, 0x3f	; 63
    1138:	0f 92       	push	r0
    113a:	11 24       	eor	r1, r1
    113c:	2f 93       	push	r18
    113e:	3f 93       	push	r19
    1140:	4f 93       	push	r20
    1142:	5f 93       	push	r21
    1144:	6f 93       	push	r22
    1146:	7f 93       	push	r23
    1148:	8f 93       	push	r24
    114a:	9f 93       	push	r25
    114c:	af 93       	push	r26
    114e:	bf 93       	push	r27
    1150:	ef 93       	push	r30
    1152:	ff 93       	push	r31
    1154:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    1158:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    115c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1160:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1164:	c9 01       	movw	r24, r18
    1166:	03 2e       	mov	r0, r19
    1168:	00 0c       	add	r0, r0
    116a:	aa 0b       	sbc	r26, r26
    116c:	bb 0b       	sbc	r27, r27
    116e:	dc 01       	movw	r26, r24
    1170:	99 27       	eor	r25, r25
    1172:	88 27       	eor	r24, r24
    1174:	60 e0       	ldi	r22, 0x00	; 0
    1176:	70 e0       	ldi	r23, 0x00	; 0
    1178:	84 2b       	or	r24, r20
    117a:	95 2b       	or	r25, r21
    117c:	a6 2b       	or	r26, r22
    117e:	b7 2b       	or	r27, r23
    1180:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1184:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1188:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    118c:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1190:	b0 9b       	sbis	0x16, 0	; 22
    1192:	1b c0       	rjmp	.+54     	; 0x11ca <__vector_16+0x98>
    1194:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1198:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    119c:	c9 01       	movw	r24, r18
    119e:	01 96       	adiw	r24, 0x01	; 1
    11a0:	09 2e       	mov	r0, r25
    11a2:	00 0c       	add	r0, r0
    11a4:	aa 0b       	sbc	r26, r26
    11a6:	bb 0b       	sbc	r27, r27
    11a8:	dc 01       	movw	r26, r24
    11aa:	99 27       	eor	r25, r25
    11ac:	88 27       	eor	r24, r24
    11ae:	60 e0       	ldi	r22, 0x00	; 0
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	84 2b       	or	r24, r20
    11b4:	95 2b       	or	r25, r21
    11b6:	a6 2b       	or	r26, r22
    11b8:	b7 2b       	or	r27, r23
    11ba:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    11be:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    11c2:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    11c6:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    11ca:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x16>
    11ce:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x17>
    11d2:	30 97       	sbiw	r30, 0x00	; 0
    11d4:	39 f0       	breq	.+14     	; 0x11e4 <__vector_16+0xb2>
    11d6:	6b e0       	ldi	r22, 0x0B	; 11
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x16>
    11de:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x17>
    11e2:	09 95       	icall
    11e4:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    11e8:	ff 91       	pop	r31
    11ea:	ef 91       	pop	r30
    11ec:	bf 91       	pop	r27
    11ee:	af 91       	pop	r26
    11f0:	9f 91       	pop	r25
    11f2:	8f 91       	pop	r24
    11f4:	7f 91       	pop	r23
    11f6:	6f 91       	pop	r22
    11f8:	5f 91       	pop	r21
    11fa:	4f 91       	pop	r20
    11fc:	3f 91       	pop	r19
    11fe:	2f 91       	pop	r18
    1200:	0f 90       	pop	r0
    1202:	0f be       	out	0x3f, r0	; 63
    1204:	0f 90       	pop	r0
    1206:	1f 90       	pop	r1
    1208:	18 95       	reti

0000120a <__vector_17>:
    120a:	1f 92       	push	r1
    120c:	0f 92       	push	r0
    120e:	0f b6       	in	r0, 0x3f	; 63
    1210:	0f 92       	push	r0
    1212:	11 24       	eor	r1, r1
    1214:	2f 93       	push	r18
    1216:	3f 93       	push	r19
    1218:	4f 93       	push	r20
    121a:	5f 93       	push	r21
    121c:	6f 93       	push	r22
    121e:	7f 93       	push	r23
    1220:	8f 93       	push	r24
    1222:	9f 93       	push	r25
    1224:	af 93       	push	r26
    1226:	bf 93       	push	r27
    1228:	ef 93       	push	r30
    122a:	ff 93       	push	r31
    122c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    1230:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    1234:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1238:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    123c:	c9 01       	movw	r24, r18
    123e:	03 2e       	mov	r0, r19
    1240:	00 0c       	add	r0, r0
    1242:	aa 0b       	sbc	r26, r26
    1244:	bb 0b       	sbc	r27, r27
    1246:	dc 01       	movw	r26, r24
    1248:	99 27       	eor	r25, r25
    124a:	88 27       	eor	r24, r24
    124c:	60 e0       	ldi	r22, 0x00	; 0
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	84 2b       	or	r24, r20
    1252:	95 2b       	or	r25, r21
    1254:	a6 2b       	or	r26, r22
    1256:	b7 2b       	or	r27, r23
    1258:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    125c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1260:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    1264:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1268:	b0 9b       	sbis	0x16, 0	; 22
    126a:	1b c0       	rjmp	.+54     	; 0x12a2 <__vector_17+0x98>
    126c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1270:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1274:	c9 01       	movw	r24, r18
    1276:	01 96       	adiw	r24, 0x01	; 1
    1278:	09 2e       	mov	r0, r25
    127a:	00 0c       	add	r0, r0
    127c:	aa 0b       	sbc	r26, r26
    127e:	bb 0b       	sbc	r27, r27
    1280:	dc 01       	movw	r26, r24
    1282:	99 27       	eor	r25, r25
    1284:	88 27       	eor	r24, r24
    1286:	60 e0       	ldi	r22, 0x00	; 0
    1288:	70 e0       	ldi	r23, 0x00	; 0
    128a:	84 2b       	or	r24, r20
    128c:	95 2b       	or	r25, r21
    128e:	a6 2b       	or	r26, r22
    1290:	b7 2b       	or	r27, r23
    1292:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1296:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    129a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    129e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    12a2:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x18>
    12a6:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x19>
    12aa:	30 97       	sbiw	r30, 0x00	; 0
    12ac:	39 f0       	breq	.+14     	; 0x12bc <__vector_17+0xb2>
    12ae:	6c e0       	ldi	r22, 0x0C	; 12
    12b0:	70 e0       	ldi	r23, 0x00	; 0
    12b2:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x18>
    12b6:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x19>
    12ba:	09 95       	icall
    12bc:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    12c0:	ff 91       	pop	r31
    12c2:	ef 91       	pop	r30
    12c4:	bf 91       	pop	r27
    12c6:	af 91       	pop	r26
    12c8:	9f 91       	pop	r25
    12ca:	8f 91       	pop	r24
    12cc:	7f 91       	pop	r23
    12ce:	6f 91       	pop	r22
    12d0:	5f 91       	pop	r21
    12d2:	4f 91       	pop	r20
    12d4:	3f 91       	pop	r19
    12d6:	2f 91       	pop	r18
    12d8:	0f 90       	pop	r0
    12da:	0f be       	out	0x3f, r0	; 63
    12dc:	0f 90       	pop	r0
    12de:	1f 90       	pop	r1
    12e0:	18 95       	reti

000012e2 <__vector_18>:
    12e2:	1f 92       	push	r1
    12e4:	0f 92       	push	r0
    12e6:	0f b6       	in	r0, 0x3f	; 63
    12e8:	0f 92       	push	r0
    12ea:	11 24       	eor	r1, r1
    12ec:	2f 93       	push	r18
    12ee:	3f 93       	push	r19
    12f0:	4f 93       	push	r20
    12f2:	5f 93       	push	r21
    12f4:	6f 93       	push	r22
    12f6:	7f 93       	push	r23
    12f8:	8f 93       	push	r24
    12fa:	9f 93       	push	r25
    12fc:	af 93       	push	r26
    12fe:	bf 93       	push	r27
    1300:	ef 93       	push	r30
    1302:	ff 93       	push	r31
    1304:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    1308:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    130c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1310:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1314:	c9 01       	movw	r24, r18
    1316:	03 2e       	mov	r0, r19
    1318:	00 0c       	add	r0, r0
    131a:	aa 0b       	sbc	r26, r26
    131c:	bb 0b       	sbc	r27, r27
    131e:	dc 01       	movw	r26, r24
    1320:	99 27       	eor	r25, r25
    1322:	88 27       	eor	r24, r24
    1324:	60 e0       	ldi	r22, 0x00	; 0
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	84 2b       	or	r24, r20
    132a:	95 2b       	or	r25, r21
    132c:	a6 2b       	or	r26, r22
    132e:	b7 2b       	or	r27, r23
    1330:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1334:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1338:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    133c:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1340:	b0 9b       	sbis	0x16, 0	; 22
    1342:	1b c0       	rjmp	.+54     	; 0x137a <__vector_18+0x98>
    1344:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1348:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    134c:	c9 01       	movw	r24, r18
    134e:	01 96       	adiw	r24, 0x01	; 1
    1350:	09 2e       	mov	r0, r25
    1352:	00 0c       	add	r0, r0
    1354:	aa 0b       	sbc	r26, r26
    1356:	bb 0b       	sbc	r27, r27
    1358:	dc 01       	movw	r26, r24
    135a:	99 27       	eor	r25, r25
    135c:	88 27       	eor	r24, r24
    135e:	60 e0       	ldi	r22, 0x00	; 0
    1360:	70 e0       	ldi	r23, 0x00	; 0
    1362:	84 2b       	or	r24, r20
    1364:	95 2b       	or	r25, r21
    1366:	a6 2b       	or	r26, r22
    1368:	b7 2b       	or	r27, r23
    136a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    136e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1372:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    1376:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    137a:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x1a>
    137e:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x1b>
    1382:	30 97       	sbiw	r30, 0x00	; 0
    1384:	39 f0       	breq	.+14     	; 0x1394 <__vector_18+0xb2>
    1386:	6d e0       	ldi	r22, 0x0D	; 13
    1388:	70 e0       	ldi	r23, 0x00	; 0
    138a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x1a>
    138e:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x1b>
    1392:	09 95       	icall
    1394:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    1398:	ff 91       	pop	r31
    139a:	ef 91       	pop	r30
    139c:	bf 91       	pop	r27
    139e:	af 91       	pop	r26
    13a0:	9f 91       	pop	r25
    13a2:	8f 91       	pop	r24
    13a4:	7f 91       	pop	r23
    13a6:	6f 91       	pop	r22
    13a8:	5f 91       	pop	r21
    13aa:	4f 91       	pop	r20
    13ac:	3f 91       	pop	r19
    13ae:	2f 91       	pop	r18
    13b0:	0f 90       	pop	r0
    13b2:	0f be       	out	0x3f, r0	; 63
    13b4:	0f 90       	pop	r0
    13b6:	1f 90       	pop	r1
    13b8:	18 95       	reti

000013ba <__vector_19>:
    13ba:	1f 92       	push	r1
    13bc:	0f 92       	push	r0
    13be:	0f b6       	in	r0, 0x3f	; 63
    13c0:	0f 92       	push	r0
    13c2:	11 24       	eor	r1, r1
    13c4:	2f 93       	push	r18
    13c6:	3f 93       	push	r19
    13c8:	4f 93       	push	r20
    13ca:	5f 93       	push	r21
    13cc:	6f 93       	push	r22
    13ce:	7f 93       	push	r23
    13d0:	8f 93       	push	r24
    13d2:	9f 93       	push	r25
    13d4:	af 93       	push	r26
    13d6:	bf 93       	push	r27
    13d8:	ef 93       	push	r30
    13da:	ff 93       	push	r31
    13dc:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    13e0:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    13e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13ec:	c9 01       	movw	r24, r18
    13ee:	03 2e       	mov	r0, r19
    13f0:	00 0c       	add	r0, r0
    13f2:	aa 0b       	sbc	r26, r26
    13f4:	bb 0b       	sbc	r27, r27
    13f6:	dc 01       	movw	r26, r24
    13f8:	99 27       	eor	r25, r25
    13fa:	88 27       	eor	r24, r24
    13fc:	60 e0       	ldi	r22, 0x00	; 0
    13fe:	70 e0       	ldi	r23, 0x00	; 0
    1400:	84 2b       	or	r24, r20
    1402:	95 2b       	or	r25, r21
    1404:	a6 2b       	or	r26, r22
    1406:	b7 2b       	or	r27, r23
    1408:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    140c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1410:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    1414:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1418:	b0 9b       	sbis	0x16, 0	; 22
    141a:	1b c0       	rjmp	.+54     	; 0x1452 <__vector_19+0x98>
    141c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1420:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1424:	c9 01       	movw	r24, r18
    1426:	01 96       	adiw	r24, 0x01	; 1
    1428:	09 2e       	mov	r0, r25
    142a:	00 0c       	add	r0, r0
    142c:	aa 0b       	sbc	r26, r26
    142e:	bb 0b       	sbc	r27, r27
    1430:	dc 01       	movw	r26, r24
    1432:	99 27       	eor	r25, r25
    1434:	88 27       	eor	r24, r24
    1436:	60 e0       	ldi	r22, 0x00	; 0
    1438:	70 e0       	ldi	r23, 0x00	; 0
    143a:	84 2b       	or	r24, r20
    143c:	95 2b       	or	r25, r21
    143e:	a6 2b       	or	r26, r22
    1440:	b7 2b       	or	r27, r23
    1442:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1446:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    144a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    144e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1452:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x1c>
    1456:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x1d>
    145a:	30 97       	sbiw	r30, 0x00	; 0
    145c:	39 f0       	breq	.+14     	; 0x146c <__vector_19+0xb2>
    145e:	6e e0       	ldi	r22, 0x0E	; 14
    1460:	70 e0       	ldi	r23, 0x00	; 0
    1462:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x1c>
    1466:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x1d>
    146a:	09 95       	icall
    146c:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    1470:	ff 91       	pop	r31
    1472:	ef 91       	pop	r30
    1474:	bf 91       	pop	r27
    1476:	af 91       	pop	r26
    1478:	9f 91       	pop	r25
    147a:	8f 91       	pop	r24
    147c:	7f 91       	pop	r23
    147e:	6f 91       	pop	r22
    1480:	5f 91       	pop	r21
    1482:	4f 91       	pop	r20
    1484:	3f 91       	pop	r19
    1486:	2f 91       	pop	r18
    1488:	0f 90       	pop	r0
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	0f 90       	pop	r0
    148e:	1f 90       	pop	r1
    1490:	18 95       	reti

00001492 <__vector_20>:
    1492:	1f 92       	push	r1
    1494:	0f 92       	push	r0
    1496:	0f b6       	in	r0, 0x3f	; 63
    1498:	0f 92       	push	r0
    149a:	11 24       	eor	r1, r1
    149c:	2f 93       	push	r18
    149e:	3f 93       	push	r19
    14a0:	4f 93       	push	r20
    14a2:	5f 93       	push	r21
    14a4:	6f 93       	push	r22
    14a6:	7f 93       	push	r23
    14a8:	8f 93       	push	r24
    14aa:	9f 93       	push	r25
    14ac:	af 93       	push	r26
    14ae:	bf 93       	push	r27
    14b0:	ef 93       	push	r30
    14b2:	ff 93       	push	r31
    14b4:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    14b8:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    14bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14c4:	c9 01       	movw	r24, r18
    14c6:	03 2e       	mov	r0, r19
    14c8:	00 0c       	add	r0, r0
    14ca:	aa 0b       	sbc	r26, r26
    14cc:	bb 0b       	sbc	r27, r27
    14ce:	dc 01       	movw	r26, r24
    14d0:	99 27       	eor	r25, r25
    14d2:	88 27       	eor	r24, r24
    14d4:	60 e0       	ldi	r22, 0x00	; 0
    14d6:	70 e0       	ldi	r23, 0x00	; 0
    14d8:	84 2b       	or	r24, r20
    14da:	95 2b       	or	r25, r21
    14dc:	a6 2b       	or	r26, r22
    14de:	b7 2b       	or	r27, r23
    14e0:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    14e4:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    14e8:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    14ec:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    14f0:	b0 9b       	sbis	0x16, 0	; 22
    14f2:	1b c0       	rjmp	.+54     	; 0x152a <__vector_20+0x98>
    14f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14fc:	c9 01       	movw	r24, r18
    14fe:	01 96       	adiw	r24, 0x01	; 1
    1500:	09 2e       	mov	r0, r25
    1502:	00 0c       	add	r0, r0
    1504:	aa 0b       	sbc	r26, r26
    1506:	bb 0b       	sbc	r27, r27
    1508:	dc 01       	movw	r26, r24
    150a:	99 27       	eor	r25, r25
    150c:	88 27       	eor	r24, r24
    150e:	60 e0       	ldi	r22, 0x00	; 0
    1510:	70 e0       	ldi	r23, 0x00	; 0
    1512:	84 2b       	or	r24, r20
    1514:	95 2b       	or	r25, r21
    1516:	a6 2b       	or	r26, r22
    1518:	b7 2b       	or	r27, r23
    151a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    151e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1522:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    1526:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    152a:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x1e>
    152e:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x1f>
    1532:	30 97       	sbiw	r30, 0x00	; 0
    1534:	39 f0       	breq	.+14     	; 0x1544 <__vector_20+0xb2>
    1536:	6f e0       	ldi	r22, 0x0F	; 15
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x1e>
    153e:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x1f>
    1542:	09 95       	icall
    1544:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    1548:	ff 91       	pop	r31
    154a:	ef 91       	pop	r30
    154c:	bf 91       	pop	r27
    154e:	af 91       	pop	r26
    1550:	9f 91       	pop	r25
    1552:	8f 91       	pop	r24
    1554:	7f 91       	pop	r23
    1556:	6f 91       	pop	r22
    1558:	5f 91       	pop	r21
    155a:	4f 91       	pop	r20
    155c:	3f 91       	pop	r19
    155e:	2f 91       	pop	r18
    1560:	0f 90       	pop	r0
    1562:	0f be       	out	0x3f, r0	; 63
    1564:	0f 90       	pop	r0
    1566:	1f 90       	pop	r1
    1568:	18 95       	reti

0000156a <__vector_21>:
    156a:	1f 92       	push	r1
    156c:	0f 92       	push	r0
    156e:	0f b6       	in	r0, 0x3f	; 63
    1570:	0f 92       	push	r0
    1572:	11 24       	eor	r1, r1
    1574:	2f 93       	push	r18
    1576:	3f 93       	push	r19
    1578:	4f 93       	push	r20
    157a:	5f 93       	push	r21
    157c:	6f 93       	push	r22
    157e:	7f 93       	push	r23
    1580:	8f 93       	push	r24
    1582:	9f 93       	push	r25
    1584:	af 93       	push	r26
    1586:	bf 93       	push	r27
    1588:	ef 93       	push	r30
    158a:	ff 93       	push	r31
    158c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    1590:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    1594:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1598:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    159c:	c9 01       	movw	r24, r18
    159e:	03 2e       	mov	r0, r19
    15a0:	00 0c       	add	r0, r0
    15a2:	aa 0b       	sbc	r26, r26
    15a4:	bb 0b       	sbc	r27, r27
    15a6:	dc 01       	movw	r26, r24
    15a8:	99 27       	eor	r25, r25
    15aa:	88 27       	eor	r24, r24
    15ac:	60 e0       	ldi	r22, 0x00	; 0
    15ae:	70 e0       	ldi	r23, 0x00	; 0
    15b0:	84 2b       	or	r24, r20
    15b2:	95 2b       	or	r25, r21
    15b4:	a6 2b       	or	r26, r22
    15b6:	b7 2b       	or	r27, r23
    15b8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    15bc:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    15c0:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    15c4:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    15c8:	b0 9b       	sbis	0x16, 0	; 22
    15ca:	1b c0       	rjmp	.+54     	; 0x1602 <__vector_21+0x98>
    15cc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15d0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15d4:	c9 01       	movw	r24, r18
    15d6:	01 96       	adiw	r24, 0x01	; 1
    15d8:	09 2e       	mov	r0, r25
    15da:	00 0c       	add	r0, r0
    15dc:	aa 0b       	sbc	r26, r26
    15de:	bb 0b       	sbc	r27, r27
    15e0:	dc 01       	movw	r26, r24
    15e2:	99 27       	eor	r25, r25
    15e4:	88 27       	eor	r24, r24
    15e6:	60 e0       	ldi	r22, 0x00	; 0
    15e8:	70 e0       	ldi	r23, 0x00	; 0
    15ea:	84 2b       	or	r24, r20
    15ec:	95 2b       	or	r25, r21
    15ee:	a6 2b       	or	r26, r22
    15f0:	b7 2b       	or	r27, r23
    15f2:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    15f6:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    15fa:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    15fe:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1602:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x20>
    1606:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x21>
    160a:	30 97       	sbiw	r30, 0x00	; 0
    160c:	39 f0       	breq	.+14     	; 0x161c <__vector_21+0xb2>
    160e:	60 e1       	ldi	r22, 0x10	; 16
    1610:	70 e0       	ldi	r23, 0x00	; 0
    1612:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x20>
    1616:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x21>
    161a:	09 95       	icall
    161c:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    1620:	ff 91       	pop	r31
    1622:	ef 91       	pop	r30
    1624:	bf 91       	pop	r27
    1626:	af 91       	pop	r26
    1628:	9f 91       	pop	r25
    162a:	8f 91       	pop	r24
    162c:	7f 91       	pop	r23
    162e:	6f 91       	pop	r22
    1630:	5f 91       	pop	r21
    1632:	4f 91       	pop	r20
    1634:	3f 91       	pop	r19
    1636:	2f 91       	pop	r18
    1638:	0f 90       	pop	r0
    163a:	0f be       	out	0x3f, r0	; 63
    163c:	0f 90       	pop	r0
    163e:	1f 90       	pop	r1
    1640:	18 95       	reti

00001642 <__vector_22>:
    1642:	1f 92       	push	r1
    1644:	0f 92       	push	r0
    1646:	0f b6       	in	r0, 0x3f	; 63
    1648:	0f 92       	push	r0
    164a:	11 24       	eor	r1, r1
    164c:	2f 93       	push	r18
    164e:	3f 93       	push	r19
    1650:	4f 93       	push	r20
    1652:	5f 93       	push	r21
    1654:	6f 93       	push	r22
    1656:	7f 93       	push	r23
    1658:	8f 93       	push	r24
    165a:	9f 93       	push	r25
    165c:	af 93       	push	r26
    165e:	bf 93       	push	r27
    1660:	ef 93       	push	r30
    1662:	ff 93       	push	r31
    1664:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    1668:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    166c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1670:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1674:	c9 01       	movw	r24, r18
    1676:	03 2e       	mov	r0, r19
    1678:	00 0c       	add	r0, r0
    167a:	aa 0b       	sbc	r26, r26
    167c:	bb 0b       	sbc	r27, r27
    167e:	dc 01       	movw	r26, r24
    1680:	99 27       	eor	r25, r25
    1682:	88 27       	eor	r24, r24
    1684:	60 e0       	ldi	r22, 0x00	; 0
    1686:	70 e0       	ldi	r23, 0x00	; 0
    1688:	84 2b       	or	r24, r20
    168a:	95 2b       	or	r25, r21
    168c:	a6 2b       	or	r26, r22
    168e:	b7 2b       	or	r27, r23
    1690:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1694:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1698:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    169c:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    16a0:	b0 9b       	sbis	0x16, 0	; 22
    16a2:	1b c0       	rjmp	.+54     	; 0x16da <__vector_22+0x98>
    16a4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16a8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ac:	c9 01       	movw	r24, r18
    16ae:	01 96       	adiw	r24, 0x01	; 1
    16b0:	09 2e       	mov	r0, r25
    16b2:	00 0c       	add	r0, r0
    16b4:	aa 0b       	sbc	r26, r26
    16b6:	bb 0b       	sbc	r27, r27
    16b8:	dc 01       	movw	r26, r24
    16ba:	99 27       	eor	r25, r25
    16bc:	88 27       	eor	r24, r24
    16be:	60 e0       	ldi	r22, 0x00	; 0
    16c0:	70 e0       	ldi	r23, 0x00	; 0
    16c2:	84 2b       	or	r24, r20
    16c4:	95 2b       	or	r25, r21
    16c6:	a6 2b       	or	r26, r22
    16c8:	b7 2b       	or	r27, r23
    16ca:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    16ce:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    16d2:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    16d6:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    16da:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x22>
    16de:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x23>
    16e2:	30 97       	sbiw	r30, 0x00	; 0
    16e4:	39 f0       	breq	.+14     	; 0x16f4 <__vector_22+0xb2>
    16e6:	61 e1       	ldi	r22, 0x11	; 17
    16e8:	70 e0       	ldi	r23, 0x00	; 0
    16ea:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x22>
    16ee:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x23>
    16f2:	09 95       	icall
    16f4:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
    16f8:	ff 91       	pop	r31
    16fa:	ef 91       	pop	r30
    16fc:	bf 91       	pop	r27
    16fe:	af 91       	pop	r26
    1700:	9f 91       	pop	r25
    1702:	8f 91       	pop	r24
    1704:	7f 91       	pop	r23
    1706:	6f 91       	pop	r22
    1708:	5f 91       	pop	r21
    170a:	4f 91       	pop	r20
    170c:	3f 91       	pop	r19
    170e:	2f 91       	pop	r18
    1710:	0f 90       	pop	r0
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	0f 90       	pop	r0
    1716:	1f 90       	pop	r1
    1718:	18 95       	reti

0000171a <enqueueByDeadline>:
    171a:	ef 92       	push	r14
    171c:	ff 92       	push	r15
    171e:	0f 93       	push	r16
    1720:	1f 93       	push	r17
    1722:	cf 93       	push	r28
    1724:	df 93       	push	r29
    1726:	7b 01       	movw	r14, r22
    1728:	eb 01       	movw	r28, r22
    172a:	a8 81       	ld	r26, Y
    172c:	b9 81       	ldd	r27, Y+1	; 0x01
    172e:	10 97       	sbiw	r26, 0x00	; 0
    1730:	61 f1       	breq	.+88     	; 0x178a <enqueueByDeadline+0x70>
    1732:	fc 01       	movw	r30, r24
    1734:	06 81       	ldd	r16, Z+6	; 0x06
    1736:	17 81       	ldd	r17, Z+7	; 0x07
    1738:	20 85       	ldd	r18, Z+8	; 0x08
    173a:	31 85       	ldd	r19, Z+9	; 0x09
    173c:	16 96       	adiw	r26, 0x06	; 6
    173e:	4d 91       	ld	r20, X+
    1740:	5d 91       	ld	r21, X+
    1742:	6d 91       	ld	r22, X+
    1744:	7c 91       	ld	r23, X
    1746:	19 97       	sbiw	r26, 0x09	; 9
    1748:	04 17       	cp	r16, r20
    174a:	15 07       	cpc	r17, r21
    174c:	26 07       	cpc	r18, r22
    174e:	37 07       	cpc	r19, r23
    1750:	14 f4       	brge	.+4      	; 0x1756 <enqueueByDeadline+0x3c>
    1752:	1b c0       	rjmp	.+54     	; 0x178a <enqueueByDeadline+0x70>
    1754:	df 01       	movw	r26, r30
    1756:	ed 91       	ld	r30, X+
    1758:	fc 91       	ld	r31, X
    175a:	11 97       	sbiw	r26, 0x01	; 1
    175c:	30 97       	sbiw	r30, 0x00	; 0
    175e:	49 f0       	breq	.+18     	; 0x1772 <enqueueByDeadline+0x58>
    1760:	46 81       	ldd	r20, Z+6	; 0x06
    1762:	57 81       	ldd	r21, Z+7	; 0x07
    1764:	60 85       	ldd	r22, Z+8	; 0x08
    1766:	71 85       	ldd	r23, Z+9	; 0x09
    1768:	04 17       	cp	r16, r20
    176a:	15 07       	cpc	r17, r21
    176c:	26 07       	cpc	r18, r22
    176e:	37 07       	cpc	r19, r23
    1770:	8c f7       	brge	.-30     	; 0x1754 <enqueueByDeadline+0x3a>
    1772:	ec 01       	movw	r28, r24
    1774:	f9 83       	std	Y+1, r31	; 0x01
    1776:	e8 83       	st	Y, r30
    1778:	10 97       	sbiw	r26, 0x00	; 0
    177a:	21 f4       	brne	.+8      	; 0x1784 <enqueueByDeadline+0x6a>
    177c:	f7 01       	movw	r30, r14
    177e:	91 83       	std	Z+1, r25	; 0x01
    1780:	80 83       	st	Z, r24
    1782:	07 c0       	rjmp	.+14     	; 0x1792 <enqueueByDeadline+0x78>
    1784:	8d 93       	st	X+, r24
    1786:	9c 93       	st	X, r25
    1788:	04 c0       	rjmp	.+8      	; 0x1792 <enqueueByDeadline+0x78>
    178a:	ec 01       	movw	r28, r24
    178c:	b9 83       	std	Y+1, r27	; 0x01
    178e:	a8 83       	st	Y, r26
    1790:	f5 cf       	rjmp	.-22     	; 0x177c <enqueueByDeadline+0x62>
    1792:	df 91       	pop	r29
    1794:	cf 91       	pop	r28
    1796:	1f 91       	pop	r17
    1798:	0f 91       	pop	r16
    179a:	ff 90       	pop	r15
    179c:	ef 90       	pop	r14
    179e:	08 95       	ret

000017a0 <dequeue>:
    17a0:	dc 01       	movw	r26, r24
    17a2:	ed 91       	ld	r30, X+
    17a4:	fc 91       	ld	r31, X
    17a6:	11 97       	sbiw	r26, 0x01	; 1
    17a8:	30 97       	sbiw	r30, 0x00	; 0
    17aa:	59 f4       	brne	.+22     	; 0x17c2 <dequeue+0x22>
    17ac:	8f ef       	ldi	r24, 0xFF	; 255
    17ae:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    17b2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    17b6:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    17ba:	81 e0       	ldi	r24, 0x01	; 1
    17bc:	83 bf       	out	0x33, r24	; 51
    17be:	88 95       	sleep
    17c0:	fd cf       	rjmp	.-6      	; 0x17bc <dequeue+0x1c>
    17c2:	20 81       	ld	r18, Z
    17c4:	31 81       	ldd	r19, Z+1	; 0x01
    17c6:	2d 93       	st	X+, r18
    17c8:	3c 93       	st	X, r19
    17ca:	cf 01       	movw	r24, r30
    17cc:	08 95       	ret

000017ce <__vector_9>:
        return 1;
    }
    return 0;
}

TIMER_OVERFLOW_INTERRUPT {
    17ce:	1f 92       	push	r1
    17d0:	0f 92       	push	r0
    17d2:	0f b6       	in	r0, 0x3f	; 63
    17d4:	0f 92       	push	r0
    17d6:	11 24       	eor	r1, r1
    17d8:	2f 93       	push	r18
    17da:	3f 93       	push	r19
    17dc:	4f 93       	push	r20
    17de:	5f 93       	push	r21
    17e0:	6f 93       	push	r22
    17e2:	7f 93       	push	r23
    17e4:	8f 93       	push	r24
    17e6:	9f 93       	push	r25
    17e8:	ef 93       	push	r30
    17ea:	ff 93       	push	r31
    TIMER_OCLR();
    overflows++;
    17ec:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    17f0:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    17f4:	01 96       	adiw	r24, 0x01	; 1
    17f6:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <overflows+0x1>
    17fa:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <overflows>
    TIMERSET(timerQ);
    17fe:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <timerQ>
    1802:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <timerQ+0x1>
    1806:	30 97       	sbiw	r30, 0x00	; 0
    1808:	01 f1       	breq	.+64     	; 0x184a <__vector_9+0x7c>
    180a:	42 81       	ldd	r20, Z+2	; 0x02
    180c:	53 81       	ldd	r21, Z+3	; 0x03
    180e:	64 81       	ldd	r22, Z+4	; 0x04
    1810:	75 81       	ldd	r23, Z+5	; 0x05
    1812:	86 17       	cp	r24, r22
    1814:	97 07       	cpc	r25, r23
    1816:	c9 f4       	brne	.+50     	; 0x184a <__vector_9+0x7c>
    1818:	ca 01       	movw	r24, r20
    181a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    181e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1822:	42 1b       	sub	r20, r18
    1824:	53 0b       	sbc	r21, r19
    1826:	41 30       	cpi	r20, 0x01	; 1
    1828:	51 05       	cpc	r21, r1
    182a:	29 f4       	brne	.+10     	; 0x1836 <__vector_9+0x68>
    182c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1830:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1834:	01 96       	adiw	r24, 0x01	; 1
    1836:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    183a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    183e:	ef e6       	ldi	r30, 0x6F	; 111
    1840:	f0 e0       	ldi	r31, 0x00	; 0
    1842:	80 81       	ld	r24, Z
    1844:	82 60       	ori	r24, 0x02	; 2
    1846:	80 83       	st	Z, r24
    1848:	05 c0       	rjmp	.+10     	; 0x1854 <__vector_9+0x86>
    184a:	ef e6       	ldi	r30, 0x6F	; 111
    184c:	f0 e0       	ldi	r31, 0x00	; 0
    184e:	80 81       	ld	r24, Z
    1850:	8d 7f       	andi	r24, 0xFD	; 253
    1852:	80 83       	st	Z, r24
}
    1854:	ff 91       	pop	r31
    1856:	ef 91       	pop	r30
    1858:	9f 91       	pop	r25
    185a:	8f 91       	pop	r24
    185c:	7f 91       	pop	r23
    185e:	6f 91       	pop	r22
    1860:	5f 91       	pop	r21
    1862:	4f 91       	pop	r20
    1864:	3f 91       	pop	r19
    1866:	2f 91       	pop	r18
    1868:	0f 90       	pop	r0
    186a:	0f be       	out	0x3f, r0	; 63
    186c:	0f 90       	pop	r0
    186e:	1f 90       	pop	r1
    1870:	18 95       	reti

00001872 <__vector_7>:

TIMER_COMPARE_INTERRUPT {
    1872:	1f 92       	push	r1
    1874:	0f 92       	push	r0
    1876:	0f b6       	in	r0, 0x3f	; 63
    1878:	0f 92       	push	r0
    187a:	11 24       	eor	r1, r1
    187c:	cf 92       	push	r12
    187e:	df 92       	push	r13
    1880:	ef 92       	push	r14
    1882:	ff 92       	push	r15
    1884:	2f 93       	push	r18
    1886:	3f 93       	push	r19
    1888:	4f 93       	push	r20
    188a:	5f 93       	push	r21
    188c:	6f 93       	push	r22
    188e:	7f 93       	push	r23
    1890:	8f 93       	push	r24
    1892:	9f 93       	push	r25
    1894:	af 93       	push	r26
    1896:	bf 93       	push	r27
    1898:	ef 93       	push	r30
    189a:	ff 93       	push	r31
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    189c:	c0 90 0e 01 	lds	r12, 0x010E	; 0x80010e <overflows>
    18a0:	d0 90 0f 01 	lds	r13, 0x010F	; 0x80010f <overflows+0x1>
    18a4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18a8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18ac:	b0 99       	sbic	0x16, 0	; 22
    18ae:	0f c0       	rjmp	.+30     	; 0x18ce <__vector_7+0x5c>
    18b0:	0d 2c       	mov	r0, r13
    18b2:	00 0c       	add	r0, r0
    18b4:	ee 08       	sbc	r14, r14
    18b6:	ff 08       	sbc	r15, r15
    18b8:	d6 01       	movw	r26, r12
    18ba:	99 27       	eor	r25, r25
    18bc:	88 27       	eor	r24, r24
    18be:	69 01       	movw	r12, r18
    18c0:	e1 2c       	mov	r14, r1
    18c2:	f1 2c       	mov	r15, r1
    18c4:	c8 2a       	or	r12, r24
    18c6:	d9 2a       	or	r13, r25
    18c8:	ea 2a       	or	r14, r26
    18ca:	fb 2a       	or	r15, r27
    18cc:	15 c0       	rjmp	.+42     	; 0x18f8 <__vector_7+0x86>
    18ce:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18d2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18d6:	8f ef       	ldi	r24, 0xFF	; 255
    18d8:	c8 1a       	sub	r12, r24
    18da:	d8 0a       	sbc	r13, r24
    18dc:	0d 2c       	mov	r0, r13
    18de:	00 0c       	add	r0, r0
    18e0:	ee 08       	sbc	r14, r14
    18e2:	ff 08       	sbc	r15, r15
    18e4:	d6 01       	movw	r26, r12
    18e6:	99 27       	eor	r25, r25
    18e8:	88 27       	eor	r24, r24
    18ea:	69 01       	movw	r12, r18
    18ec:	e1 2c       	mov	r14, r1
    18ee:	f1 2c       	mov	r15, r1
    18f0:	c8 2a       	or	r12, r24
    18f2:	d9 2a       	or	r13, r25
    18f4:	ea 2a       	or	r14, r26
    18f6:	fb 2a       	or	r15, r27
    while (timerQ && (timerQ->baseline - now <= 0))
    18f8:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <timerQ>
    18fc:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <timerQ+0x1>
    1900:	30 97       	sbiw	r30, 0x00	; 0
    1902:	09 f4       	brne	.+2      	; 0x1906 <__vector_7+0x94>
    1904:	42 c0       	rjmp	.+132    	; 0x198a <__vector_7+0x118>
    1906:	82 81       	ldd	r24, Z+2	; 0x02
    1908:	93 81       	ldd	r25, Z+3	; 0x03
    190a:	a4 81       	ldd	r26, Z+4	; 0x04
    190c:	b5 81       	ldd	r27, Z+5	; 0x05
    190e:	8c 19       	sub	r24, r12
    1910:	9d 09       	sbc	r25, r13
    1912:	ae 09       	sbc	r26, r14
    1914:	bf 09       	sbc	r27, r15
    1916:	18 16       	cp	r1, r24
    1918:	19 06       	cpc	r1, r25
    191a:	1a 06       	cpc	r1, r26
    191c:	1b 06       	cpc	r1, r27
    191e:	ec f1       	brlt	.+122    	; 0x199a <__vector_7+0x128>
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    1920:	84 e1       	ldi	r24, 0x14	; 20
    1922:	91 e0       	ldi	r25, 0x01	; 1
    1924:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <dequeue>
    1928:	66 e1       	ldi	r22, 0x16	; 22
    192a:	71 e0       	ldi	r23, 0x01	; 1
    192c:	0e 94 8d 0b 	call	0x171a	; 0x171a <enqueueByDeadline>

TIMER_COMPARE_INTERRUPT {
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    while (timerQ && (timerQ->baseline - now <= 0))
    1930:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <timerQ>
    1934:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <timerQ+0x1>
    1938:	30 97       	sbiw	r30, 0x00	; 0
    193a:	39 f1       	breq	.+78     	; 0x198a <__vector_7+0x118>
    193c:	82 81       	ldd	r24, Z+2	; 0x02
    193e:	93 81       	ldd	r25, Z+3	; 0x03
    1940:	a4 81       	ldd	r26, Z+4	; 0x04
    1942:	b5 81       	ldd	r27, Z+5	; 0x05
    1944:	8c 19       	sub	r24, r12
    1946:	9d 09       	sbc	r25, r13
    1948:	ae 09       	sbc	r26, r14
    194a:	bf 09       	sbc	r27, r15
    194c:	18 16       	cp	r1, r24
    194e:	19 06       	cpc	r1, r25
    1950:	1a 06       	cpc	r1, r26
    1952:	1b 06       	cpc	r1, r27
    1954:	2c f7       	brge	.-54     	; 0x1920 <__vector_7+0xae>
    1956:	21 c0       	rjmp	.+66     	; 0x199a <__vector_7+0x128>
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    TIMERSET(timerQ);
    1958:	9c 01       	movw	r18, r24
    195a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    195e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1962:	84 1b       	sub	r24, r20
    1964:	95 0b       	sbc	r25, r21
    1966:	01 97       	sbiw	r24, 0x01	; 1
    1968:	31 f4       	brne	.+12     	; 0x1976 <__vector_7+0x104>
    196a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    196e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1972:	2f 5f       	subi	r18, 0xFF	; 255
    1974:	3f 4f       	sbci	r19, 0xFF	; 255
    1976:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    197a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    197e:	ef e6       	ldi	r30, 0x6F	; 111
    1980:	f0 e0       	ldi	r31, 0x00	; 0
    1982:	80 81       	ld	r24, Z
    1984:	82 60       	ori	r24, 0x02	; 2
    1986:	80 83       	st	Z, r24
    1988:	05 c0       	rjmp	.+10     	; 0x1994 <__vector_7+0x122>
    198a:	ef e6       	ldi	r30, 0x6F	; 111
    198c:	f0 e0       	ldi	r31, 0x00	; 0
    198e:	80 81       	ld	r24, Z
    1990:	8d 7f       	andi	r24, 0xFD	; 253
    1992:	80 83       	st	Z, r24
    schedule();
    1994:	0e 94 ba 03 	call	0x774	; 0x774 <schedule>
}
    1998:	0c c0       	rjmp	.+24     	; 0x19b2 <__vector_7+0x140>
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    while (timerQ && (timerQ->baseline - now <= 0))
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    TIMERSET(timerQ);
    199a:	82 81       	ldd	r24, Z+2	; 0x02
    199c:	93 81       	ldd	r25, Z+3	; 0x03
    199e:	a4 81       	ldd	r26, Z+4	; 0x04
    19a0:	b5 81       	ldd	r27, Z+5	; 0x05
    19a2:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    19a6:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    19aa:	2a 17       	cp	r18, r26
    19ac:	3b 07       	cpc	r19, r27
    19ae:	69 f7       	brne	.-38     	; 0x198a <__vector_7+0x118>
    19b0:	d3 cf       	rjmp	.-90     	; 0x1958 <__vector_7+0xe6>
    schedule();
}
    19b2:	ff 91       	pop	r31
    19b4:	ef 91       	pop	r30
    19b6:	bf 91       	pop	r27
    19b8:	af 91       	pop	r26
    19ba:	9f 91       	pop	r25
    19bc:	8f 91       	pop	r24
    19be:	7f 91       	pop	r23
    19c0:	6f 91       	pop	r22
    19c2:	5f 91       	pop	r21
    19c4:	4f 91       	pop	r20
    19c6:	3f 91       	pop	r19
    19c8:	2f 91       	pop	r18
    19ca:	ff 90       	pop	r15
    19cc:	ef 90       	pop	r14
    19ce:	df 90       	pop	r13
    19d0:	cf 90       	pop	r12
    19d2:	0f 90       	pop	r0
    19d4:	0f be       	out	0x3f, r0	; 63
    19d6:	0f 90       	pop	r0
    19d8:	1f 90       	pop	r1
    19da:	18 95       	reti

000019dc <USART_Init>:
UCSR0B &= ~(1<<TXB80);
if ( data & 0x0100 ){
    UCSR0B |= (1<<TXB80);
}
/* Put data into buffer, sends the data */
UDR0 = data;
    19dc:	83 e3       	ldi	r24, 0x33	; 51
    19de:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
    19e2:	e1 ec       	ldi	r30, 0xC1	; 193
    19e4:	f0 e0       	ldi	r31, 0x00	; 0
    19e6:	80 81       	ld	r24, Z
    19e8:	88 61       	ori	r24, 0x18	; 24
    19ea:	80 83       	st	Z, r24
    19ec:	80 81       	ld	r24, Z
    19ee:	80 68       	ori	r24, 0x80	; 128
    19f0:	80 83       	st	Z, r24
    19f2:	e2 ec       	ldi	r30, 0xC2	; 194
    19f4:	f0 e0       	ldi	r31, 0x00	; 0
    19f6:	80 81       	ld	r24, Z
    19f8:	87 7f       	andi	r24, 0xF7	; 247
    19fa:	80 83       	st	Z, r24
    19fc:	80 81       	ld	r24, Z
    19fe:	82 60       	ori	r24, 0x02	; 2
    1a00:	80 83       	st	Z, r24
    1a02:	80 81       	ld	r24, Z
    1a04:	84 60       	ori	r24, 0x04	; 4
    1a06:	80 83       	st	Z, r24
    1a08:	08 95       	ret

00001a0a <USART_Echo>:
}


void USART_Echo(){
    1a0a:	cf 93       	push	r28


    if((UCSR0A & (1<<RXC0))>0){
    1a0c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
    1a10:	88 23       	and	r24, r24
    1a12:	7c f4       	brge	.+30     	; 0x1a32 <USART_Echo+0x28>
		unsigned char data = UDR0;
    1a14:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
		writeLong(data);
    1a18:	6c 2f       	mov	r22, r28
    1a1a:	70 e0       	ldi	r23, 0x00	; 0
    1a1c:	80 e0       	ldi	r24, 0x00	; 0
    1a1e:	90 e0       	ldi	r25, 0x00	; 0
    1a20:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <writeLong>
		while ( !( UCSR0A & (1<<UDRE0))) ;
    1a24:	e0 ec       	ldi	r30, 0xC0	; 192
    1a26:	f0 e0       	ldi	r31, 0x00	; 0
    1a28:	80 81       	ld	r24, Z
    1a2a:	85 ff       	sbrs	r24, 5
    1a2c:	fd cf       	rjmp	.-6      	; 0x1a28 <USART_Echo+0x1e>
		//UDR0 = 'A';
		UDR0 = data;
    1a2e:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
    
    
	


}
    1a32:	cf 91       	pop	r28
    1a34:	08 95       	ret

00001a36 <__subsf3>:
    1a36:	50 58       	subi	r21, 0x80	; 128

00001a38 <__addsf3>:
    1a38:	bb 27       	eor	r27, r27
    1a3a:	aa 27       	eor	r26, r26
    1a3c:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__addsf3x>
    1a40:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__fp_round>
    1a44:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <__fp_pscA>
    1a48:	38 f0       	brcs	.+14     	; 0x1a58 <__addsf3+0x20>
    1a4a:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fp_pscB>
    1a4e:	20 f0       	brcs	.+8      	; 0x1a58 <__addsf3+0x20>
    1a50:	39 f4       	brne	.+14     	; 0x1a60 <__addsf3+0x28>
    1a52:	9f 3f       	cpi	r25, 0xFF	; 255
    1a54:	19 f4       	brne	.+6      	; 0x1a5c <__addsf3+0x24>
    1a56:	26 f4       	brtc	.+8      	; 0x1a60 <__addsf3+0x28>
    1a58:	0c 94 41 0e 	jmp	0x1c82	; 0x1c82 <__fp_nan>
    1a5c:	0e f4       	brtc	.+2      	; 0x1a60 <__addsf3+0x28>
    1a5e:	e0 95       	com	r30
    1a60:	e7 fb       	bst	r30, 7
    1a62:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>

00001a66 <__addsf3x>:
    1a66:	e9 2f       	mov	r30, r25
    1a68:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <__fp_split3>
    1a6c:	58 f3       	brcs	.-42     	; 0x1a44 <__addsf3+0xc>
    1a6e:	ba 17       	cp	r27, r26
    1a70:	62 07       	cpc	r22, r18
    1a72:	73 07       	cpc	r23, r19
    1a74:	84 07       	cpc	r24, r20
    1a76:	95 07       	cpc	r25, r21
    1a78:	20 f0       	brcs	.+8      	; 0x1a82 <__addsf3x+0x1c>
    1a7a:	79 f4       	brne	.+30     	; 0x1a9a <__addsf3x+0x34>
    1a7c:	a6 f5       	brtc	.+104    	; 0x1ae6 <__addsf3x+0x80>
    1a7e:	0c 94 9d 0e 	jmp	0x1d3a	; 0x1d3a <__fp_zero>
    1a82:	0e f4       	brtc	.+2      	; 0x1a86 <__addsf3x+0x20>
    1a84:	e0 95       	com	r30
    1a86:	0b 2e       	mov	r0, r27
    1a88:	ba 2f       	mov	r27, r26
    1a8a:	a0 2d       	mov	r26, r0
    1a8c:	0b 01       	movw	r0, r22
    1a8e:	b9 01       	movw	r22, r18
    1a90:	90 01       	movw	r18, r0
    1a92:	0c 01       	movw	r0, r24
    1a94:	ca 01       	movw	r24, r20
    1a96:	a0 01       	movw	r20, r0
    1a98:	11 24       	eor	r1, r1
    1a9a:	ff 27       	eor	r31, r31
    1a9c:	59 1b       	sub	r21, r25
    1a9e:	99 f0       	breq	.+38     	; 0x1ac6 <__addsf3x+0x60>
    1aa0:	59 3f       	cpi	r21, 0xF9	; 249
    1aa2:	50 f4       	brcc	.+20     	; 0x1ab8 <__addsf3x+0x52>
    1aa4:	50 3e       	cpi	r21, 0xE0	; 224
    1aa6:	68 f1       	brcs	.+90     	; 0x1b02 <__addsf3x+0x9c>
    1aa8:	1a 16       	cp	r1, r26
    1aaa:	f0 40       	sbci	r31, 0x00	; 0
    1aac:	a2 2f       	mov	r26, r18
    1aae:	23 2f       	mov	r18, r19
    1ab0:	34 2f       	mov	r19, r20
    1ab2:	44 27       	eor	r20, r20
    1ab4:	58 5f       	subi	r21, 0xF8	; 248
    1ab6:	f3 cf       	rjmp	.-26     	; 0x1a9e <__addsf3x+0x38>
    1ab8:	46 95       	lsr	r20
    1aba:	37 95       	ror	r19
    1abc:	27 95       	ror	r18
    1abe:	a7 95       	ror	r26
    1ac0:	f0 40       	sbci	r31, 0x00	; 0
    1ac2:	53 95       	inc	r21
    1ac4:	c9 f7       	brne	.-14     	; 0x1ab8 <__addsf3x+0x52>
    1ac6:	7e f4       	brtc	.+30     	; 0x1ae6 <__addsf3x+0x80>
    1ac8:	1f 16       	cp	r1, r31
    1aca:	ba 0b       	sbc	r27, r26
    1acc:	62 0b       	sbc	r22, r18
    1ace:	73 0b       	sbc	r23, r19
    1ad0:	84 0b       	sbc	r24, r20
    1ad2:	ba f0       	brmi	.+46     	; 0x1b02 <__addsf3x+0x9c>
    1ad4:	91 50       	subi	r25, 0x01	; 1
    1ad6:	a1 f0       	breq	.+40     	; 0x1b00 <__addsf3x+0x9a>
    1ad8:	ff 0f       	add	r31, r31
    1ada:	bb 1f       	adc	r27, r27
    1adc:	66 1f       	adc	r22, r22
    1ade:	77 1f       	adc	r23, r23
    1ae0:	88 1f       	adc	r24, r24
    1ae2:	c2 f7       	brpl	.-16     	; 0x1ad4 <__addsf3x+0x6e>
    1ae4:	0e c0       	rjmp	.+28     	; 0x1b02 <__addsf3x+0x9c>
    1ae6:	ba 0f       	add	r27, r26
    1ae8:	62 1f       	adc	r22, r18
    1aea:	73 1f       	adc	r23, r19
    1aec:	84 1f       	adc	r24, r20
    1aee:	48 f4       	brcc	.+18     	; 0x1b02 <__addsf3x+0x9c>
    1af0:	87 95       	ror	r24
    1af2:	77 95       	ror	r23
    1af4:	67 95       	ror	r22
    1af6:	b7 95       	ror	r27
    1af8:	f7 95       	ror	r31
    1afa:	9e 3f       	cpi	r25, 0xFE	; 254
    1afc:	08 f0       	brcs	.+2      	; 0x1b00 <__addsf3x+0x9a>
    1afe:	b0 cf       	rjmp	.-160    	; 0x1a60 <__addsf3+0x28>
    1b00:	93 95       	inc	r25
    1b02:	88 0f       	add	r24, r24
    1b04:	08 f0       	brcs	.+2      	; 0x1b08 <__addsf3x+0xa2>
    1b06:	99 27       	eor	r25, r25
    1b08:	ee 0f       	add	r30, r30
    1b0a:	97 95       	ror	r25
    1b0c:	87 95       	ror	r24
    1b0e:	08 95       	ret

00001b10 <__fixsfsi>:
    1b10:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <__fixunssfsi>
    1b14:	68 94       	set
    1b16:	b1 11       	cpse	r27, r1
    1b18:	0c 94 9e 0e 	jmp	0x1d3c	; 0x1d3c <__fp_szero>
    1b1c:	08 95       	ret

00001b1e <__fixunssfsi>:
    1b1e:	0e 94 6b 0e 	call	0x1cd6	; 0x1cd6 <__fp_splitA>
    1b22:	88 f0       	brcs	.+34     	; 0x1b46 <__fixunssfsi+0x28>
    1b24:	9f 57       	subi	r25, 0x7F	; 127
    1b26:	98 f0       	brcs	.+38     	; 0x1b4e <__fixunssfsi+0x30>
    1b28:	b9 2f       	mov	r27, r25
    1b2a:	99 27       	eor	r25, r25
    1b2c:	b7 51       	subi	r27, 0x17	; 23
    1b2e:	b0 f0       	brcs	.+44     	; 0x1b5c <__fixunssfsi+0x3e>
    1b30:	e1 f0       	breq	.+56     	; 0x1b6a <__fixunssfsi+0x4c>
    1b32:	66 0f       	add	r22, r22
    1b34:	77 1f       	adc	r23, r23
    1b36:	88 1f       	adc	r24, r24
    1b38:	99 1f       	adc	r25, r25
    1b3a:	1a f0       	brmi	.+6      	; 0x1b42 <__fixunssfsi+0x24>
    1b3c:	ba 95       	dec	r27
    1b3e:	c9 f7       	brne	.-14     	; 0x1b32 <__fixunssfsi+0x14>
    1b40:	14 c0       	rjmp	.+40     	; 0x1b6a <__fixunssfsi+0x4c>
    1b42:	b1 30       	cpi	r27, 0x01	; 1
    1b44:	91 f0       	breq	.+36     	; 0x1b6a <__fixunssfsi+0x4c>
    1b46:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <__fp_zero>
    1b4a:	b1 e0       	ldi	r27, 0x01	; 1
    1b4c:	08 95       	ret
    1b4e:	0c 94 9d 0e 	jmp	0x1d3a	; 0x1d3a <__fp_zero>
    1b52:	67 2f       	mov	r22, r23
    1b54:	78 2f       	mov	r23, r24
    1b56:	88 27       	eor	r24, r24
    1b58:	b8 5f       	subi	r27, 0xF8	; 248
    1b5a:	39 f0       	breq	.+14     	; 0x1b6a <__fixunssfsi+0x4c>
    1b5c:	b9 3f       	cpi	r27, 0xF9	; 249
    1b5e:	cc f3       	brlt	.-14     	; 0x1b52 <__fixunssfsi+0x34>
    1b60:	86 95       	lsr	r24
    1b62:	77 95       	ror	r23
    1b64:	67 95       	ror	r22
    1b66:	b3 95       	inc	r27
    1b68:	d9 f7       	brne	.-10     	; 0x1b60 <__fixunssfsi+0x42>
    1b6a:	3e f4       	brtc	.+14     	; 0x1b7a <__fixunssfsi+0x5c>
    1b6c:	90 95       	com	r25
    1b6e:	80 95       	com	r24
    1b70:	70 95       	com	r23
    1b72:	61 95       	neg	r22
    1b74:	7f 4f       	sbci	r23, 0xFF	; 255
    1b76:	8f 4f       	sbci	r24, 0xFF	; 255
    1b78:	9f 4f       	sbci	r25, 0xFF	; 255
    1b7a:	08 95       	ret

00001b7c <__floatunsisf>:
    1b7c:	e8 94       	clt
    1b7e:	09 c0       	rjmp	.+18     	; 0x1b92 <__floatsisf+0x12>

00001b80 <__floatsisf>:
    1b80:	97 fb       	bst	r25, 7
    1b82:	3e f4       	brtc	.+14     	; 0x1b92 <__floatsisf+0x12>
    1b84:	90 95       	com	r25
    1b86:	80 95       	com	r24
    1b88:	70 95       	com	r23
    1b8a:	61 95       	neg	r22
    1b8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b90:	9f 4f       	sbci	r25, 0xFF	; 255
    1b92:	99 23       	and	r25, r25
    1b94:	a9 f0       	breq	.+42     	; 0x1bc0 <__floatsisf+0x40>
    1b96:	f9 2f       	mov	r31, r25
    1b98:	96 e9       	ldi	r25, 0x96	; 150
    1b9a:	bb 27       	eor	r27, r27
    1b9c:	93 95       	inc	r25
    1b9e:	f6 95       	lsr	r31
    1ba0:	87 95       	ror	r24
    1ba2:	77 95       	ror	r23
    1ba4:	67 95       	ror	r22
    1ba6:	b7 95       	ror	r27
    1ba8:	f1 11       	cpse	r31, r1
    1baa:	f8 cf       	rjmp	.-16     	; 0x1b9c <__floatsisf+0x1c>
    1bac:	fa f4       	brpl	.+62     	; 0x1bec <__floatsisf+0x6c>
    1bae:	bb 0f       	add	r27, r27
    1bb0:	11 f4       	brne	.+4      	; 0x1bb6 <__floatsisf+0x36>
    1bb2:	60 ff       	sbrs	r22, 0
    1bb4:	1b c0       	rjmp	.+54     	; 0x1bec <__floatsisf+0x6c>
    1bb6:	6f 5f       	subi	r22, 0xFF	; 255
    1bb8:	7f 4f       	sbci	r23, 0xFF	; 255
    1bba:	8f 4f       	sbci	r24, 0xFF	; 255
    1bbc:	9f 4f       	sbci	r25, 0xFF	; 255
    1bbe:	16 c0       	rjmp	.+44     	; 0x1bec <__floatsisf+0x6c>
    1bc0:	88 23       	and	r24, r24
    1bc2:	11 f0       	breq	.+4      	; 0x1bc8 <__floatsisf+0x48>
    1bc4:	96 e9       	ldi	r25, 0x96	; 150
    1bc6:	11 c0       	rjmp	.+34     	; 0x1bea <__floatsisf+0x6a>
    1bc8:	77 23       	and	r23, r23
    1bca:	21 f0       	breq	.+8      	; 0x1bd4 <__floatsisf+0x54>
    1bcc:	9e e8       	ldi	r25, 0x8E	; 142
    1bce:	87 2f       	mov	r24, r23
    1bd0:	76 2f       	mov	r23, r22
    1bd2:	05 c0       	rjmp	.+10     	; 0x1bde <__floatsisf+0x5e>
    1bd4:	66 23       	and	r22, r22
    1bd6:	71 f0       	breq	.+28     	; 0x1bf4 <__floatsisf+0x74>
    1bd8:	96 e8       	ldi	r25, 0x86	; 134
    1bda:	86 2f       	mov	r24, r22
    1bdc:	70 e0       	ldi	r23, 0x00	; 0
    1bde:	60 e0       	ldi	r22, 0x00	; 0
    1be0:	2a f0       	brmi	.+10     	; 0x1bec <__floatsisf+0x6c>
    1be2:	9a 95       	dec	r25
    1be4:	66 0f       	add	r22, r22
    1be6:	77 1f       	adc	r23, r23
    1be8:	88 1f       	adc	r24, r24
    1bea:	da f7       	brpl	.-10     	; 0x1be2 <__floatsisf+0x62>
    1bec:	88 0f       	add	r24, r24
    1bee:	96 95       	lsr	r25
    1bf0:	87 95       	ror	r24
    1bf2:	97 f9       	bld	r25, 7
    1bf4:	08 95       	ret

00001bf6 <floor>:
    1bf6:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <__fp_trunc>
    1bfa:	90 f0       	brcs	.+36     	; 0x1c20 <floor+0x2a>
    1bfc:	9f 37       	cpi	r25, 0x7F	; 127
    1bfe:	48 f4       	brcc	.+18     	; 0x1c12 <floor+0x1c>
    1c00:	91 11       	cpse	r25, r1
    1c02:	16 f0       	brts	.+4      	; 0x1c08 <floor+0x12>
    1c04:	0c 94 9e 0e 	jmp	0x1d3c	; 0x1d3c <__fp_szero>
    1c08:	60 e0       	ldi	r22, 0x00	; 0
    1c0a:	70 e0       	ldi	r23, 0x00	; 0
    1c0c:	80 e8       	ldi	r24, 0x80	; 128
    1c0e:	9f eb       	ldi	r25, 0xBF	; 191
    1c10:	08 95       	ret
    1c12:	26 f4       	brtc	.+8      	; 0x1c1c <floor+0x26>
    1c14:	1b 16       	cp	r1, r27
    1c16:	61 1d       	adc	r22, r1
    1c18:	71 1d       	adc	r23, r1
    1c1a:	81 1d       	adc	r24, r1
    1c1c:	0c 94 18 0e 	jmp	0x1c30	; 0x1c30 <__fp_mintl>
    1c20:	0c 94 33 0e 	jmp	0x1c66	; 0x1c66 <__fp_mpack>

00001c24 <__fp_inf>:
    1c24:	97 f9       	bld	r25, 7
    1c26:	9f 67       	ori	r25, 0x7F	; 127
    1c28:	80 e8       	ldi	r24, 0x80	; 128
    1c2a:	70 e0       	ldi	r23, 0x00	; 0
    1c2c:	60 e0       	ldi	r22, 0x00	; 0
    1c2e:	08 95       	ret

00001c30 <__fp_mintl>:
    1c30:	88 23       	and	r24, r24
    1c32:	71 f4       	brne	.+28     	; 0x1c50 <__fp_mintl+0x20>
    1c34:	77 23       	and	r23, r23
    1c36:	21 f0       	breq	.+8      	; 0x1c40 <__fp_mintl+0x10>
    1c38:	98 50       	subi	r25, 0x08	; 8
    1c3a:	87 2b       	or	r24, r23
    1c3c:	76 2f       	mov	r23, r22
    1c3e:	07 c0       	rjmp	.+14     	; 0x1c4e <__fp_mintl+0x1e>
    1c40:	66 23       	and	r22, r22
    1c42:	11 f4       	brne	.+4      	; 0x1c48 <__fp_mintl+0x18>
    1c44:	99 27       	eor	r25, r25
    1c46:	0d c0       	rjmp	.+26     	; 0x1c62 <__fp_mintl+0x32>
    1c48:	90 51       	subi	r25, 0x10	; 16
    1c4a:	86 2b       	or	r24, r22
    1c4c:	70 e0       	ldi	r23, 0x00	; 0
    1c4e:	60 e0       	ldi	r22, 0x00	; 0
    1c50:	2a f0       	brmi	.+10     	; 0x1c5c <__fp_mintl+0x2c>
    1c52:	9a 95       	dec	r25
    1c54:	66 0f       	add	r22, r22
    1c56:	77 1f       	adc	r23, r23
    1c58:	88 1f       	adc	r24, r24
    1c5a:	da f7       	brpl	.-10     	; 0x1c52 <__fp_mintl+0x22>
    1c5c:	88 0f       	add	r24, r24
    1c5e:	96 95       	lsr	r25
    1c60:	87 95       	ror	r24
    1c62:	97 f9       	bld	r25, 7
    1c64:	08 95       	ret

00001c66 <__fp_mpack>:
    1c66:	9f 3f       	cpi	r25, 0xFF	; 255
    1c68:	31 f0       	breq	.+12     	; 0x1c76 <__fp_mpack_finite+0xc>

00001c6a <__fp_mpack_finite>:
    1c6a:	91 50       	subi	r25, 0x01	; 1
    1c6c:	20 f4       	brcc	.+8      	; 0x1c76 <__fp_mpack_finite+0xc>
    1c6e:	87 95       	ror	r24
    1c70:	77 95       	ror	r23
    1c72:	67 95       	ror	r22
    1c74:	b7 95       	ror	r27
    1c76:	88 0f       	add	r24, r24
    1c78:	91 1d       	adc	r25, r1
    1c7a:	96 95       	lsr	r25
    1c7c:	87 95       	ror	r24
    1c7e:	97 f9       	bld	r25, 7
    1c80:	08 95       	ret

00001c82 <__fp_nan>:
    1c82:	9f ef       	ldi	r25, 0xFF	; 255
    1c84:	80 ec       	ldi	r24, 0xC0	; 192
    1c86:	08 95       	ret

00001c88 <__fp_pscA>:
    1c88:	00 24       	eor	r0, r0
    1c8a:	0a 94       	dec	r0
    1c8c:	16 16       	cp	r1, r22
    1c8e:	17 06       	cpc	r1, r23
    1c90:	18 06       	cpc	r1, r24
    1c92:	09 06       	cpc	r0, r25
    1c94:	08 95       	ret

00001c96 <__fp_pscB>:
    1c96:	00 24       	eor	r0, r0
    1c98:	0a 94       	dec	r0
    1c9a:	12 16       	cp	r1, r18
    1c9c:	13 06       	cpc	r1, r19
    1c9e:	14 06       	cpc	r1, r20
    1ca0:	05 06       	cpc	r0, r21
    1ca2:	08 95       	ret

00001ca4 <__fp_round>:
    1ca4:	09 2e       	mov	r0, r25
    1ca6:	03 94       	inc	r0
    1ca8:	00 0c       	add	r0, r0
    1caa:	11 f4       	brne	.+4      	; 0x1cb0 <__fp_round+0xc>
    1cac:	88 23       	and	r24, r24
    1cae:	52 f0       	brmi	.+20     	; 0x1cc4 <__fp_round+0x20>
    1cb0:	bb 0f       	add	r27, r27
    1cb2:	40 f4       	brcc	.+16     	; 0x1cc4 <__fp_round+0x20>
    1cb4:	bf 2b       	or	r27, r31
    1cb6:	11 f4       	brne	.+4      	; 0x1cbc <__fp_round+0x18>
    1cb8:	60 ff       	sbrs	r22, 0
    1cba:	04 c0       	rjmp	.+8      	; 0x1cc4 <__fp_round+0x20>
    1cbc:	6f 5f       	subi	r22, 0xFF	; 255
    1cbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1cc0:	8f 4f       	sbci	r24, 0xFF	; 255
    1cc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc4:	08 95       	ret

00001cc6 <__fp_split3>:
    1cc6:	57 fd       	sbrc	r21, 7
    1cc8:	90 58       	subi	r25, 0x80	; 128
    1cca:	44 0f       	add	r20, r20
    1ccc:	55 1f       	adc	r21, r21
    1cce:	59 f0       	breq	.+22     	; 0x1ce6 <__fp_splitA+0x10>
    1cd0:	5f 3f       	cpi	r21, 0xFF	; 255
    1cd2:	71 f0       	breq	.+28     	; 0x1cf0 <__fp_splitA+0x1a>
    1cd4:	47 95       	ror	r20

00001cd6 <__fp_splitA>:
    1cd6:	88 0f       	add	r24, r24
    1cd8:	97 fb       	bst	r25, 7
    1cda:	99 1f       	adc	r25, r25
    1cdc:	61 f0       	breq	.+24     	; 0x1cf6 <__fp_splitA+0x20>
    1cde:	9f 3f       	cpi	r25, 0xFF	; 255
    1ce0:	79 f0       	breq	.+30     	; 0x1d00 <__fp_splitA+0x2a>
    1ce2:	87 95       	ror	r24
    1ce4:	08 95       	ret
    1ce6:	12 16       	cp	r1, r18
    1ce8:	13 06       	cpc	r1, r19
    1cea:	14 06       	cpc	r1, r20
    1cec:	55 1f       	adc	r21, r21
    1cee:	f2 cf       	rjmp	.-28     	; 0x1cd4 <__fp_split3+0xe>
    1cf0:	46 95       	lsr	r20
    1cf2:	f1 df       	rcall	.-30     	; 0x1cd6 <__fp_splitA>
    1cf4:	08 c0       	rjmp	.+16     	; 0x1d06 <__fp_splitA+0x30>
    1cf6:	16 16       	cp	r1, r22
    1cf8:	17 06       	cpc	r1, r23
    1cfa:	18 06       	cpc	r1, r24
    1cfc:	99 1f       	adc	r25, r25
    1cfe:	f1 cf       	rjmp	.-30     	; 0x1ce2 <__fp_splitA+0xc>
    1d00:	86 95       	lsr	r24
    1d02:	71 05       	cpc	r23, r1
    1d04:	61 05       	cpc	r22, r1
    1d06:	08 94       	sec
    1d08:	08 95       	ret

00001d0a <__fp_trunc>:
    1d0a:	0e 94 6b 0e 	call	0x1cd6	; 0x1cd6 <__fp_splitA>
    1d0e:	a0 f0       	brcs	.+40     	; 0x1d38 <__fp_trunc+0x2e>
    1d10:	be e7       	ldi	r27, 0x7E	; 126
    1d12:	b9 17       	cp	r27, r25
    1d14:	88 f4       	brcc	.+34     	; 0x1d38 <__fp_trunc+0x2e>
    1d16:	bb 27       	eor	r27, r27
    1d18:	9f 38       	cpi	r25, 0x8F	; 143
    1d1a:	60 f4       	brcc	.+24     	; 0x1d34 <__fp_trunc+0x2a>
    1d1c:	16 16       	cp	r1, r22
    1d1e:	b1 1d       	adc	r27, r1
    1d20:	67 2f       	mov	r22, r23
    1d22:	78 2f       	mov	r23, r24
    1d24:	88 27       	eor	r24, r24
    1d26:	98 5f       	subi	r25, 0xF8	; 248
    1d28:	f7 cf       	rjmp	.-18     	; 0x1d18 <__fp_trunc+0xe>
    1d2a:	86 95       	lsr	r24
    1d2c:	77 95       	ror	r23
    1d2e:	67 95       	ror	r22
    1d30:	b1 1d       	adc	r27, r1
    1d32:	93 95       	inc	r25
    1d34:	96 39       	cpi	r25, 0x96	; 150
    1d36:	c8 f3       	brcs	.-14     	; 0x1d2a <__fp_trunc+0x20>
    1d38:	08 95       	ret

00001d3a <__fp_zero>:
    1d3a:	e8 94       	clt

00001d3c <__fp_szero>:
    1d3c:	bb 27       	eor	r27, r27
    1d3e:	66 27       	eor	r22, r22
    1d40:	77 27       	eor	r23, r23
    1d42:	cb 01       	movw	r24, r22
    1d44:	97 f9       	bld	r25, 7
    1d46:	08 95       	ret

00001d48 <log10>:
    1d48:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <log>
    1d4c:	29 ed       	ldi	r18, 0xD9	; 217
    1d4e:	3b e5       	ldi	r19, 0x5B	; 91
    1d50:	4e ed       	ldi	r20, 0xDE	; 222
    1d52:	5e e3       	ldi	r21, 0x3E	; 62
    1d54:	0c 94 fc 0e 	jmp	0x1df8	; 0x1df8 <__mulsf3>
    1d58:	16 f0       	brts	.+4      	; 0x1d5e <log10+0x16>
    1d5a:	0c 94 33 0e 	jmp	0x1c66	; 0x1c66 <__fp_mpack>
    1d5e:	0c 94 41 0e 	jmp	0x1c82	; 0x1c82 <__fp_nan>
    1d62:	68 94       	set
    1d64:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>

00001d68 <log>:
    1d68:	0e 94 6b 0e 	call	0x1cd6	; 0x1cd6 <__fp_splitA>
    1d6c:	a8 f3       	brcs	.-22     	; 0x1d58 <log10+0x10>
    1d6e:	99 23       	and	r25, r25
    1d70:	c1 f3       	breq	.-16     	; 0x1d62 <log10+0x1a>
    1d72:	ae f3       	brts	.-22     	; 0x1d5e <log10+0x16>
    1d74:	df 93       	push	r29
    1d76:	cf 93       	push	r28
    1d78:	1f 93       	push	r17
    1d7a:	0f 93       	push	r16
    1d7c:	ff 92       	push	r15
    1d7e:	c9 2f       	mov	r28, r25
    1d80:	dd 27       	eor	r29, r29
    1d82:	88 23       	and	r24, r24
    1d84:	2a f0       	brmi	.+10     	; 0x1d90 <log+0x28>
    1d86:	21 97       	sbiw	r28, 0x01	; 1
    1d88:	66 0f       	add	r22, r22
    1d8a:	77 1f       	adc	r23, r23
    1d8c:	88 1f       	adc	r24, r24
    1d8e:	da f7       	brpl	.-10     	; 0x1d86 <log+0x1e>
    1d90:	20 e0       	ldi	r18, 0x00	; 0
    1d92:	30 e0       	ldi	r19, 0x00	; 0
    1d94:	40 e8       	ldi	r20, 0x80	; 128
    1d96:	5f eb       	ldi	r21, 0xBF	; 191
    1d98:	9f e3       	ldi	r25, 0x3F	; 63
    1d9a:	88 39       	cpi	r24, 0x98	; 152
    1d9c:	20 f0       	brcs	.+8      	; 0x1da6 <log+0x3e>
    1d9e:	80 3e       	cpi	r24, 0xE0	; 224
    1da0:	38 f0       	brcs	.+14     	; 0x1db0 <log+0x48>
    1da2:	21 96       	adiw	r28, 0x01	; 1
    1da4:	8f 77       	andi	r24, 0x7F	; 127
    1da6:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <__addsf3>
    1daa:	e0 e7       	ldi	r30, 0x70	; 112
    1dac:	f0 e0       	ldi	r31, 0x00	; 0
    1dae:	04 c0       	rjmp	.+8      	; 0x1db8 <log+0x50>
    1db0:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <__addsf3>
    1db4:	ed e9       	ldi	r30, 0x9D	; 157
    1db6:	f0 e0       	ldi	r31, 0x00	; 0
    1db8:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__fp_powser>
    1dbc:	8b 01       	movw	r16, r22
    1dbe:	be 01       	movw	r22, r28
    1dc0:	ec 01       	movw	r28, r24
    1dc2:	fb 2e       	mov	r15, r27
    1dc4:	6f 57       	subi	r22, 0x7F	; 127
    1dc6:	71 09       	sbc	r23, r1
    1dc8:	75 95       	asr	r23
    1dca:	77 1f       	adc	r23, r23
    1dcc:	88 0b       	sbc	r24, r24
    1dce:	99 0b       	sbc	r25, r25
    1dd0:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <__floatsisf>
    1dd4:	28 e1       	ldi	r18, 0x18	; 24
    1dd6:	32 e7       	ldi	r19, 0x72	; 114
    1dd8:	41 e3       	ldi	r20, 0x31	; 49
    1dda:	5f e3       	ldi	r21, 0x3F	; 63
    1ddc:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__mulsf3x>
    1de0:	af 2d       	mov	r26, r15
    1de2:	98 01       	movw	r18, r16
    1de4:	ae 01       	movw	r20, r28
    1de6:	ff 90       	pop	r15
    1de8:	0f 91       	pop	r16
    1dea:	1f 91       	pop	r17
    1dec:	cf 91       	pop	r28
    1dee:	df 91       	pop	r29
    1df0:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__addsf3x>
    1df4:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__fp_round>

00001df8 <__mulsf3>:
    1df8:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__mulsf3x>
    1dfc:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__fp_round>
    1e00:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <__fp_pscA>
    1e04:	38 f0       	brcs	.+14     	; 0x1e14 <__mulsf3+0x1c>
    1e06:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fp_pscB>
    1e0a:	20 f0       	brcs	.+8      	; 0x1e14 <__mulsf3+0x1c>
    1e0c:	95 23       	and	r25, r21
    1e0e:	11 f0       	breq	.+4      	; 0x1e14 <__mulsf3+0x1c>
    1e10:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>
    1e14:	0c 94 41 0e 	jmp	0x1c82	; 0x1c82 <__fp_nan>
    1e18:	11 24       	eor	r1, r1
    1e1a:	0c 94 9e 0e 	jmp	0x1d3c	; 0x1d3c <__fp_szero>

00001e1e <__mulsf3x>:
    1e1e:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <__fp_split3>
    1e22:	70 f3       	brcs	.-36     	; 0x1e00 <__mulsf3+0x8>

00001e24 <__mulsf3_pse>:
    1e24:	95 9f       	mul	r25, r21
    1e26:	c1 f3       	breq	.-16     	; 0x1e18 <__mulsf3+0x20>
    1e28:	95 0f       	add	r25, r21
    1e2a:	50 e0       	ldi	r21, 0x00	; 0
    1e2c:	55 1f       	adc	r21, r21
    1e2e:	62 9f       	mul	r22, r18
    1e30:	f0 01       	movw	r30, r0
    1e32:	72 9f       	mul	r23, r18
    1e34:	bb 27       	eor	r27, r27
    1e36:	f0 0d       	add	r31, r0
    1e38:	b1 1d       	adc	r27, r1
    1e3a:	63 9f       	mul	r22, r19
    1e3c:	aa 27       	eor	r26, r26
    1e3e:	f0 0d       	add	r31, r0
    1e40:	b1 1d       	adc	r27, r1
    1e42:	aa 1f       	adc	r26, r26
    1e44:	64 9f       	mul	r22, r20
    1e46:	66 27       	eor	r22, r22
    1e48:	b0 0d       	add	r27, r0
    1e4a:	a1 1d       	adc	r26, r1
    1e4c:	66 1f       	adc	r22, r22
    1e4e:	82 9f       	mul	r24, r18
    1e50:	22 27       	eor	r18, r18
    1e52:	b0 0d       	add	r27, r0
    1e54:	a1 1d       	adc	r26, r1
    1e56:	62 1f       	adc	r22, r18
    1e58:	73 9f       	mul	r23, r19
    1e5a:	b0 0d       	add	r27, r0
    1e5c:	a1 1d       	adc	r26, r1
    1e5e:	62 1f       	adc	r22, r18
    1e60:	83 9f       	mul	r24, r19
    1e62:	a0 0d       	add	r26, r0
    1e64:	61 1d       	adc	r22, r1
    1e66:	22 1f       	adc	r18, r18
    1e68:	74 9f       	mul	r23, r20
    1e6a:	33 27       	eor	r19, r19
    1e6c:	a0 0d       	add	r26, r0
    1e6e:	61 1d       	adc	r22, r1
    1e70:	23 1f       	adc	r18, r19
    1e72:	84 9f       	mul	r24, r20
    1e74:	60 0d       	add	r22, r0
    1e76:	21 1d       	adc	r18, r1
    1e78:	82 2f       	mov	r24, r18
    1e7a:	76 2f       	mov	r23, r22
    1e7c:	6a 2f       	mov	r22, r26
    1e7e:	11 24       	eor	r1, r1
    1e80:	9f 57       	subi	r25, 0x7F	; 127
    1e82:	50 40       	sbci	r21, 0x00	; 0
    1e84:	9a f0       	brmi	.+38     	; 0x1eac <__mulsf3_pse+0x88>
    1e86:	f1 f0       	breq	.+60     	; 0x1ec4 <__mulsf3_pse+0xa0>
    1e88:	88 23       	and	r24, r24
    1e8a:	4a f0       	brmi	.+18     	; 0x1e9e <__mulsf3_pse+0x7a>
    1e8c:	ee 0f       	add	r30, r30
    1e8e:	ff 1f       	adc	r31, r31
    1e90:	bb 1f       	adc	r27, r27
    1e92:	66 1f       	adc	r22, r22
    1e94:	77 1f       	adc	r23, r23
    1e96:	88 1f       	adc	r24, r24
    1e98:	91 50       	subi	r25, 0x01	; 1
    1e9a:	50 40       	sbci	r21, 0x00	; 0
    1e9c:	a9 f7       	brne	.-22     	; 0x1e88 <__mulsf3_pse+0x64>
    1e9e:	9e 3f       	cpi	r25, 0xFE	; 254
    1ea0:	51 05       	cpc	r21, r1
    1ea2:	80 f0       	brcs	.+32     	; 0x1ec4 <__mulsf3_pse+0xa0>
    1ea4:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>
    1ea8:	0c 94 9e 0e 	jmp	0x1d3c	; 0x1d3c <__fp_szero>
    1eac:	5f 3f       	cpi	r21, 0xFF	; 255
    1eae:	e4 f3       	brlt	.-8      	; 0x1ea8 <__mulsf3_pse+0x84>
    1eb0:	98 3e       	cpi	r25, 0xE8	; 232
    1eb2:	d4 f3       	brlt	.-12     	; 0x1ea8 <__mulsf3_pse+0x84>
    1eb4:	86 95       	lsr	r24
    1eb6:	77 95       	ror	r23
    1eb8:	67 95       	ror	r22
    1eba:	b7 95       	ror	r27
    1ebc:	f7 95       	ror	r31
    1ebe:	e7 95       	ror	r30
    1ec0:	9f 5f       	subi	r25, 0xFF	; 255
    1ec2:	c1 f7       	brne	.-16     	; 0x1eb4 <__mulsf3_pse+0x90>
    1ec4:	fe 2b       	or	r31, r30
    1ec6:	88 0f       	add	r24, r24
    1ec8:	91 1d       	adc	r25, r1
    1eca:	96 95       	lsr	r25
    1ecc:	87 95       	ror	r24
    1ece:	97 f9       	bld	r25, 7
    1ed0:	08 95       	ret

00001ed2 <__fp_powser>:
    1ed2:	df 93       	push	r29
    1ed4:	cf 93       	push	r28
    1ed6:	1f 93       	push	r17
    1ed8:	0f 93       	push	r16
    1eda:	ff 92       	push	r15
    1edc:	ef 92       	push	r14
    1ede:	df 92       	push	r13
    1ee0:	7b 01       	movw	r14, r22
    1ee2:	8c 01       	movw	r16, r24
    1ee4:	68 94       	set
    1ee6:	06 c0       	rjmp	.+12     	; 0x1ef4 <__fp_powser+0x22>
    1ee8:	da 2e       	mov	r13, r26
    1eea:	ef 01       	movw	r28, r30
    1eec:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__mulsf3x>
    1ef0:	fe 01       	movw	r30, r28
    1ef2:	e8 94       	clt
    1ef4:	a5 91       	lpm	r26, Z+
    1ef6:	25 91       	lpm	r18, Z+
    1ef8:	35 91       	lpm	r19, Z+
    1efa:	45 91       	lpm	r20, Z+
    1efc:	55 91       	lpm	r21, Z+
    1efe:	a6 f3       	brts	.-24     	; 0x1ee8 <__fp_powser+0x16>
    1f00:	ef 01       	movw	r28, r30
    1f02:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__addsf3x>
    1f06:	fe 01       	movw	r30, r28
    1f08:	97 01       	movw	r18, r14
    1f0a:	a8 01       	movw	r20, r16
    1f0c:	da 94       	dec	r13
    1f0e:	69 f7       	brne	.-38     	; 0x1eea <__fp_powser+0x18>
    1f10:	df 90       	pop	r13
    1f12:	ef 90       	pop	r14
    1f14:	ff 90       	pop	r15
    1f16:	0f 91       	pop	r16
    1f18:	1f 91       	pop	r17
    1f1a:	cf 91       	pop	r28
    1f1c:	df 91       	pop	r29
    1f1e:	08 95       	ret

00001f20 <__divmodsi4>:
    1f20:	05 2e       	mov	r0, r21
    1f22:	97 fb       	bst	r25, 7
    1f24:	1e f4       	brtc	.+6      	; 0x1f2c <__divmodsi4+0xc>
    1f26:	00 94       	com	r0
    1f28:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <__negsi2>
    1f2c:	57 fd       	sbrc	r21, 7
    1f2e:	07 d0       	rcall	.+14     	; 0x1f3e <__divmodsi4_neg2>
    1f30:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <__udivmodsi4>
    1f34:	07 fc       	sbrc	r0, 7
    1f36:	03 d0       	rcall	.+6      	; 0x1f3e <__divmodsi4_neg2>
    1f38:	4e f4       	brtc	.+18     	; 0x1f4c <__divmodsi4_exit>
    1f3a:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__negsi2>

00001f3e <__divmodsi4_neg2>:
    1f3e:	50 95       	com	r21
    1f40:	40 95       	com	r20
    1f42:	30 95       	com	r19
    1f44:	21 95       	neg	r18
    1f46:	3f 4f       	sbci	r19, 0xFF	; 255
    1f48:	4f 4f       	sbci	r20, 0xFF	; 255
    1f4a:	5f 4f       	sbci	r21, 0xFF	; 255

00001f4c <__divmodsi4_exit>:
    1f4c:	08 95       	ret

00001f4e <__negsi2>:
    1f4e:	90 95       	com	r25
    1f50:	80 95       	com	r24
    1f52:	70 95       	com	r23
    1f54:	61 95       	neg	r22
    1f56:	7f 4f       	sbci	r23, 0xFF	; 255
    1f58:	8f 4f       	sbci	r24, 0xFF	; 255
    1f5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f5c:	08 95       	ret

00001f5e <__tablejump2__>:
    1f5e:	ee 0f       	add	r30, r30
    1f60:	ff 1f       	adc	r31, r31
    1f62:	05 90       	lpm	r0, Z+
    1f64:	f4 91       	lpm	r31, Z
    1f66:	e0 2d       	mov	r30, r0
    1f68:	09 94       	ijmp

00001f6a <__udivmodsi4>:
    1f6a:	a1 e2       	ldi	r26, 0x21	; 33
    1f6c:	1a 2e       	mov	r1, r26
    1f6e:	aa 1b       	sub	r26, r26
    1f70:	bb 1b       	sub	r27, r27
    1f72:	fd 01       	movw	r30, r26
    1f74:	0d c0       	rjmp	.+26     	; 0x1f90 <__udivmodsi4_ep>

00001f76 <__udivmodsi4_loop>:
    1f76:	aa 1f       	adc	r26, r26
    1f78:	bb 1f       	adc	r27, r27
    1f7a:	ee 1f       	adc	r30, r30
    1f7c:	ff 1f       	adc	r31, r31
    1f7e:	a2 17       	cp	r26, r18
    1f80:	b3 07       	cpc	r27, r19
    1f82:	e4 07       	cpc	r30, r20
    1f84:	f5 07       	cpc	r31, r21
    1f86:	20 f0       	brcs	.+8      	; 0x1f90 <__udivmodsi4_ep>
    1f88:	a2 1b       	sub	r26, r18
    1f8a:	b3 0b       	sbc	r27, r19
    1f8c:	e4 0b       	sbc	r30, r20
    1f8e:	f5 0b       	sbc	r31, r21

00001f90 <__udivmodsi4_ep>:
    1f90:	66 1f       	adc	r22, r22
    1f92:	77 1f       	adc	r23, r23
    1f94:	88 1f       	adc	r24, r24
    1f96:	99 1f       	adc	r25, r25
    1f98:	1a 94       	dec	r1
    1f9a:	69 f7       	brne	.-38     	; 0x1f76 <__udivmodsi4_loop>
    1f9c:	60 95       	com	r22
    1f9e:	70 95       	com	r23
    1fa0:	80 95       	com	r24
    1fa2:	90 95       	com	r25
    1fa4:	9b 01       	movw	r18, r22
    1fa6:	ac 01       	movw	r20, r24
    1fa8:	bd 01       	movw	r22, r26
    1faa:	cf 01       	movw	r24, r30
    1fac:	08 95       	ret

00001fae <setjmp>:
    1fae:	dc 01       	movw	r26, r24
    1fb0:	2d 92       	st	X+, r2
    1fb2:	3d 92       	st	X+, r3
    1fb4:	4d 92       	st	X+, r4
    1fb6:	5d 92       	st	X+, r5
    1fb8:	6d 92       	st	X+, r6
    1fba:	7d 92       	st	X+, r7
    1fbc:	8d 92       	st	X+, r8
    1fbe:	9d 92       	st	X+, r9
    1fc0:	ad 92       	st	X+, r10
    1fc2:	bd 92       	st	X+, r11
    1fc4:	cd 92       	st	X+, r12
    1fc6:	dd 92       	st	X+, r13
    1fc8:	ed 92       	st	X+, r14
    1fca:	fd 92       	st	X+, r15
    1fcc:	0d 93       	st	X+, r16
    1fce:	1d 93       	st	X+, r17
    1fd0:	cd 93       	st	X+, r28
    1fd2:	dd 93       	st	X+, r29
    1fd4:	ff 91       	pop	r31
    1fd6:	ef 91       	pop	r30
    1fd8:	8d b7       	in	r24, 0x3d	; 61
    1fda:	8d 93       	st	X+, r24
    1fdc:	8e b7       	in	r24, 0x3e	; 62
    1fde:	8d 93       	st	X+, r24
    1fe0:	8f b7       	in	r24, 0x3f	; 63
    1fe2:	8d 93       	st	X+, r24
    1fe4:	ed 93       	st	X+, r30
    1fe6:	fd 93       	st	X+, r31
    1fe8:	88 27       	eor	r24, r24
    1fea:	99 27       	eor	r25, r25
    1fec:	09 94       	ijmp

00001fee <longjmp>:
    1fee:	dc 01       	movw	r26, r24
    1ff0:	cb 01       	movw	r24, r22
    1ff2:	81 30       	cpi	r24, 0x01	; 1
    1ff4:	91 05       	cpc	r25, r1
    1ff6:	81 1d       	adc	r24, r1
    1ff8:	2d 90       	ld	r2, X+
    1ffa:	3d 90       	ld	r3, X+
    1ffc:	4d 90       	ld	r4, X+
    1ffe:	5d 90       	ld	r5, X+
    2000:	6d 90       	ld	r6, X+
    2002:	7d 90       	ld	r7, X+
    2004:	8d 90       	ld	r8, X+
    2006:	9d 90       	ld	r9, X+
    2008:	ad 90       	ld	r10, X+
    200a:	bd 90       	ld	r11, X+
    200c:	cd 90       	ld	r12, X+
    200e:	dd 90       	ld	r13, X+
    2010:	ed 90       	ld	r14, X+
    2012:	fd 90       	ld	r15, X+
    2014:	0d 91       	ld	r16, X+
    2016:	1d 91       	ld	r17, X+
    2018:	cd 91       	ld	r28, X+
    201a:	dd 91       	ld	r29, X+
    201c:	ed 91       	ld	r30, X+
    201e:	fd 91       	ld	r31, X+
    2020:	0d 90       	ld	r0, X+
    2022:	f8 94       	cli
    2024:	fe bf       	out	0x3e, r31	; 62
    2026:	0f be       	out	0x3f, r0	; 63
    2028:	ed bf       	out	0x3d, r30	; 61
    202a:	ed 91       	ld	r30, X+
    202c:	fd 91       	ld	r31, X+
    202e:	09 94       	ijmp

00002030 <_exit>:
    2030:	f8 94       	cli

00002032 <__stop_program>:
    2032:	ff cf       	rjmp	.-2      	; 0x2032 <__stop_program>
