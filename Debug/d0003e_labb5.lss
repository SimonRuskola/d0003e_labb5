
d0003e_labb5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000200c  000020a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000200c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800108  00800108  000020a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000020a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000020d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00002118  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002153  00000000  00000000  00002320  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000efe  00000000  00000000  00004473  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012fc  00000000  00000000  00005371  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a9c  00000000  00000000  00006670  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000898  00000000  00000000  0000710c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000242f  00000000  00000000  000079a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b8  00000000  00000000  00009dd3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__vector_1>
       8:	0c 94 43 04 	jmp	0x886	; 0x886 <__vector_2>
       c:	0c 94 af 04 	jmp	0x95e	; 0x95e <__vector_3>
      10:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__vector_4>
      14:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 5e 0c 	jmp	0x18bc	; 0x18bc <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 0c 0c 	jmp	0x1818	; 0x1818 <__vector_9>
      28:	0c 94 f3 05 	jmp	0xbe6	; 0xbe6 <__vector_10>
      2c:	0c 94 5f 06 	jmp	0xcbe	; 0xcbe <__vector_11>
      30:	0c 94 cb 06 	jmp	0xd96	; 0xd96 <__vector_12>
      34:	0c 94 37 07 	jmp	0xe6e	; 0xe6e <__vector_13>
      38:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <__vector_14>
      3c:	0c 94 0f 08 	jmp	0x101e	; 0x101e <__vector_15>
      40:	0c 94 7b 08 	jmp	0x10f6	; 0x10f6 <__vector_16>
      44:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__vector_17>
      48:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__vector_18>
      4c:	0c 94 bf 09 	jmp	0x137e	; 0x137e <__vector_19>
      50:	0c 94 2b 0a 	jmp	0x1456	; 0x1456 <__vector_20>
      54:	0c 94 97 0a 	jmp	0x152e	; 0x152e <__vector_21>
      58:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <__vector_22>
      5c:	8f 00       	.word	0x008f	; ????
      5e:	71 00       	.word	0x0071	; ????
      60:	74 00       	.word	0x0074	; ????
      62:	77 00       	.word	0x0077	; ????
      64:	7a 00       	.word	0x007a	; ????
      66:	7d 00       	.word	0x007d	; ????
      68:	80 00       	.word	0x0080	; ????
      6a:	83 00       	.word	0x0083	; ????
      6c:	86 00       	.word	0x0086	; ????
      6e:	89 00       	.word	0x0089	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	ec e0       	ldi	r30, 0x0C	; 12
      84:	f0 e2       	ldi	r31, 0x20	; 32
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a8 30       	cpi	r26, 0x08	; 8
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	a8 e0       	ldi	r26, 0x08	; 8
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	af 35       	cpi	r26, 0x5F	; 95
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <main>
      a6:	0c 94 04 10 	jmp	0x2008	; 0x2008 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <LCD_Init>:
#include "lcd.h"



void LCD_Init(void) {
	CLKPR = (1 << CLKPCE); 
      ae:	e1 e6       	ldi	r30, 0x61	; 97
      b0:	f0 e0       	ldi	r31, 0x00	; 0
      b2:	80 e8       	ldi	r24, 0x80	; 128
      b4:	80 83       	st	Z, r24
	CLKPR = 0x00;
      b6:	10 82       	st	Z, r1

    // Use external asynchronous clock source 
    // 1/3 Bias and 1/4 duty, 25 segments enabled 
    LCDCRB = (1<<LCDCS) | (1<<LCDMUX1)| (1<<LCDMUX0)| (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
      b8:	87 eb       	ldi	r24, 0xB7	; 183
      ba:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	// 
    // Using 16 as prescaler selection and 8 as LCD Clock Divide 
    LCDFRR = (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
      be:	87 e0       	ldi	r24, 0x07	; 7
      c0:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
    // Set segment drive time to 300 us and output voltage to 3.35 V
    LCDCCR = (1<<LCDCC3) | (1<<LCDCC2) | (1<<LCDCC1)| (1<<LCDCC0);
      c4:	8f e0       	ldi	r24, 0x0F	; 15
      c6:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
    // Enable LCD, low power waveform, no frame interrupt, no blanking 
    LCDCRA = (1<<LCDEN) | (1<<LCDAB) |  (0<<LCDBL);
      ca:	80 ec       	ldi	r24, 0xC0	; 192
      cc:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
      d0:	08 95       	ret

000000d2 <getValueArray>:
}

int getValueArray(int i){

    switch (i)
      d2:	8a 30       	cpi	r24, 0x0A	; 10
      d4:	91 05       	cpc	r25, r1
      d6:	00 f5       	brcc	.+64     	; 0x118 <getValueArray+0x46>
      d8:	fc 01       	movw	r30, r24
      da:	e2 5d       	subi	r30, 0xD2	; 210
      dc:	ff 4f       	sbci	r31, 0xFF	; 255
      de:	0c 94 9b 0f 	jmp	0x1f36	; 0x1f36 <__tablejump2__>
    {
    case 0:
        return ZeroValue;

    case 1:
        return OneValue;
      e2:	80 e8       	ldi	r24, 0x80	; 128
      e4:	90 e2       	ldi	r25, 0x20	; 32
      e6:	08 95       	ret
    
    case 2:
        return TwoValue;
      e8:	81 e1       	ldi	r24, 0x11	; 17
      ea:	9e e1       	ldi	r25, 0x1E	; 30
      ec:	08 95       	ret

    case 3:
        return ThreeValue;
      ee:	81 e1       	ldi	r24, 0x11	; 17
      f0:	9b e1       	ldi	r25, 0x1B	; 27
      f2:	08 95       	ret
    
    case 4:
        return FourValue;
      f4:	80 e5       	ldi	r24, 0x50	; 80
      f6:	9b e0       	ldi	r25, 0x0B	; 11
      f8:	08 95       	ret

    case 5:
        return FiveValue;
      fa:	81 e4       	ldi	r24, 0x41	; 65
      fc:	9b e1       	ldi	r25, 0x1B	; 27
      fe:	08 95       	ret
    
    case 6:
        return SixValue;
     100:	81 e4       	ldi	r24, 0x41	; 65
     102:	9f e1       	ldi	r25, 0x1F	; 31
     104:	08 95       	ret
    
    case 7:
        return SevenValue;
     106:	81 e1       	ldi	r24, 0x11	; 17
     108:	91 e0       	ldi	r25, 0x01	; 1
     10a:	08 95       	ret
        
    case 8:
        return EightValue;
     10c:	81 e5       	ldi	r24, 0x51	; 81
     10e:	9f e1       	ldi	r25, 0x1F	; 31
     110:	08 95       	ret
    
    case 9:
        return NineValue;
     112:	81 e5       	ldi	r24, 0x51	; 81
     114:	9b e0       	ldi	r25, 0x0B	; 11
     116:	08 95       	ret
    
    default: // 10
        return BlankValue;
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	08 95       	ret
int getValueArray(int i){

    switch (i)
    {
    case 0:
        return ZeroValue;
     11e:	81 e5       	ldi	r24, 0x51	; 81
     120:	95 e1       	ldi	r25, 0x15	; 21
        return NineValue;
    
    default: // 10
        return BlankValue;
    }
}
     122:	08 95       	ret

00000124 <writeChar>:


void writeChar(char ch, int pos) {
     124:	ef 92       	push	r14
     126:	ff 92       	push	r15
     128:	1f 93       	push	r17
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	00 d0       	rcall	.+0      	; 0x130 <writeChar+0xc>
     130:	cd b7       	in	r28, 0x3d	; 61
     132:	de b7       	in	r29, 0x3e	; 62

	volatile int i = 0;
     134:	1a 82       	std	Y+2, r1	; 0x02
     136:	19 82       	std	Y+1, r1	; 0x01
	if (pos < 0 || pos > 5) {
     138:	66 30       	cpi	r22, 0x06	; 6
     13a:	71 05       	cpc	r23, r1
     13c:	08 f0       	brcs	.+2      	; 0x140 <writeChar+0x1c>
     13e:	fe c1       	rjmp	.+1020   	; 0x53c <__stack+0x3d>
		return; // do nothing if pos is outside the supported range
	}
	if ((int)ch < (0+48) || (int)ch > (9+48)) {
     140:	90 ed       	ldi	r25, 0xD0	; 208
     142:	98 0f       	add	r25, r24
     144:	9a 30       	cpi	r25, 0x0A	; 10
     146:	28 f0       	brcs	.+10     	; 0x152 <writeChar+0x2e>
		i=10;
     148:	8a e0       	ldi	r24, 0x0A	; 10
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	9a 83       	std	Y+2, r25	; 0x02
     14e:	89 83       	std	Y+1, r24	; 0x01
     150:	04 c0       	rjmp	.+8      	; 0x15a <writeChar+0x36>
	}else{
        i = ch - 48;
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	c0 97       	sbiw	r24, 0x30	; 48
     156:	9a 83       	std	Y+2, r25	; 0x02
     158:	89 83       	std	Y+1, r24	; 0x01
    }
	if(pos==0){
     15a:	61 15       	cp	r22, r1
     15c:	71 05       	cpc	r23, r1
     15e:	09 f0       	breq	.+2      	; 0x162 <writeChar+0x3e>
     160:	4e c0       	rjmp	.+156    	; 0x1fe <writeChar+0xda>
		LCDDR0 =  (LCDDR0&0xF0)  |        (0xF&getValueArray(i))<<0;
     162:	0f 2e       	mov	r0, r31
     164:	fc ee       	ldi	r31, 0xEC	; 236
     166:	ef 2e       	mov	r14, r31
     168:	f1 2c       	mov	r15, r1
     16a:	f0 2d       	mov	r31, r0
     16c:	f7 01       	movw	r30, r14
     16e:	10 81       	ld	r17, Z
     170:	89 81       	ldd	r24, Y+1	; 0x01
     172:	9a 81       	ldd	r25, Y+2	; 0x02
     174:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     178:	10 7f       	andi	r17, 0xF0	; 240
     17a:	8f 70       	andi	r24, 0x0F	; 15
     17c:	81 2b       	or	r24, r17
     17e:	f7 01       	movw	r30, r14
     180:	80 83       	st	Z, r24
		LCDDR5 =  (LCDDR5&0xF0)  |  (((0xF<<4)&getValueArray(i))>>4);
     182:	0f 2e       	mov	r0, r31
     184:	f1 ef       	ldi	r31, 0xF1	; 241
     186:	ef 2e       	mov	r14, r31
     188:	f1 2c       	mov	r15, r1
     18a:	f0 2d       	mov	r31, r0
     18c:	f7 01       	movw	r30, r14
     18e:	10 81       	ld	r17, Z
     190:	89 81       	ldd	r24, Y+1	; 0x01
     192:	9a 81       	ldd	r25, Y+2	; 0x02
     194:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     198:	80 7f       	andi	r24, 0xF0	; 240
     19a:	99 27       	eor	r25, r25
     19c:	95 95       	asr	r25
     19e:	87 95       	ror	r24
     1a0:	95 95       	asr	r25
     1a2:	87 95       	ror	r24
     1a4:	95 95       	asr	r25
     1a6:	87 95       	ror	r24
     1a8:	95 95       	asr	r25
     1aa:	87 95       	ror	r24
     1ac:	10 7f       	andi	r17, 0xF0	; 240
     1ae:	81 2b       	or	r24, r17
     1b0:	f7 01       	movw	r30, r14
     1b2:	80 83       	st	Z, r24
		LCDDR10 = (LCDDR10&0xF0) |  (((0xF<<8)&getValueArray(i))>>8);
     1b4:	0f 2e       	mov	r0, r31
     1b6:	f6 ef       	ldi	r31, 0xF6	; 246
     1b8:	ef 2e       	mov	r14, r31
     1ba:	f1 2c       	mov	r15, r1
     1bc:	f0 2d       	mov	r31, r0
     1be:	f7 01       	movw	r30, r14
     1c0:	10 81       	ld	r17, Z
     1c2:	89 81       	ldd	r24, Y+1	; 0x01
     1c4:	9a 81       	ldd	r25, Y+2	; 0x02
     1c6:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     1ca:	88 27       	eor	r24, r24
     1cc:	9f 70       	andi	r25, 0x0F	; 15
     1ce:	10 7f       	andi	r17, 0xF0	; 240
     1d0:	19 2b       	or	r17, r25
     1d2:	f7 01       	movw	r30, r14
     1d4:	10 83       	st	Z, r17
		LCDDR15 = (LCDDR15&0xF0) | (((0xF<<12)&getValueArray(i))>>12);
     1d6:	0f 2e       	mov	r0, r31
     1d8:	fb ef       	ldi	r31, 0xFB	; 251
     1da:	ef 2e       	mov	r14, r31
     1dc:	f1 2c       	mov	r15, r1
     1de:	f0 2d       	mov	r31, r0
     1e0:	f7 01       	movw	r30, r14
     1e2:	10 81       	ld	r17, Z
     1e4:	89 81       	ldd	r24, Y+1	; 0x01
     1e6:	9a 81       	ldd	r25, Y+2	; 0x02
     1e8:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     1ec:	10 7f       	andi	r17, 0xF0	; 240
     1ee:	95 95       	asr	r25
     1f0:	95 95       	asr	r25
     1f2:	95 95       	asr	r25
     1f4:	95 95       	asr	r25
     1f6:	91 2b       	or	r25, r17
     1f8:	f7 01       	movw	r30, r14
     1fa:	90 83       	st	Z, r25
     1fc:	9f c1       	rjmp	.+830    	; 0x53c <__stack+0x3d>
		
	} else if(pos==1){
     1fe:	61 30       	cpi	r22, 0x01	; 1
     200:	71 05       	cpc	r23, r1
     202:	09 f0       	breq	.+2      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
     204:	50 c0       	rjmp	.+160    	; 0x2a6 <__EEPROM_REGION_LENGTH__+0xa6>
		LCDDR0 =     (LCDDR0&0x0F)  |       ((0xF&getValueArray(i))<<4);
     206:	0f 2e       	mov	r0, r31
     208:	fc ee       	ldi	r31, 0xEC	; 236
     20a:	ef 2e       	mov	r14, r31
     20c:	f1 2c       	mov	r15, r1
     20e:	f0 2d       	mov	r31, r0
     210:	f7 01       	movw	r30, r14
     212:	10 81       	ld	r17, Z
     214:	89 81       	ldd	r24, Y+1	; 0x01
     216:	9a 81       	ldd	r25, Y+2	; 0x02
     218:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     21c:	1f 70       	andi	r17, 0x0F	; 15
     21e:	82 95       	swap	r24
     220:	92 95       	swap	r25
     222:	90 7f       	andi	r25, 0xF0	; 240
     224:	98 27       	eor	r25, r24
     226:	80 7f       	andi	r24, 0xF0	; 240
     228:	98 27       	eor	r25, r24
     22a:	81 2b       	or	r24, r17
     22c:	f7 01       	movw	r30, r14
     22e:	80 83       	st	Z, r24
		LCDDR5 =     (LCDDR5&0x0F)  |  (((0xF<<4)&getValueArray(i))>>0);
     230:	0f 2e       	mov	r0, r31
     232:	f1 ef       	ldi	r31, 0xF1	; 241
     234:	ef 2e       	mov	r14, r31
     236:	f1 2c       	mov	r15, r1
     238:	f0 2d       	mov	r31, r0
     23a:	f7 01       	movw	r30, r14
     23c:	10 81       	ld	r17, Z
     23e:	89 81       	ldd	r24, Y+1	; 0x01
     240:	9a 81       	ldd	r25, Y+2	; 0x02
     242:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     246:	1f 70       	andi	r17, 0x0F	; 15
     248:	80 7f       	andi	r24, 0xF0	; 240
     24a:	81 2b       	or	r24, r17
     24c:	f7 01       	movw	r30, r14
     24e:	80 83       	st	Z, r24
		LCDDR10 =    (LCDDR10&0x0F) |  (((0xF<<8)&getValueArray(i))>>4);
     250:	0f 2e       	mov	r0, r31
     252:	f6 ef       	ldi	r31, 0xF6	; 246
     254:	ef 2e       	mov	r14, r31
     256:	f1 2c       	mov	r15, r1
     258:	f0 2d       	mov	r31, r0
     25a:	f7 01       	movw	r30, r14
     25c:	10 81       	ld	r17, Z
     25e:	89 81       	ldd	r24, Y+1	; 0x01
     260:	9a 81       	ldd	r25, Y+2	; 0x02
     262:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     266:	88 27       	eor	r24, r24
     268:	9f 70       	andi	r25, 0x0F	; 15
     26a:	95 95       	asr	r25
     26c:	87 95       	ror	r24
     26e:	95 95       	asr	r25
     270:	87 95       	ror	r24
     272:	95 95       	asr	r25
     274:	87 95       	ror	r24
     276:	95 95       	asr	r25
     278:	87 95       	ror	r24
     27a:	1f 70       	andi	r17, 0x0F	; 15
     27c:	81 2b       	or	r24, r17
     27e:	f7 01       	movw	r30, r14
     280:	80 83       	st	Z, r24
		LCDDR15 =    (LCDDR15&0x0F) | (((0xF<<12)&getValueArray(i))>>8);
     282:	0f 2e       	mov	r0, r31
     284:	fb ef       	ldi	r31, 0xFB	; 251
     286:	ef 2e       	mov	r14, r31
     288:	f1 2c       	mov	r15, r1
     28a:	f0 2d       	mov	r31, r0
     28c:	f7 01       	movw	r30, r14
     28e:	10 81       	ld	r17, Z
     290:	89 81       	ldd	r24, Y+1	; 0x01
     292:	9a 81       	ldd	r25, Y+2	; 0x02
     294:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     298:	88 27       	eor	r24, r24
     29a:	90 7f       	andi	r25, 0xF0	; 240
     29c:	1f 70       	andi	r17, 0x0F	; 15
     29e:	19 2b       	or	r17, r25
     2a0:	f7 01       	movw	r30, r14
     2a2:	10 83       	st	Z, r17
     2a4:	4b c1       	rjmp	.+662    	; 0x53c <__stack+0x3d>
	} else if(pos==2){
     2a6:	62 30       	cpi	r22, 0x02	; 2
     2a8:	71 05       	cpc	r23, r1
     2aa:	09 f0       	breq	.+2      	; 0x2ae <__EEPROM_REGION_LENGTH__+0xae>
     2ac:	4e c0       	rjmp	.+156    	; 0x34a <__EEPROM_REGION_LENGTH__+0x14a>
		LCDDR1 =  (LCDDR1&0xF0)  |        (0xF&getValueArray(i))<<0;
     2ae:	0f 2e       	mov	r0, r31
     2b0:	fd ee       	ldi	r31, 0xED	; 237
     2b2:	ef 2e       	mov	r14, r31
     2b4:	f1 2c       	mov	r15, r1
     2b6:	f0 2d       	mov	r31, r0
     2b8:	f7 01       	movw	r30, r14
     2ba:	10 81       	ld	r17, Z
     2bc:	89 81       	ldd	r24, Y+1	; 0x01
     2be:	9a 81       	ldd	r25, Y+2	; 0x02
     2c0:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     2c4:	10 7f       	andi	r17, 0xF0	; 240
     2c6:	8f 70       	andi	r24, 0x0F	; 15
     2c8:	81 2b       	or	r24, r17
     2ca:	f7 01       	movw	r30, r14
     2cc:	80 83       	st	Z, r24
		LCDDR6 =  (LCDDR6&0xF0)  |  (((0xF<<4)&getValueArray(i))>>4);
     2ce:	0f 2e       	mov	r0, r31
     2d0:	f2 ef       	ldi	r31, 0xF2	; 242
     2d2:	ef 2e       	mov	r14, r31
     2d4:	f1 2c       	mov	r15, r1
     2d6:	f0 2d       	mov	r31, r0
     2d8:	f7 01       	movw	r30, r14
     2da:	10 81       	ld	r17, Z
     2dc:	89 81       	ldd	r24, Y+1	; 0x01
     2de:	9a 81       	ldd	r25, Y+2	; 0x02
     2e0:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     2e4:	80 7f       	andi	r24, 0xF0	; 240
     2e6:	99 27       	eor	r25, r25
     2e8:	95 95       	asr	r25
     2ea:	87 95       	ror	r24
     2ec:	95 95       	asr	r25
     2ee:	87 95       	ror	r24
     2f0:	95 95       	asr	r25
     2f2:	87 95       	ror	r24
     2f4:	95 95       	asr	r25
     2f6:	87 95       	ror	r24
     2f8:	10 7f       	andi	r17, 0xF0	; 240
     2fa:	81 2b       	or	r24, r17
     2fc:	f7 01       	movw	r30, r14
     2fe:	80 83       	st	Z, r24
		LCDDR11 = (LCDDR11&0xF0) |  (((0xF<<8)&getValueArray(i))>>8);
     300:	0f 2e       	mov	r0, r31
     302:	f7 ef       	ldi	r31, 0xF7	; 247
     304:	ef 2e       	mov	r14, r31
     306:	f1 2c       	mov	r15, r1
     308:	f0 2d       	mov	r31, r0
     30a:	f7 01       	movw	r30, r14
     30c:	10 81       	ld	r17, Z
     30e:	89 81       	ldd	r24, Y+1	; 0x01
     310:	9a 81       	ldd	r25, Y+2	; 0x02
     312:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     316:	88 27       	eor	r24, r24
     318:	9f 70       	andi	r25, 0x0F	; 15
     31a:	10 7f       	andi	r17, 0xF0	; 240
     31c:	19 2b       	or	r17, r25
     31e:	f7 01       	movw	r30, r14
     320:	10 83       	st	Z, r17
		LCDDR16 = (LCDDR16&0xF0) | (((0xF<<12)&getValueArray(i))>>12);
     322:	0f 2e       	mov	r0, r31
     324:	fc ef       	ldi	r31, 0xFC	; 252
     326:	ef 2e       	mov	r14, r31
     328:	f1 2c       	mov	r15, r1
     32a:	f0 2d       	mov	r31, r0
     32c:	f7 01       	movw	r30, r14
     32e:	10 81       	ld	r17, Z
     330:	89 81       	ldd	r24, Y+1	; 0x01
     332:	9a 81       	ldd	r25, Y+2	; 0x02
     334:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     338:	10 7f       	andi	r17, 0xF0	; 240
     33a:	95 95       	asr	r25
     33c:	95 95       	asr	r25
     33e:	95 95       	asr	r25
     340:	95 95       	asr	r25
     342:	91 2b       	or	r25, r17
     344:	f7 01       	movw	r30, r14
     346:	90 83       	st	Z, r25
     348:	f9 c0       	rjmp	.+498    	; 0x53c <__stack+0x3d>
		
	} else if(pos==3){
     34a:	63 30       	cpi	r22, 0x03	; 3
     34c:	71 05       	cpc	r23, r1
     34e:	09 f0       	breq	.+2      	; 0x352 <__EEPROM_REGION_LENGTH__+0x152>
     350:	50 c0       	rjmp	.+160    	; 0x3f2 <__EEPROM_REGION_LENGTH__+0x1f2>
		LCDDR1 =     (LCDDR1&0x0F)  |       ((0xF&getValueArray(i))<<4);
     352:	0f 2e       	mov	r0, r31
     354:	fd ee       	ldi	r31, 0xED	; 237
     356:	ef 2e       	mov	r14, r31
     358:	f1 2c       	mov	r15, r1
     35a:	f0 2d       	mov	r31, r0
     35c:	f7 01       	movw	r30, r14
     35e:	10 81       	ld	r17, Z
     360:	89 81       	ldd	r24, Y+1	; 0x01
     362:	9a 81       	ldd	r25, Y+2	; 0x02
     364:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     368:	1f 70       	andi	r17, 0x0F	; 15
     36a:	82 95       	swap	r24
     36c:	92 95       	swap	r25
     36e:	90 7f       	andi	r25, 0xF0	; 240
     370:	98 27       	eor	r25, r24
     372:	80 7f       	andi	r24, 0xF0	; 240
     374:	98 27       	eor	r25, r24
     376:	81 2b       	or	r24, r17
     378:	f7 01       	movw	r30, r14
     37a:	80 83       	st	Z, r24
		LCDDR6 =     (LCDDR6&0x0F)  |  (((0xF<<4)&getValueArray(i))>>0);
     37c:	0f 2e       	mov	r0, r31
     37e:	f2 ef       	ldi	r31, 0xF2	; 242
     380:	ef 2e       	mov	r14, r31
     382:	f1 2c       	mov	r15, r1
     384:	f0 2d       	mov	r31, r0
     386:	f7 01       	movw	r30, r14
     388:	10 81       	ld	r17, Z
     38a:	89 81       	ldd	r24, Y+1	; 0x01
     38c:	9a 81       	ldd	r25, Y+2	; 0x02
     38e:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     392:	1f 70       	andi	r17, 0x0F	; 15
     394:	80 7f       	andi	r24, 0xF0	; 240
     396:	81 2b       	or	r24, r17
     398:	f7 01       	movw	r30, r14
     39a:	80 83       	st	Z, r24
		LCDDR11 =    (LCDDR11&0x0F) |  (((0xF<<8)&getValueArray(i))>>4);
     39c:	0f 2e       	mov	r0, r31
     39e:	f7 ef       	ldi	r31, 0xF7	; 247
     3a0:	ef 2e       	mov	r14, r31
     3a2:	f1 2c       	mov	r15, r1
     3a4:	f0 2d       	mov	r31, r0
     3a6:	f7 01       	movw	r30, r14
     3a8:	10 81       	ld	r17, Z
     3aa:	89 81       	ldd	r24, Y+1	; 0x01
     3ac:	9a 81       	ldd	r25, Y+2	; 0x02
     3ae:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     3b2:	88 27       	eor	r24, r24
     3b4:	9f 70       	andi	r25, 0x0F	; 15
     3b6:	95 95       	asr	r25
     3b8:	87 95       	ror	r24
     3ba:	95 95       	asr	r25
     3bc:	87 95       	ror	r24
     3be:	95 95       	asr	r25
     3c0:	87 95       	ror	r24
     3c2:	95 95       	asr	r25
     3c4:	87 95       	ror	r24
     3c6:	1f 70       	andi	r17, 0x0F	; 15
     3c8:	81 2b       	or	r24, r17
     3ca:	f7 01       	movw	r30, r14
     3cc:	80 83       	st	Z, r24
		LCDDR16 =    (LCDDR16&0x0F) | (((0xF<<12)&getValueArray(i))>>8);
     3ce:	0f 2e       	mov	r0, r31
     3d0:	fc ef       	ldi	r31, 0xFC	; 252
     3d2:	ef 2e       	mov	r14, r31
     3d4:	f1 2c       	mov	r15, r1
     3d6:	f0 2d       	mov	r31, r0
     3d8:	f7 01       	movw	r30, r14
     3da:	10 81       	ld	r17, Z
     3dc:	89 81       	ldd	r24, Y+1	; 0x01
     3de:	9a 81       	ldd	r25, Y+2	; 0x02
     3e0:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     3e4:	88 27       	eor	r24, r24
     3e6:	90 7f       	andi	r25, 0xF0	; 240
     3e8:	1f 70       	andi	r17, 0x0F	; 15
     3ea:	19 2b       	or	r17, r25
     3ec:	f7 01       	movw	r30, r14
     3ee:	10 83       	st	Z, r17
     3f0:	a5 c0       	rjmp	.+330    	; 0x53c <__stack+0x3d>
		
	} else if(pos==4){
     3f2:	64 30       	cpi	r22, 0x04	; 4
     3f4:	71 05       	cpc	r23, r1
     3f6:	09 f0       	breq	.+2      	; 0x3fa <__EEPROM_REGION_LENGTH__+0x1fa>
     3f8:	4e c0       	rjmp	.+156    	; 0x496 <__DATA_REGION_LENGTH__+0x96>
		LCDDR2 =  (LCDDR2&0xF0)  |        (0xF&getValueArray(i))<<0;
     3fa:	0f 2e       	mov	r0, r31
     3fc:	fe ee       	ldi	r31, 0xEE	; 238
     3fe:	ef 2e       	mov	r14, r31
     400:	f1 2c       	mov	r15, r1
     402:	f0 2d       	mov	r31, r0
     404:	f7 01       	movw	r30, r14
     406:	10 81       	ld	r17, Z
     408:	89 81       	ldd	r24, Y+1	; 0x01
     40a:	9a 81       	ldd	r25, Y+2	; 0x02
     40c:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     410:	10 7f       	andi	r17, 0xF0	; 240
     412:	8f 70       	andi	r24, 0x0F	; 15
     414:	81 2b       	or	r24, r17
     416:	f7 01       	movw	r30, r14
     418:	80 83       	st	Z, r24
		LCDDR7 =  (LCDDR7&0xF0)  |  (((0xF<<4)&getValueArray(i))>>4);
     41a:	0f 2e       	mov	r0, r31
     41c:	f3 ef       	ldi	r31, 0xF3	; 243
     41e:	ef 2e       	mov	r14, r31
     420:	f1 2c       	mov	r15, r1
     422:	f0 2d       	mov	r31, r0
     424:	f7 01       	movw	r30, r14
     426:	10 81       	ld	r17, Z
     428:	89 81       	ldd	r24, Y+1	; 0x01
     42a:	9a 81       	ldd	r25, Y+2	; 0x02
     42c:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     430:	80 7f       	andi	r24, 0xF0	; 240
     432:	99 27       	eor	r25, r25
     434:	95 95       	asr	r25
     436:	87 95       	ror	r24
     438:	95 95       	asr	r25
     43a:	87 95       	ror	r24
     43c:	95 95       	asr	r25
     43e:	87 95       	ror	r24
     440:	95 95       	asr	r25
     442:	87 95       	ror	r24
     444:	10 7f       	andi	r17, 0xF0	; 240
     446:	81 2b       	or	r24, r17
     448:	f7 01       	movw	r30, r14
     44a:	80 83       	st	Z, r24
		LCDDR12 = (LCDDR12&0xF0) |  (((0xF<<8)&getValueArray(i))>>8);
     44c:	0f 2e       	mov	r0, r31
     44e:	f8 ef       	ldi	r31, 0xF8	; 248
     450:	ef 2e       	mov	r14, r31
     452:	f1 2c       	mov	r15, r1
     454:	f0 2d       	mov	r31, r0
     456:	f7 01       	movw	r30, r14
     458:	10 81       	ld	r17, Z
     45a:	89 81       	ldd	r24, Y+1	; 0x01
     45c:	9a 81       	ldd	r25, Y+2	; 0x02
     45e:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     462:	88 27       	eor	r24, r24
     464:	9f 70       	andi	r25, 0x0F	; 15
     466:	10 7f       	andi	r17, 0xF0	; 240
     468:	19 2b       	or	r17, r25
     46a:	f7 01       	movw	r30, r14
     46c:	10 83       	st	Z, r17
		LCDDR17 = (LCDDR17&0xF0) | (((0xF<<12)&getValueArray(i))>>12);
     46e:	0f 2e       	mov	r0, r31
     470:	fd ef       	ldi	r31, 0xFD	; 253
     472:	ef 2e       	mov	r14, r31
     474:	f1 2c       	mov	r15, r1
     476:	f0 2d       	mov	r31, r0
     478:	f7 01       	movw	r30, r14
     47a:	10 81       	ld	r17, Z
     47c:	89 81       	ldd	r24, Y+1	; 0x01
     47e:	9a 81       	ldd	r25, Y+2	; 0x02
     480:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     484:	10 7f       	andi	r17, 0xF0	; 240
     486:	95 95       	asr	r25
     488:	95 95       	asr	r25
     48a:	95 95       	asr	r25
     48c:	95 95       	asr	r25
     48e:	91 2b       	or	r25, r17
     490:	f7 01       	movw	r30, r14
     492:	90 83       	st	Z, r25
     494:	53 c0       	rjmp	.+166    	; 0x53c <__stack+0x3d>
		
	} else if(pos==5){
     496:	65 30       	cpi	r22, 0x05	; 5
     498:	71 05       	cpc	r23, r1
     49a:	09 f0       	breq	.+2      	; 0x49e <__DATA_REGION_LENGTH__+0x9e>
     49c:	4f c0       	rjmp	.+158    	; 0x53c <__stack+0x3d>
		LCDDR2 =     (LCDDR2&0x0F)  |       ((0xF&getValueArray(i))<<4);
     49e:	0f 2e       	mov	r0, r31
     4a0:	fe ee       	ldi	r31, 0xEE	; 238
     4a2:	ef 2e       	mov	r14, r31
     4a4:	f1 2c       	mov	r15, r1
     4a6:	f0 2d       	mov	r31, r0
     4a8:	f7 01       	movw	r30, r14
     4aa:	10 81       	ld	r17, Z
     4ac:	89 81       	ldd	r24, Y+1	; 0x01
     4ae:	9a 81       	ldd	r25, Y+2	; 0x02
     4b0:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     4b4:	1f 70       	andi	r17, 0x0F	; 15
     4b6:	82 95       	swap	r24
     4b8:	92 95       	swap	r25
     4ba:	90 7f       	andi	r25, 0xF0	; 240
     4bc:	98 27       	eor	r25, r24
     4be:	80 7f       	andi	r24, 0xF0	; 240
     4c0:	98 27       	eor	r25, r24
     4c2:	81 2b       	or	r24, r17
     4c4:	f7 01       	movw	r30, r14
     4c6:	80 83       	st	Z, r24
		LCDDR7 =     (LCDDR7&0x0F)  |  (((0xF<<4)&getValueArray(i))>>0);
     4c8:	0f 2e       	mov	r0, r31
     4ca:	f3 ef       	ldi	r31, 0xF3	; 243
     4cc:	ef 2e       	mov	r14, r31
     4ce:	f1 2c       	mov	r15, r1
     4d0:	f0 2d       	mov	r31, r0
     4d2:	f7 01       	movw	r30, r14
     4d4:	10 81       	ld	r17, Z
     4d6:	89 81       	ldd	r24, Y+1	; 0x01
     4d8:	9a 81       	ldd	r25, Y+2	; 0x02
     4da:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     4de:	1f 70       	andi	r17, 0x0F	; 15
     4e0:	80 7f       	andi	r24, 0xF0	; 240
     4e2:	81 2b       	or	r24, r17
     4e4:	f7 01       	movw	r30, r14
     4e6:	80 83       	st	Z, r24
		LCDDR12 =    (LCDDR12&0x0F) |  (((0xF<<8)&getValueArray(i))>>4);
     4e8:	0f 2e       	mov	r0, r31
     4ea:	f8 ef       	ldi	r31, 0xF8	; 248
     4ec:	ef 2e       	mov	r14, r31
     4ee:	f1 2c       	mov	r15, r1
     4f0:	f0 2d       	mov	r31, r0
     4f2:	f7 01       	movw	r30, r14
     4f4:	10 81       	ld	r17, Z
     4f6:	89 81       	ldd	r24, Y+1	; 0x01
     4f8:	9a 81       	ldd	r25, Y+2	; 0x02
     4fa:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     4fe:	88 27       	eor	r24, r24
     500:	9f 70       	andi	r25, 0x0F	; 15
     502:	95 95       	asr	r25
     504:	87 95       	ror	r24
     506:	95 95       	asr	r25
     508:	87 95       	ror	r24
     50a:	95 95       	asr	r25
     50c:	87 95       	ror	r24
     50e:	95 95       	asr	r25
     510:	87 95       	ror	r24
     512:	1f 70       	andi	r17, 0x0F	; 15
     514:	81 2b       	or	r24, r17
     516:	f7 01       	movw	r30, r14
     518:	80 83       	st	Z, r24
		LCDDR17 =    (LCDDR17&0x0F) | (((0xF<<12)&getValueArray(i))>>8);
     51a:	0f 2e       	mov	r0, r31
     51c:	fd ef       	ldi	r31, 0xFD	; 253
     51e:	ef 2e       	mov	r14, r31
     520:	f1 2c       	mov	r15, r1
     522:	f0 2d       	mov	r31, r0
     524:	f7 01       	movw	r30, r14
     526:	10 81       	ld	r17, Z
     528:	89 81       	ldd	r24, Y+1	; 0x01
     52a:	9a 81       	ldd	r25, Y+2	; 0x02
     52c:	0e 94 69 00 	call	0xd2	; 0xd2 <getValueArray>
     530:	88 27       	eor	r24, r24
     532:	90 7f       	andi	r25, 0xF0	; 240
     534:	1f 70       	andi	r17, 0x0F	; 15
     536:	19 2b       	or	r17, r25
     538:	f7 01       	movw	r30, r14
     53a:	10 83       	st	Z, r17
		
	}
	

}
     53c:	0f 90       	pop	r0
     53e:	0f 90       	pop	r0
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	1f 91       	pop	r17
     546:	ff 90       	pop	r15
     548:	ef 90       	pop	r14
     54a:	08 95       	ret

0000054c <printAt>:

void printAt(long num, int pos) {
     54c:	8f 92       	push	r8
     54e:	9f 92       	push	r9
     550:	af 92       	push	r10
     552:	bf 92       	push	r11
     554:	cf 92       	push	r12
     556:	df 92       	push	r13
     558:	ef 92       	push	r14
     55a:	ff 92       	push	r15
     55c:	cf 93       	push	r28
     55e:	df 93       	push	r29
     560:	4b 01       	movw	r8, r22
     562:	5c 01       	movw	r10, r24
     564:	ea 01       	movw	r28, r20
    int pp = pos;
    writeChar( (num % 100) / 10 + '0', pp);
     566:	24 e6       	ldi	r18, 0x64	; 100
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	40 e0       	ldi	r20, 0x00	; 0
     56c:	50 e0       	ldi	r21, 0x00	; 0
     56e:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <__divmodsi4>
     572:	0f 2e       	mov	r0, r31
     574:	fa e0       	ldi	r31, 0x0A	; 10
     576:	cf 2e       	mov	r12, r31
     578:	d1 2c       	mov	r13, r1
     57a:	e1 2c       	mov	r14, r1
     57c:	f1 2c       	mov	r15, r1
     57e:	f0 2d       	mov	r31, r0
     580:	a7 01       	movw	r20, r14
     582:	96 01       	movw	r18, r12
     584:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <__divmodsi4>
     588:	be 01       	movw	r22, r28
     58a:	80 e3       	ldi	r24, 0x30	; 48
     58c:	82 0f       	add	r24, r18
     58e:	0e 94 92 00 	call	0x124	; 0x124 <writeChar>
    pp++;
    writeChar( num % 10 + '0', pp);
     592:	21 96       	adiw	r28, 0x01	; 1
     594:	c5 01       	movw	r24, r10
     596:	b4 01       	movw	r22, r8
     598:	a7 01       	movw	r20, r14
     59a:	96 01       	movw	r18, r12
     59c:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <__divmodsi4>
     5a0:	86 2f       	mov	r24, r22
     5a2:	be 01       	movw	r22, r28
     5a4:	80 5d       	subi	r24, 0xD0	; 208
     5a6:	0e 94 92 00 	call	0x124	; 0x124 <writeChar>
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	ff 90       	pop	r15
     5b0:	ef 90       	pop	r14
     5b2:	df 90       	pop	r13
     5b4:	cf 90       	pop	r12
     5b6:	bf 90       	pop	r11
     5b8:	af 90       	pop	r10
     5ba:	9f 90       	pop	r9
     5bc:	8f 90       	pop	r8
     5be:	08 95       	ret

000005c0 <main>:


void main( void )
{

    TINYTIMBER(&mainObj, run, NULL);
     5c0:	40 e0       	ldi	r20, 0x00	; 0
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	6a ee       	ldi	r22, 0xEA	; 234
     5c6:	72 e0       	ldi	r23, 0x02	; 2
     5c8:	88 e0       	ldi	r24, 0x08	; 8
     5ca:	91 e0       	ldi	r25, 0x01	; 1
     5cc:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <tinytimber>
     5d0:	08 95       	ret

000005d2 <interupts>:
    }

}


void interupts(runObj* self){
     5d2:	08 95       	ret

000005d4 <run>:

#include "run.h"



void run(runObj* self){
     5d4:	ec 01       	movw	r28, r24
    USART_Init ( MYUBRR );
     5d6:	8b e0       	ldi	r24, 0x0B	; 11
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <USART_Init>
    LCD_Init();
     5de:	0e 94 57 00 	call	0xae	; 0xae <LCD_Init>

    INSTALL(self,interupts, IRQ_USART0_RX);
     5e2:	48 e0       	ldi	r20, 0x08	; 8
     5e4:	69 ee       	ldi	r22, 0xE9	; 233
     5e6:	72 e0       	ldi	r23, 0x02	; 2
     5e8:	ce 01       	movw	r24, r28
     5ea:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <install>
    INSTALL(self,interupts, IRQ_USART0_UDRE);
     5ee:	49 e0       	ldi	r20, 0x09	; 9
     5f0:	69 ee       	ldi	r22, 0xE9	; 233
     5f2:	72 e0       	ldi	r23, 0x02	; 2
     5f4:	ce 01       	movw	r24, r28
     5f6:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <install>
    INSTALL(self,interupts, IRQ_USART0_TX);
     5fa:	4a e0       	ldi	r20, 0x0A	; 10
     5fc:	69 ee       	ldi	r22, 0xE9	; 233
     5fe:	72 e0       	ldi	r23, 0x02	; 2
     600:	ce 01       	movw	r24, r28
     602:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <install>

    unsigned int test;

    USART_Transmit(23);
     606:	87 e1       	ldi	r24, 0x17	; 23
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <USART_Transmit>
    test = USART_Receive();
     60e:	0e 94 60 0f 	call	0x1ec0	; 0x1ec0 <USART_Receive>
    printAt(test, 2);
     612:	bc 01       	movw	r22, r24
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	42 e0       	ldi	r20, 0x02	; 2
     61a:	50 e0       	ldi	r21, 0x00	; 0
     61c:	0e 94 a6 02 	call	0x54c	; 0x54c <printAt>
     620:	ff cf       	rjmp	.-2      	; 0x620 <run+0x4c>

00000622 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	00 d0       	rcall	.+0      	; 0x628 <initialize+0x6>
     628:	00 d0       	rcall	.+0      	; 0x62a <initialize+0x8>
     62a:	cd b7       	in	r28, 0x3d	; 61
     62c:	de b7       	in	r29, 0x3e	; 62
     62e:	8f ef       	ldi	r24, 0xFF	; 255
     630:	91 e0       	ldi	r25, 0x01	; 1
     632:	2f ed       	ldi	r18, 0xDF	; 223
     634:	32 e0       	ldi	r19, 0x02	; 2
     636:	fc 01       	movw	r30, r24
     638:	70 97       	sbiw	r30, 0x10	; 16
     63a:	91 83       	std	Z+1, r25	; 0x01
     63c:	80 83       	st	Z, r24
     63e:	40 96       	adiw	r24, 0x10	; 16
     640:	82 17       	cp	r24, r18
     642:	93 07       	cpc	r25, r19
     644:	c1 f7       	brne	.-16     	; 0x636 <initialize+0x14>
     646:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <messages+0xe1>
     64a:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <messages+0xe0>
     64e:	ea e3       	ldi	r30, 0x3A	; 58
     650:	f1 e0       	ldi	r31, 0x01	; 1
     652:	87 e5       	ldi	r24, 0x57	; 87
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	91 83       	std	Z+1, r25	; 0x01
     658:	80 83       	st	Z, r24
     65a:	84 e7       	ldi	r24, 0x74	; 116
     65c:	91 e0       	ldi	r25, 0x01	; 1
     65e:	96 8f       	std	Z+30, r25	; 0x1e
     660:	85 8f       	std	Z+29, r24	; 0x1d
     662:	a1 e9       	ldi	r26, 0x91	; 145
     664:	b1 e0       	ldi	r27, 0x01	; 1
     666:	b3 af       	std	Z+59, r27	; 0x3b
     668:	a2 af       	std	Z+58, r26	; 0x3a
     66a:	1d 92       	st	X+, r1
     66c:	1c 92       	st	X, r1
     66e:	fa 83       	std	Y+2, r31	; 0x02
     670:	e9 83       	std	Y+1, r30	; 0x01
     672:	eb e3       	ldi	r30, 0x3B	; 59
     674:	f3 e0       	ldi	r31, 0x03	; 3
     676:	fc 83       	std	Y+4, r31	; 0x04
     678:	eb 83       	std	Y+3, r30	; 0x03
     67a:	89 81       	ldd	r24, Y+1	; 0x01
     67c:	9a 81       	ldd	r25, Y+2	; 0x02
     67e:	06 96       	adiw	r24, 0x06	; 6
     680:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <setjmp>
     684:	8b 81       	ldd	r24, Y+3	; 0x03
     686:	9c 81       	ldd	r25, Y+4	; 0x04
     688:	e9 81       	ldd	r30, Y+1	; 0x01
     68a:	fa 81       	ldd	r31, Y+2	; 0x02
     68c:	97 8b       	std	Z+23, r25	; 0x17
     68e:	86 8b       	std	Z+22, r24	; 0x16
     690:	91 8f       	std	Z+25, r25	; 0x19
     692:	80 8f       	std	Z+24, r24	; 0x18
     694:	81 eb       	ldi	r24, 0xB1	; 177
     696:	9e e0       	ldi	r25, 0x0E	; 14
     698:	94 8f       	std	Z+28, r25	; 0x1c
     69a:	83 8f       	std	Z+27, r24	; 0x1b
     69c:	15 82       	std	Z+5, r1	; 0x05
     69e:	14 82       	std	Z+4, r1	; 0x04
     6a0:	7d 96       	adiw	r30, 0x1d	; 29
     6a2:	fa 83       	std	Y+2, r31	; 0x02
     6a4:	e9 83       	std	Y+1, r30	; 0x01
     6a6:	eb 81       	ldd	r30, Y+3	; 0x03
     6a8:	fc 81       	ldd	r31, Y+4	; 0x04
     6aa:	e0 5a       	subi	r30, 0xA0	; 160
     6ac:	ff 4f       	sbci	r31, 0xFF	; 255
     6ae:	fc 83       	std	Y+4, r31	; 0x04
     6b0:	eb 83       	std	Y+3, r30	; 0x03
     6b2:	89 81       	ldd	r24, Y+1	; 0x01
     6b4:	9a 81       	ldd	r25, Y+2	; 0x02
     6b6:	8e 5a       	subi	r24, 0xAE	; 174
     6b8:	91 40       	sbci	r25, 0x01	; 1
     6ba:	f9 f6       	brne	.-66     	; 0x67a <initialize+0x58>
     6bc:	e2 ed       	ldi	r30, 0xD2	; 210
     6be:	f1 e0       	ldi	r31, 0x01	; 1
     6c0:	11 82       	std	Z+1, r1	; 0x01
     6c2:	10 82       	st	Z, r1
     6c4:	15 82       	std	Z+5, r1	; 0x05
     6c6:	14 82       	std	Z+4, r1	; 0x04
     6c8:	13 82       	std	Z+3, r1	; 0x03
     6ca:	12 82       	std	Z+2, r1	; 0x02
     6cc:	e1 e6       	ldi	r30, 0x61	; 97
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	80 e8       	ldi	r24, 0x80	; 128
     6d2:	80 83       	st	Z, r24
     6d4:	10 82       	st	Z, r1
     6d6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     6da:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     6de:	84 e0       	ldi	r24, 0x04	; 4
     6e0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     6e4:	81 e0       	ldi	r24, 0x01	; 1
     6e6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <dispatch>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	00 d0       	rcall	.+0      	; 0x6fe <dispatch+0x6>
     6fe:	cd b7       	in	r28, 0x3d	; 61
     700:	de b7       	in	r29, 0x3e	; 62
     702:	9a 83       	std	Y+2, r25	; 0x02
     704:	89 83       	std	Y+1, r24	; 0x01
     706:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     70a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     70e:	06 96       	adiw	r24, 0x06	; 6
     710:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <setjmp>
     714:	89 2b       	or	r24, r25
     716:	59 f4       	brne	.+22     	; 0x72e <dispatch+0x36>
     718:	89 81       	ldd	r24, Y+1	; 0x01
     71a:	9a 81       	ldd	r25, Y+2	; 0x02
     71c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     720:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     724:	61 e0       	ldi	r22, 0x01	; 1
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	06 96       	adiw	r24, 0x06	; 6
     72a:	0e 94 e3 0f 	call	0x1fc6	; 0x1fc6 <longjmp>
     72e:	0f 90       	pop	r0
     730:	0f 90       	pop	r0
     732:	df 91       	pop	r29
     734:	cf 91       	pop	r28
     736:	08 95       	ret

00000738 <schedule>:
     738:	0f 93       	push	r16
     73a:	1f 93       	push	r17
     73c:	cf 93       	push	r28
     73e:	df 93       	push	r29
     740:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <msgQ>
     744:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <msgQ+0x1>
     748:	30 97       	sbiw	r30, 0x00	; 0
     74a:	61 f1       	breq	.+88     	; 0x7a4 <schedule+0x6c>
     74c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     750:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     754:	00 97       	sbiw	r24, 0x00	; 0
     756:	31 f1       	breq	.+76     	; 0x7a4 <schedule+0x6c>
     758:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     75c:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     760:	aa 81       	ldd	r26, Y+2	; 0x02
     762:	bb 81       	ldd	r27, Y+3	; 0x03
     764:	10 97       	sbiw	r26, 0x00	; 0
     766:	79 f0       	breq	.+30     	; 0x786 <schedule+0x4e>
     768:	46 81       	ldd	r20, Z+6	; 0x06
     76a:	57 81       	ldd	r21, Z+7	; 0x07
     76c:	60 85       	ldd	r22, Z+8	; 0x08
     76e:	71 85       	ldd	r23, Z+9	; 0x09
     770:	16 96       	adiw	r26, 0x06	; 6
     772:	0d 91       	ld	r16, X+
     774:	1d 91       	ld	r17, X+
     776:	2d 91       	ld	r18, X+
     778:	3c 91       	ld	r19, X
     77a:	19 97       	sbiw	r26, 0x09	; 9
     77c:	40 1b       	sub	r20, r16
     77e:	51 0b       	sbc	r21, r17
     780:	62 0b       	sbc	r22, r18
     782:	73 0b       	sbc	r23, r19
     784:	7a f4       	brpl	.+30     	; 0x7a4 <schedule+0x6c>
     786:	fc 01       	movw	r30, r24
     788:	20 81       	ld	r18, Z
     78a:	31 81       	ldd	r19, Z+1	; 0x01
     78c:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     790:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     794:	d1 83       	std	Z+1, r29	; 0x01
     796:	c0 83       	st	Z, r28
     798:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     79c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     7a0:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <dispatch>
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	1f 91       	pop	r17
     7aa:	0f 91       	pop	r16
     7ac:	08 95       	ret

000007ae <__vector_1>:
     7ae:	1f 92       	push	r1
     7b0:	0f 92       	push	r0
     7b2:	0f b6       	in	r0, 0x3f	; 63
     7b4:	0f 92       	push	r0
     7b6:	11 24       	eor	r1, r1
     7b8:	2f 93       	push	r18
     7ba:	3f 93       	push	r19
     7bc:	4f 93       	push	r20
     7be:	5f 93       	push	r21
     7c0:	6f 93       	push	r22
     7c2:	7f 93       	push	r23
     7c4:	8f 93       	push	r24
     7c6:	9f 93       	push	r25
     7c8:	af 93       	push	r26
     7ca:	bf 93       	push	r27
     7cc:	ef 93       	push	r30
     7ce:	ff 93       	push	r31
     7d0:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     7d4:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     7d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     7dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     7e0:	c9 01       	movw	r24, r18
     7e2:	03 2e       	mov	r0, r19
     7e4:	00 0c       	add	r0, r0
     7e6:	aa 0b       	sbc	r26, r26
     7e8:	bb 0b       	sbc	r27, r27
     7ea:	dc 01       	movw	r26, r24
     7ec:	99 27       	eor	r25, r25
     7ee:	88 27       	eor	r24, r24
     7f0:	60 e0       	ldi	r22, 0x00	; 0
     7f2:	70 e0       	ldi	r23, 0x00	; 0
     7f4:	84 2b       	or	r24, r20
     7f6:	95 2b       	or	r25, r21
     7f8:	a6 2b       	or	r26, r22
     7fa:	b7 2b       	or	r27, r23
     7fc:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     800:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     804:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     808:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     80c:	b0 9b       	sbis	0x16, 0	; 22
     80e:	1b c0       	rjmp	.+54     	; 0x846 <__vector_1+0x98>
     810:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     814:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     818:	c9 01       	movw	r24, r18
     81a:	01 96       	adiw	r24, 0x01	; 1
     81c:	09 2e       	mov	r0, r25
     81e:	00 0c       	add	r0, r0
     820:	aa 0b       	sbc	r26, r26
     822:	bb 0b       	sbc	r27, r27
     824:	dc 01       	movw	r26, r24
     826:	99 27       	eor	r25, r25
     828:	88 27       	eor	r24, r24
     82a:	60 e0       	ldi	r22, 0x00	; 0
     82c:	70 e0       	ldi	r23, 0x00	; 0
     82e:	84 2b       	or	r24, r20
     830:	95 2b       	or	r25, r21
     832:	a6 2b       	or	r26, r22
     834:	b7 2b       	or	r27, r23
     836:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     83a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     83e:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     842:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     846:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <mtable>
     84a:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <mtable+0x1>
     84e:	30 97       	sbiw	r30, 0x00	; 0
     850:	39 f0       	breq	.+14     	; 0x860 <__vector_1+0xb2>
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	70 e0       	ldi	r23, 0x00	; 0
     856:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <otable>
     85a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <otable+0x1>
     85e:	09 95       	icall
     860:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     864:	ff 91       	pop	r31
     866:	ef 91       	pop	r30
     868:	bf 91       	pop	r27
     86a:	af 91       	pop	r26
     86c:	9f 91       	pop	r25
     86e:	8f 91       	pop	r24
     870:	7f 91       	pop	r23
     872:	6f 91       	pop	r22
     874:	5f 91       	pop	r21
     876:	4f 91       	pop	r20
     878:	3f 91       	pop	r19
     87a:	2f 91       	pop	r18
     87c:	0f 90       	pop	r0
     87e:	0f be       	out	0x3f, r0	; 63
     880:	0f 90       	pop	r0
     882:	1f 90       	pop	r1
     884:	18 95       	reti

00000886 <__vector_2>:
     886:	1f 92       	push	r1
     888:	0f 92       	push	r0
     88a:	0f b6       	in	r0, 0x3f	; 63
     88c:	0f 92       	push	r0
     88e:	11 24       	eor	r1, r1
     890:	2f 93       	push	r18
     892:	3f 93       	push	r19
     894:	4f 93       	push	r20
     896:	5f 93       	push	r21
     898:	6f 93       	push	r22
     89a:	7f 93       	push	r23
     89c:	8f 93       	push	r24
     89e:	9f 93       	push	r25
     8a0:	af 93       	push	r26
     8a2:	bf 93       	push	r27
     8a4:	ef 93       	push	r30
     8a6:	ff 93       	push	r31
     8a8:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     8ac:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     8b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8b8:	c9 01       	movw	r24, r18
     8ba:	03 2e       	mov	r0, r19
     8bc:	00 0c       	add	r0, r0
     8be:	aa 0b       	sbc	r26, r26
     8c0:	bb 0b       	sbc	r27, r27
     8c2:	dc 01       	movw	r26, r24
     8c4:	99 27       	eor	r25, r25
     8c6:	88 27       	eor	r24, r24
     8c8:	60 e0       	ldi	r22, 0x00	; 0
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	84 2b       	or	r24, r20
     8ce:	95 2b       	or	r25, r21
     8d0:	a6 2b       	or	r26, r22
     8d2:	b7 2b       	or	r27, r23
     8d4:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     8d8:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     8dc:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     8e0:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     8e4:	b0 9b       	sbis	0x16, 0	; 22
     8e6:	1b c0       	rjmp	.+54     	; 0x91e <__vector_2+0x98>
     8e8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8ec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8f0:	c9 01       	movw	r24, r18
     8f2:	01 96       	adiw	r24, 0x01	; 1
     8f4:	09 2e       	mov	r0, r25
     8f6:	00 0c       	add	r0, r0
     8f8:	aa 0b       	sbc	r26, r26
     8fa:	bb 0b       	sbc	r27, r27
     8fc:	dc 01       	movw	r26, r24
     8fe:	99 27       	eor	r25, r25
     900:	88 27       	eor	r24, r24
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	84 2b       	or	r24, r20
     908:	95 2b       	or	r25, r21
     90a:	a6 2b       	or	r26, r22
     90c:	b7 2b       	or	r27, r23
     90e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     912:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     916:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     91a:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     91e:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <mtable+0x2>
     922:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <mtable+0x3>
     926:	30 97       	sbiw	r30, 0x00	; 0
     928:	39 f0       	breq	.+14     	; 0x938 <__vector_2+0xb2>
     92a:	61 e0       	ldi	r22, 0x01	; 1
     92c:	70 e0       	ldi	r23, 0x00	; 0
     92e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <otable+0x2>
     932:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <otable+0x3>
     936:	09 95       	icall
     938:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     93c:	ff 91       	pop	r31
     93e:	ef 91       	pop	r30
     940:	bf 91       	pop	r27
     942:	af 91       	pop	r26
     944:	9f 91       	pop	r25
     946:	8f 91       	pop	r24
     948:	7f 91       	pop	r23
     94a:	6f 91       	pop	r22
     94c:	5f 91       	pop	r21
     94e:	4f 91       	pop	r20
     950:	3f 91       	pop	r19
     952:	2f 91       	pop	r18
     954:	0f 90       	pop	r0
     956:	0f be       	out	0x3f, r0	; 63
     958:	0f 90       	pop	r0
     95a:	1f 90       	pop	r1
     95c:	18 95       	reti

0000095e <__vector_3>:
     95e:	1f 92       	push	r1
     960:	0f 92       	push	r0
     962:	0f b6       	in	r0, 0x3f	; 63
     964:	0f 92       	push	r0
     966:	11 24       	eor	r1, r1
     968:	2f 93       	push	r18
     96a:	3f 93       	push	r19
     96c:	4f 93       	push	r20
     96e:	5f 93       	push	r21
     970:	6f 93       	push	r22
     972:	7f 93       	push	r23
     974:	8f 93       	push	r24
     976:	9f 93       	push	r25
     978:	af 93       	push	r26
     97a:	bf 93       	push	r27
     97c:	ef 93       	push	r30
     97e:	ff 93       	push	r31
     980:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     984:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     988:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     98c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     990:	c9 01       	movw	r24, r18
     992:	03 2e       	mov	r0, r19
     994:	00 0c       	add	r0, r0
     996:	aa 0b       	sbc	r26, r26
     998:	bb 0b       	sbc	r27, r27
     99a:	dc 01       	movw	r26, r24
     99c:	99 27       	eor	r25, r25
     99e:	88 27       	eor	r24, r24
     9a0:	60 e0       	ldi	r22, 0x00	; 0
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	84 2b       	or	r24, r20
     9a6:	95 2b       	or	r25, r21
     9a8:	a6 2b       	or	r26, r22
     9aa:	b7 2b       	or	r27, r23
     9ac:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     9b0:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     9b4:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     9b8:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     9bc:	b0 9b       	sbis	0x16, 0	; 22
     9be:	1b c0       	rjmp	.+54     	; 0x9f6 <__vector_3+0x98>
     9c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9c8:	c9 01       	movw	r24, r18
     9ca:	01 96       	adiw	r24, 0x01	; 1
     9cc:	09 2e       	mov	r0, r25
     9ce:	00 0c       	add	r0, r0
     9d0:	aa 0b       	sbc	r26, r26
     9d2:	bb 0b       	sbc	r27, r27
     9d4:	dc 01       	movw	r26, r24
     9d6:	99 27       	eor	r25, r25
     9d8:	88 27       	eor	r24, r24
     9da:	60 e0       	ldi	r22, 0x00	; 0
     9dc:	70 e0       	ldi	r23, 0x00	; 0
     9de:	84 2b       	or	r24, r20
     9e0:	95 2b       	or	r25, r21
     9e2:	a6 2b       	or	r26, r22
     9e4:	b7 2b       	or	r27, r23
     9e6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     9ea:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     9ee:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     9f2:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     9f6:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable+0x4>
     9fa:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0x5>
     9fe:	30 97       	sbiw	r30, 0x00	; 0
     a00:	39 f0       	breq	.+14     	; 0xa10 <__vector_3+0xb2>
     a02:	62 e0       	ldi	r22, 0x02	; 2
     a04:	70 e0       	ldi	r23, 0x00	; 0
     a06:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable+0x4>
     a0a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0x5>
     a0e:	09 95       	icall
     a10:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     a14:	ff 91       	pop	r31
     a16:	ef 91       	pop	r30
     a18:	bf 91       	pop	r27
     a1a:	af 91       	pop	r26
     a1c:	9f 91       	pop	r25
     a1e:	8f 91       	pop	r24
     a20:	7f 91       	pop	r23
     a22:	6f 91       	pop	r22
     a24:	5f 91       	pop	r21
     a26:	4f 91       	pop	r20
     a28:	3f 91       	pop	r19
     a2a:	2f 91       	pop	r18
     a2c:	0f 90       	pop	r0
     a2e:	0f be       	out	0x3f, r0	; 63
     a30:	0f 90       	pop	r0
     a32:	1f 90       	pop	r1
     a34:	18 95       	reti

00000a36 <__vector_4>:
     a36:	1f 92       	push	r1
     a38:	0f 92       	push	r0
     a3a:	0f b6       	in	r0, 0x3f	; 63
     a3c:	0f 92       	push	r0
     a3e:	11 24       	eor	r1, r1
     a40:	2f 93       	push	r18
     a42:	3f 93       	push	r19
     a44:	4f 93       	push	r20
     a46:	5f 93       	push	r21
     a48:	6f 93       	push	r22
     a4a:	7f 93       	push	r23
     a4c:	8f 93       	push	r24
     a4e:	9f 93       	push	r25
     a50:	af 93       	push	r26
     a52:	bf 93       	push	r27
     a54:	ef 93       	push	r30
     a56:	ff 93       	push	r31
     a58:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     a5c:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     a60:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a64:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a68:	c9 01       	movw	r24, r18
     a6a:	03 2e       	mov	r0, r19
     a6c:	00 0c       	add	r0, r0
     a6e:	aa 0b       	sbc	r26, r26
     a70:	bb 0b       	sbc	r27, r27
     a72:	dc 01       	movw	r26, r24
     a74:	99 27       	eor	r25, r25
     a76:	88 27       	eor	r24, r24
     a78:	60 e0       	ldi	r22, 0x00	; 0
     a7a:	70 e0       	ldi	r23, 0x00	; 0
     a7c:	84 2b       	or	r24, r20
     a7e:	95 2b       	or	r25, r21
     a80:	a6 2b       	or	r26, r22
     a82:	b7 2b       	or	r27, r23
     a84:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     a88:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     a8c:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     a90:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     a94:	b0 9b       	sbis	0x16, 0	; 22
     a96:	1b c0       	rjmp	.+54     	; 0xace <__vector_4+0x98>
     a98:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a9c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     aa0:	c9 01       	movw	r24, r18
     aa2:	01 96       	adiw	r24, 0x01	; 1
     aa4:	09 2e       	mov	r0, r25
     aa6:	00 0c       	add	r0, r0
     aa8:	aa 0b       	sbc	r26, r26
     aaa:	bb 0b       	sbc	r27, r27
     aac:	dc 01       	movw	r26, r24
     aae:	99 27       	eor	r25, r25
     ab0:	88 27       	eor	r24, r24
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	70 e0       	ldi	r23, 0x00	; 0
     ab6:	84 2b       	or	r24, r20
     ab8:	95 2b       	or	r25, r21
     aba:	a6 2b       	or	r26, r22
     abc:	b7 2b       	or	r27, r23
     abe:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     ac2:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     ac6:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     aca:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     ace:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0x6>
     ad2:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0x7>
     ad6:	30 97       	sbiw	r30, 0x00	; 0
     ad8:	39 f0       	breq	.+14     	; 0xae8 <__vector_4+0xb2>
     ada:	63 e0       	ldi	r22, 0x03	; 3
     adc:	70 e0       	ldi	r23, 0x00	; 0
     ade:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0x6>
     ae2:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0x7>
     ae6:	09 95       	icall
     ae8:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     aec:	ff 91       	pop	r31
     aee:	ef 91       	pop	r30
     af0:	bf 91       	pop	r27
     af2:	af 91       	pop	r26
     af4:	9f 91       	pop	r25
     af6:	8f 91       	pop	r24
     af8:	7f 91       	pop	r23
     afa:	6f 91       	pop	r22
     afc:	5f 91       	pop	r21
     afe:	4f 91       	pop	r20
     b00:	3f 91       	pop	r19
     b02:	2f 91       	pop	r18
     b04:	0f 90       	pop	r0
     b06:	0f be       	out	0x3f, r0	; 63
     b08:	0f 90       	pop	r0
     b0a:	1f 90       	pop	r1
     b0c:	18 95       	reti

00000b0e <__vector_5>:
     b0e:	1f 92       	push	r1
     b10:	0f 92       	push	r0
     b12:	0f b6       	in	r0, 0x3f	; 63
     b14:	0f 92       	push	r0
     b16:	11 24       	eor	r1, r1
     b18:	2f 93       	push	r18
     b1a:	3f 93       	push	r19
     b1c:	4f 93       	push	r20
     b1e:	5f 93       	push	r21
     b20:	6f 93       	push	r22
     b22:	7f 93       	push	r23
     b24:	8f 93       	push	r24
     b26:	9f 93       	push	r25
     b28:	af 93       	push	r26
     b2a:	bf 93       	push	r27
     b2c:	ef 93       	push	r30
     b2e:	ff 93       	push	r31
     b30:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     b34:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     b38:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b3c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b40:	c9 01       	movw	r24, r18
     b42:	03 2e       	mov	r0, r19
     b44:	00 0c       	add	r0, r0
     b46:	aa 0b       	sbc	r26, r26
     b48:	bb 0b       	sbc	r27, r27
     b4a:	dc 01       	movw	r26, r24
     b4c:	99 27       	eor	r25, r25
     b4e:	88 27       	eor	r24, r24
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	84 2b       	or	r24, r20
     b56:	95 2b       	or	r25, r21
     b58:	a6 2b       	or	r26, r22
     b5a:	b7 2b       	or	r27, r23
     b5c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     b60:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     b64:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     b68:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     b6c:	b0 9b       	sbis	0x16, 0	; 22
     b6e:	1b c0       	rjmp	.+54     	; 0xba6 <__vector_5+0x98>
     b70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b78:	c9 01       	movw	r24, r18
     b7a:	01 96       	adiw	r24, 0x01	; 1
     b7c:	09 2e       	mov	r0, r25
     b7e:	00 0c       	add	r0, r0
     b80:	aa 0b       	sbc	r26, r26
     b82:	bb 0b       	sbc	r27, r27
     b84:	dc 01       	movw	r26, r24
     b86:	99 27       	eor	r25, r25
     b88:	88 27       	eor	r24, r24
     b8a:	60 e0       	ldi	r22, 0x00	; 0
     b8c:	70 e0       	ldi	r23, 0x00	; 0
     b8e:	84 2b       	or	r24, r20
     b90:	95 2b       	or	r25, r21
     b92:	a6 2b       	or	r26, r22
     b94:	b7 2b       	or	r27, r23
     b96:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     b9a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     b9e:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     ba2:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     ba6:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0x8>
     baa:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0x9>
     bae:	30 97       	sbiw	r30, 0x00	; 0
     bb0:	39 f0       	breq	.+14     	; 0xbc0 <__vector_5+0xb2>
     bb2:	64 e0       	ldi	r22, 0x04	; 4
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0x8>
     bba:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0x9>
     bbe:	09 95       	icall
     bc0:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     bc4:	ff 91       	pop	r31
     bc6:	ef 91       	pop	r30
     bc8:	bf 91       	pop	r27
     bca:	af 91       	pop	r26
     bcc:	9f 91       	pop	r25
     bce:	8f 91       	pop	r24
     bd0:	7f 91       	pop	r23
     bd2:	6f 91       	pop	r22
     bd4:	5f 91       	pop	r21
     bd6:	4f 91       	pop	r20
     bd8:	3f 91       	pop	r19
     bda:	2f 91       	pop	r18
     bdc:	0f 90       	pop	r0
     bde:	0f be       	out	0x3f, r0	; 63
     be0:	0f 90       	pop	r0
     be2:	1f 90       	pop	r1
     be4:	18 95       	reti

00000be6 <__vector_10>:
     be6:	1f 92       	push	r1
     be8:	0f 92       	push	r0
     bea:	0f b6       	in	r0, 0x3f	; 63
     bec:	0f 92       	push	r0
     bee:	11 24       	eor	r1, r1
     bf0:	2f 93       	push	r18
     bf2:	3f 93       	push	r19
     bf4:	4f 93       	push	r20
     bf6:	5f 93       	push	r21
     bf8:	6f 93       	push	r22
     bfa:	7f 93       	push	r23
     bfc:	8f 93       	push	r24
     bfe:	9f 93       	push	r25
     c00:	af 93       	push	r26
     c02:	bf 93       	push	r27
     c04:	ef 93       	push	r30
     c06:	ff 93       	push	r31
     c08:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     c0c:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     c10:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c14:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c18:	c9 01       	movw	r24, r18
     c1a:	03 2e       	mov	r0, r19
     c1c:	00 0c       	add	r0, r0
     c1e:	aa 0b       	sbc	r26, r26
     c20:	bb 0b       	sbc	r27, r27
     c22:	dc 01       	movw	r26, r24
     c24:	99 27       	eor	r25, r25
     c26:	88 27       	eor	r24, r24
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	70 e0       	ldi	r23, 0x00	; 0
     c2c:	84 2b       	or	r24, r20
     c2e:	95 2b       	or	r25, r21
     c30:	a6 2b       	or	r26, r22
     c32:	b7 2b       	or	r27, r23
     c34:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     c38:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     c3c:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     c40:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     c44:	b0 9b       	sbis	0x16, 0	; 22
     c46:	1b c0       	rjmp	.+54     	; 0xc7e <__vector_10+0x98>
     c48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c50:	c9 01       	movw	r24, r18
     c52:	01 96       	adiw	r24, 0x01	; 1
     c54:	09 2e       	mov	r0, r25
     c56:	00 0c       	add	r0, r0
     c58:	aa 0b       	sbc	r26, r26
     c5a:	bb 0b       	sbc	r27, r27
     c5c:	dc 01       	movw	r26, r24
     c5e:	99 27       	eor	r25, r25
     c60:	88 27       	eor	r24, r24
     c62:	60 e0       	ldi	r22, 0x00	; 0
     c64:	70 e0       	ldi	r23, 0x00	; 0
     c66:	84 2b       	or	r24, r20
     c68:	95 2b       	or	r25, r21
     c6a:	a6 2b       	or	r26, r22
     c6c:	b7 2b       	or	r27, r23
     c6e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     c72:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     c76:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     c7a:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     c7e:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <mtable+0xa>
     c82:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <mtable+0xb>
     c86:	30 97       	sbiw	r30, 0x00	; 0
     c88:	39 f0       	breq	.+14     	; 0xc98 <__vector_10+0xb2>
     c8a:	65 e0       	ldi	r22, 0x05	; 5
     c8c:	70 e0       	ldi	r23, 0x00	; 0
     c8e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <otable+0xa>
     c92:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <otable+0xb>
     c96:	09 95       	icall
     c98:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     c9c:	ff 91       	pop	r31
     c9e:	ef 91       	pop	r30
     ca0:	bf 91       	pop	r27
     ca2:	af 91       	pop	r26
     ca4:	9f 91       	pop	r25
     ca6:	8f 91       	pop	r24
     ca8:	7f 91       	pop	r23
     caa:	6f 91       	pop	r22
     cac:	5f 91       	pop	r21
     cae:	4f 91       	pop	r20
     cb0:	3f 91       	pop	r19
     cb2:	2f 91       	pop	r18
     cb4:	0f 90       	pop	r0
     cb6:	0f be       	out	0x3f, r0	; 63
     cb8:	0f 90       	pop	r0
     cba:	1f 90       	pop	r1
     cbc:	18 95       	reti

00000cbe <__vector_11>:
     cbe:	1f 92       	push	r1
     cc0:	0f 92       	push	r0
     cc2:	0f b6       	in	r0, 0x3f	; 63
     cc4:	0f 92       	push	r0
     cc6:	11 24       	eor	r1, r1
     cc8:	2f 93       	push	r18
     cca:	3f 93       	push	r19
     ccc:	4f 93       	push	r20
     cce:	5f 93       	push	r21
     cd0:	6f 93       	push	r22
     cd2:	7f 93       	push	r23
     cd4:	8f 93       	push	r24
     cd6:	9f 93       	push	r25
     cd8:	af 93       	push	r26
     cda:	bf 93       	push	r27
     cdc:	ef 93       	push	r30
     cde:	ff 93       	push	r31
     ce0:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     ce4:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     ce8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf0:	c9 01       	movw	r24, r18
     cf2:	03 2e       	mov	r0, r19
     cf4:	00 0c       	add	r0, r0
     cf6:	aa 0b       	sbc	r26, r26
     cf8:	bb 0b       	sbc	r27, r27
     cfa:	dc 01       	movw	r26, r24
     cfc:	99 27       	eor	r25, r25
     cfe:	88 27       	eor	r24, r24
     d00:	60 e0       	ldi	r22, 0x00	; 0
     d02:	70 e0       	ldi	r23, 0x00	; 0
     d04:	84 2b       	or	r24, r20
     d06:	95 2b       	or	r25, r21
     d08:	a6 2b       	or	r26, r22
     d0a:	b7 2b       	or	r27, r23
     d0c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     d10:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     d14:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     d18:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     d1c:	b0 9b       	sbis	0x16, 0	; 22
     d1e:	1b c0       	rjmp	.+54     	; 0xd56 <__vector_11+0x98>
     d20:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d24:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d28:	c9 01       	movw	r24, r18
     d2a:	01 96       	adiw	r24, 0x01	; 1
     d2c:	09 2e       	mov	r0, r25
     d2e:	00 0c       	add	r0, r0
     d30:	aa 0b       	sbc	r26, r26
     d32:	bb 0b       	sbc	r27, r27
     d34:	dc 01       	movw	r26, r24
     d36:	99 27       	eor	r25, r25
     d38:	88 27       	eor	r24, r24
     d3a:	60 e0       	ldi	r22, 0x00	; 0
     d3c:	70 e0       	ldi	r23, 0x00	; 0
     d3e:	84 2b       	or	r24, r20
     d40:	95 2b       	or	r25, r21
     d42:	a6 2b       	or	r26, r22
     d44:	b7 2b       	or	r27, r23
     d46:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     d4a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     d4e:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     d52:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     d56:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <mtable+0xc>
     d5a:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <mtable+0xd>
     d5e:	30 97       	sbiw	r30, 0x00	; 0
     d60:	39 f0       	breq	.+14     	; 0xd70 <__vector_11+0xb2>
     d62:	66 e0       	ldi	r22, 0x06	; 6
     d64:	70 e0       	ldi	r23, 0x00	; 0
     d66:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <otable+0xc>
     d6a:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <otable+0xd>
     d6e:	09 95       	icall
     d70:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     d74:	ff 91       	pop	r31
     d76:	ef 91       	pop	r30
     d78:	bf 91       	pop	r27
     d7a:	af 91       	pop	r26
     d7c:	9f 91       	pop	r25
     d7e:	8f 91       	pop	r24
     d80:	7f 91       	pop	r23
     d82:	6f 91       	pop	r22
     d84:	5f 91       	pop	r21
     d86:	4f 91       	pop	r20
     d88:	3f 91       	pop	r19
     d8a:	2f 91       	pop	r18
     d8c:	0f 90       	pop	r0
     d8e:	0f be       	out	0x3f, r0	; 63
     d90:	0f 90       	pop	r0
     d92:	1f 90       	pop	r1
     d94:	18 95       	reti

00000d96 <__vector_12>:
     d96:	1f 92       	push	r1
     d98:	0f 92       	push	r0
     d9a:	0f b6       	in	r0, 0x3f	; 63
     d9c:	0f 92       	push	r0
     d9e:	11 24       	eor	r1, r1
     da0:	2f 93       	push	r18
     da2:	3f 93       	push	r19
     da4:	4f 93       	push	r20
     da6:	5f 93       	push	r21
     da8:	6f 93       	push	r22
     daa:	7f 93       	push	r23
     dac:	8f 93       	push	r24
     dae:	9f 93       	push	r25
     db0:	af 93       	push	r26
     db2:	bf 93       	push	r27
     db4:	ef 93       	push	r30
     db6:	ff 93       	push	r31
     db8:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     dbc:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     dc0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dc4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dc8:	c9 01       	movw	r24, r18
     dca:	03 2e       	mov	r0, r19
     dcc:	00 0c       	add	r0, r0
     dce:	aa 0b       	sbc	r26, r26
     dd0:	bb 0b       	sbc	r27, r27
     dd2:	dc 01       	movw	r26, r24
     dd4:	99 27       	eor	r25, r25
     dd6:	88 27       	eor	r24, r24
     dd8:	60 e0       	ldi	r22, 0x00	; 0
     dda:	70 e0       	ldi	r23, 0x00	; 0
     ddc:	84 2b       	or	r24, r20
     dde:	95 2b       	or	r25, r21
     de0:	a6 2b       	or	r26, r22
     de2:	b7 2b       	or	r27, r23
     de4:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     de8:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     dec:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     df0:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     df4:	b0 9b       	sbis	0x16, 0	; 22
     df6:	1b c0       	rjmp	.+54     	; 0xe2e <__vector_12+0x98>
     df8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dfc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e00:	c9 01       	movw	r24, r18
     e02:	01 96       	adiw	r24, 0x01	; 1
     e04:	09 2e       	mov	r0, r25
     e06:	00 0c       	add	r0, r0
     e08:	aa 0b       	sbc	r26, r26
     e0a:	bb 0b       	sbc	r27, r27
     e0c:	dc 01       	movw	r26, r24
     e0e:	99 27       	eor	r25, r25
     e10:	88 27       	eor	r24, r24
     e12:	60 e0       	ldi	r22, 0x00	; 0
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	84 2b       	or	r24, r20
     e18:	95 2b       	or	r25, r21
     e1a:	a6 2b       	or	r26, r22
     e1c:	b7 2b       	or	r27, r23
     e1e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     e22:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     e26:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     e2a:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     e2e:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable+0xe>
     e32:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0xf>
     e36:	30 97       	sbiw	r30, 0x00	; 0
     e38:	39 f0       	breq	.+14     	; 0xe48 <__vector_12+0xb2>
     e3a:	67 e0       	ldi	r22, 0x07	; 7
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable+0xe>
     e42:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0xf>
     e46:	09 95       	icall
     e48:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     e4c:	ff 91       	pop	r31
     e4e:	ef 91       	pop	r30
     e50:	bf 91       	pop	r27
     e52:	af 91       	pop	r26
     e54:	9f 91       	pop	r25
     e56:	8f 91       	pop	r24
     e58:	7f 91       	pop	r23
     e5a:	6f 91       	pop	r22
     e5c:	5f 91       	pop	r21
     e5e:	4f 91       	pop	r20
     e60:	3f 91       	pop	r19
     e62:	2f 91       	pop	r18
     e64:	0f 90       	pop	r0
     e66:	0f be       	out	0x3f, r0	; 63
     e68:	0f 90       	pop	r0
     e6a:	1f 90       	pop	r1
     e6c:	18 95       	reti

00000e6e <__vector_13>:
     e6e:	1f 92       	push	r1
     e70:	0f 92       	push	r0
     e72:	0f b6       	in	r0, 0x3f	; 63
     e74:	0f 92       	push	r0
     e76:	11 24       	eor	r1, r1
     e78:	2f 93       	push	r18
     e7a:	3f 93       	push	r19
     e7c:	4f 93       	push	r20
     e7e:	5f 93       	push	r21
     e80:	6f 93       	push	r22
     e82:	7f 93       	push	r23
     e84:	8f 93       	push	r24
     e86:	9f 93       	push	r25
     e88:	af 93       	push	r26
     e8a:	bf 93       	push	r27
     e8c:	ef 93       	push	r30
     e8e:	ff 93       	push	r31
     e90:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     e94:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     e98:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e9c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ea0:	c9 01       	movw	r24, r18
     ea2:	03 2e       	mov	r0, r19
     ea4:	00 0c       	add	r0, r0
     ea6:	aa 0b       	sbc	r26, r26
     ea8:	bb 0b       	sbc	r27, r27
     eaa:	dc 01       	movw	r26, r24
     eac:	99 27       	eor	r25, r25
     eae:	88 27       	eor	r24, r24
     eb0:	60 e0       	ldi	r22, 0x00	; 0
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	84 2b       	or	r24, r20
     eb6:	95 2b       	or	r25, r21
     eb8:	a6 2b       	or	r26, r22
     eba:	b7 2b       	or	r27, r23
     ebc:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     ec0:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     ec4:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     ec8:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     ecc:	b0 9b       	sbis	0x16, 0	; 22
     ece:	1b c0       	rjmp	.+54     	; 0xf06 <__vector_13+0x98>
     ed0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ed4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ed8:	c9 01       	movw	r24, r18
     eda:	01 96       	adiw	r24, 0x01	; 1
     edc:	09 2e       	mov	r0, r25
     ede:	00 0c       	add	r0, r0
     ee0:	aa 0b       	sbc	r26, r26
     ee2:	bb 0b       	sbc	r27, r27
     ee4:	dc 01       	movw	r26, r24
     ee6:	99 27       	eor	r25, r25
     ee8:	88 27       	eor	r24, r24
     eea:	60 e0       	ldi	r22, 0x00	; 0
     eec:	70 e0       	ldi	r23, 0x00	; 0
     eee:	84 2b       	or	r24, r20
     ef0:	95 2b       	or	r25, r21
     ef2:	a6 2b       	or	r26, r22
     ef4:	b7 2b       	or	r27, r23
     ef6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     efa:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     efe:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     f02:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     f06:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x10>
     f0a:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x11>
     f0e:	30 97       	sbiw	r30, 0x00	; 0
     f10:	39 f0       	breq	.+14     	; 0xf20 <__vector_13+0xb2>
     f12:	68 e0       	ldi	r22, 0x08	; 8
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x10>
     f1a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x11>
     f1e:	09 95       	icall
     f20:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     f24:	ff 91       	pop	r31
     f26:	ef 91       	pop	r30
     f28:	bf 91       	pop	r27
     f2a:	af 91       	pop	r26
     f2c:	9f 91       	pop	r25
     f2e:	8f 91       	pop	r24
     f30:	7f 91       	pop	r23
     f32:	6f 91       	pop	r22
     f34:	5f 91       	pop	r21
     f36:	4f 91       	pop	r20
     f38:	3f 91       	pop	r19
     f3a:	2f 91       	pop	r18
     f3c:	0f 90       	pop	r0
     f3e:	0f be       	out	0x3f, r0	; 63
     f40:	0f 90       	pop	r0
     f42:	1f 90       	pop	r1
     f44:	18 95       	reti

00000f46 <__vector_14>:
     f46:	1f 92       	push	r1
     f48:	0f 92       	push	r0
     f4a:	0f b6       	in	r0, 0x3f	; 63
     f4c:	0f 92       	push	r0
     f4e:	11 24       	eor	r1, r1
     f50:	2f 93       	push	r18
     f52:	3f 93       	push	r19
     f54:	4f 93       	push	r20
     f56:	5f 93       	push	r21
     f58:	6f 93       	push	r22
     f5a:	7f 93       	push	r23
     f5c:	8f 93       	push	r24
     f5e:	9f 93       	push	r25
     f60:	af 93       	push	r26
     f62:	bf 93       	push	r27
     f64:	ef 93       	push	r30
     f66:	ff 93       	push	r31
     f68:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
     f6c:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
     f70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f78:	c9 01       	movw	r24, r18
     f7a:	03 2e       	mov	r0, r19
     f7c:	00 0c       	add	r0, r0
     f7e:	aa 0b       	sbc	r26, r26
     f80:	bb 0b       	sbc	r27, r27
     f82:	dc 01       	movw	r26, r24
     f84:	99 27       	eor	r25, r25
     f86:	88 27       	eor	r24, r24
     f88:	60 e0       	ldi	r22, 0x00	; 0
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	84 2b       	or	r24, r20
     f8e:	95 2b       	or	r25, r21
     f90:	a6 2b       	or	r26, r22
     f92:	b7 2b       	or	r27, r23
     f94:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     f98:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     f9c:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     fa0:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     fa4:	b0 9b       	sbis	0x16, 0	; 22
     fa6:	1b c0       	rjmp	.+54     	; 0xfde <__vector_14+0x98>
     fa8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fb0:	c9 01       	movw	r24, r18
     fb2:	01 96       	adiw	r24, 0x01	; 1
     fb4:	09 2e       	mov	r0, r25
     fb6:	00 0c       	add	r0, r0
     fb8:	aa 0b       	sbc	r26, r26
     fba:	bb 0b       	sbc	r27, r27
     fbc:	dc 01       	movw	r26, r24
     fbe:	99 27       	eor	r25, r25
     fc0:	88 27       	eor	r24, r24
     fc2:	60 e0       	ldi	r22, 0x00	; 0
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	84 2b       	or	r24, r20
     fc8:	95 2b       	or	r25, r21
     fca:	a6 2b       	or	r26, r22
     fcc:	b7 2b       	or	r27, r23
     fce:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
     fd2:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
     fd6:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
     fda:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
     fde:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x12>
     fe2:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x13>
     fe6:	30 97       	sbiw	r30, 0x00	; 0
     fe8:	39 f0       	breq	.+14     	; 0xff8 <__vector_14+0xb2>
     fea:	69 e0       	ldi	r22, 0x09	; 9
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x12>
     ff2:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x13>
     ff6:	09 95       	icall
     ff8:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
     ffc:	ff 91       	pop	r31
     ffe:	ef 91       	pop	r30
    1000:	bf 91       	pop	r27
    1002:	af 91       	pop	r26
    1004:	9f 91       	pop	r25
    1006:	8f 91       	pop	r24
    1008:	7f 91       	pop	r23
    100a:	6f 91       	pop	r22
    100c:	5f 91       	pop	r21
    100e:	4f 91       	pop	r20
    1010:	3f 91       	pop	r19
    1012:	2f 91       	pop	r18
    1014:	0f 90       	pop	r0
    1016:	0f be       	out	0x3f, r0	; 63
    1018:	0f 90       	pop	r0
    101a:	1f 90       	pop	r1
    101c:	18 95       	reti

0000101e <__vector_15>:
    101e:	1f 92       	push	r1
    1020:	0f 92       	push	r0
    1022:	0f b6       	in	r0, 0x3f	; 63
    1024:	0f 92       	push	r0
    1026:	11 24       	eor	r1, r1
    1028:	2f 93       	push	r18
    102a:	3f 93       	push	r19
    102c:	4f 93       	push	r20
    102e:	5f 93       	push	r21
    1030:	6f 93       	push	r22
    1032:	7f 93       	push	r23
    1034:	8f 93       	push	r24
    1036:	9f 93       	push	r25
    1038:	af 93       	push	r26
    103a:	bf 93       	push	r27
    103c:	ef 93       	push	r30
    103e:	ff 93       	push	r31
    1040:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    1044:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    1048:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    104c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1050:	c9 01       	movw	r24, r18
    1052:	03 2e       	mov	r0, r19
    1054:	00 0c       	add	r0, r0
    1056:	aa 0b       	sbc	r26, r26
    1058:	bb 0b       	sbc	r27, r27
    105a:	dc 01       	movw	r26, r24
    105c:	99 27       	eor	r25, r25
    105e:	88 27       	eor	r24, r24
    1060:	60 e0       	ldi	r22, 0x00	; 0
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	84 2b       	or	r24, r20
    1066:	95 2b       	or	r25, r21
    1068:	a6 2b       	or	r26, r22
    106a:	b7 2b       	or	r27, r23
    106c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    1070:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    1074:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    1078:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    107c:	b0 9b       	sbis	0x16, 0	; 22
    107e:	1b c0       	rjmp	.+54     	; 0x10b6 <__vector_15+0x98>
    1080:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1084:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1088:	c9 01       	movw	r24, r18
    108a:	01 96       	adiw	r24, 0x01	; 1
    108c:	09 2e       	mov	r0, r25
    108e:	00 0c       	add	r0, r0
    1090:	aa 0b       	sbc	r26, r26
    1092:	bb 0b       	sbc	r27, r27
    1094:	dc 01       	movw	r26, r24
    1096:	99 27       	eor	r25, r25
    1098:	88 27       	eor	r24, r24
    109a:	60 e0       	ldi	r22, 0x00	; 0
    109c:	70 e0       	ldi	r23, 0x00	; 0
    109e:	84 2b       	or	r24, r20
    10a0:	95 2b       	or	r25, r21
    10a2:	a6 2b       	or	r26, r22
    10a4:	b7 2b       	or	r27, r23
    10a6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    10aa:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    10ae:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    10b2:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    10b6:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x14>
    10ba:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x15>
    10be:	30 97       	sbiw	r30, 0x00	; 0
    10c0:	39 f0       	breq	.+14     	; 0x10d0 <__vector_15+0xb2>
    10c2:	6a e0       	ldi	r22, 0x0A	; 10
    10c4:	70 e0       	ldi	r23, 0x00	; 0
    10c6:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x14>
    10ca:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x15>
    10ce:	09 95       	icall
    10d0:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    10d4:	ff 91       	pop	r31
    10d6:	ef 91       	pop	r30
    10d8:	bf 91       	pop	r27
    10da:	af 91       	pop	r26
    10dc:	9f 91       	pop	r25
    10de:	8f 91       	pop	r24
    10e0:	7f 91       	pop	r23
    10e2:	6f 91       	pop	r22
    10e4:	5f 91       	pop	r21
    10e6:	4f 91       	pop	r20
    10e8:	3f 91       	pop	r19
    10ea:	2f 91       	pop	r18
    10ec:	0f 90       	pop	r0
    10ee:	0f be       	out	0x3f, r0	; 63
    10f0:	0f 90       	pop	r0
    10f2:	1f 90       	pop	r1
    10f4:	18 95       	reti

000010f6 <__vector_16>:
    10f6:	1f 92       	push	r1
    10f8:	0f 92       	push	r0
    10fa:	0f b6       	in	r0, 0x3f	; 63
    10fc:	0f 92       	push	r0
    10fe:	11 24       	eor	r1, r1
    1100:	2f 93       	push	r18
    1102:	3f 93       	push	r19
    1104:	4f 93       	push	r20
    1106:	5f 93       	push	r21
    1108:	6f 93       	push	r22
    110a:	7f 93       	push	r23
    110c:	8f 93       	push	r24
    110e:	9f 93       	push	r25
    1110:	af 93       	push	r26
    1112:	bf 93       	push	r27
    1114:	ef 93       	push	r30
    1116:	ff 93       	push	r31
    1118:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    111c:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    1120:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1124:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1128:	c9 01       	movw	r24, r18
    112a:	03 2e       	mov	r0, r19
    112c:	00 0c       	add	r0, r0
    112e:	aa 0b       	sbc	r26, r26
    1130:	bb 0b       	sbc	r27, r27
    1132:	dc 01       	movw	r26, r24
    1134:	99 27       	eor	r25, r25
    1136:	88 27       	eor	r24, r24
    1138:	60 e0       	ldi	r22, 0x00	; 0
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	84 2b       	or	r24, r20
    113e:	95 2b       	or	r25, r21
    1140:	a6 2b       	or	r26, r22
    1142:	b7 2b       	or	r27, r23
    1144:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    1148:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    114c:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    1150:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    1154:	b0 9b       	sbis	0x16, 0	; 22
    1156:	1b c0       	rjmp	.+54     	; 0x118e <__vector_16+0x98>
    1158:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    115c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1160:	c9 01       	movw	r24, r18
    1162:	01 96       	adiw	r24, 0x01	; 1
    1164:	09 2e       	mov	r0, r25
    1166:	00 0c       	add	r0, r0
    1168:	aa 0b       	sbc	r26, r26
    116a:	bb 0b       	sbc	r27, r27
    116c:	dc 01       	movw	r26, r24
    116e:	99 27       	eor	r25, r25
    1170:	88 27       	eor	r24, r24
    1172:	60 e0       	ldi	r22, 0x00	; 0
    1174:	70 e0       	ldi	r23, 0x00	; 0
    1176:	84 2b       	or	r24, r20
    1178:	95 2b       	or	r25, r21
    117a:	a6 2b       	or	r26, r22
    117c:	b7 2b       	or	r27, r23
    117e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    1182:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    1186:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    118a:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    118e:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x16>
    1192:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x17>
    1196:	30 97       	sbiw	r30, 0x00	; 0
    1198:	39 f0       	breq	.+14     	; 0x11a8 <__vector_16+0xb2>
    119a:	6b e0       	ldi	r22, 0x0B	; 11
    119c:	70 e0       	ldi	r23, 0x00	; 0
    119e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x16>
    11a2:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x17>
    11a6:	09 95       	icall
    11a8:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    11ac:	ff 91       	pop	r31
    11ae:	ef 91       	pop	r30
    11b0:	bf 91       	pop	r27
    11b2:	af 91       	pop	r26
    11b4:	9f 91       	pop	r25
    11b6:	8f 91       	pop	r24
    11b8:	7f 91       	pop	r23
    11ba:	6f 91       	pop	r22
    11bc:	5f 91       	pop	r21
    11be:	4f 91       	pop	r20
    11c0:	3f 91       	pop	r19
    11c2:	2f 91       	pop	r18
    11c4:	0f 90       	pop	r0
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	0f 90       	pop	r0
    11ca:	1f 90       	pop	r1
    11cc:	18 95       	reti

000011ce <__vector_17>:
    11ce:	1f 92       	push	r1
    11d0:	0f 92       	push	r0
    11d2:	0f b6       	in	r0, 0x3f	; 63
    11d4:	0f 92       	push	r0
    11d6:	11 24       	eor	r1, r1
    11d8:	2f 93       	push	r18
    11da:	3f 93       	push	r19
    11dc:	4f 93       	push	r20
    11de:	5f 93       	push	r21
    11e0:	6f 93       	push	r22
    11e2:	7f 93       	push	r23
    11e4:	8f 93       	push	r24
    11e6:	9f 93       	push	r25
    11e8:	af 93       	push	r26
    11ea:	bf 93       	push	r27
    11ec:	ef 93       	push	r30
    11ee:	ff 93       	push	r31
    11f0:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    11f4:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    11f8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11fc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1200:	c9 01       	movw	r24, r18
    1202:	03 2e       	mov	r0, r19
    1204:	00 0c       	add	r0, r0
    1206:	aa 0b       	sbc	r26, r26
    1208:	bb 0b       	sbc	r27, r27
    120a:	dc 01       	movw	r26, r24
    120c:	99 27       	eor	r25, r25
    120e:	88 27       	eor	r24, r24
    1210:	60 e0       	ldi	r22, 0x00	; 0
    1212:	70 e0       	ldi	r23, 0x00	; 0
    1214:	84 2b       	or	r24, r20
    1216:	95 2b       	or	r25, r21
    1218:	a6 2b       	or	r26, r22
    121a:	b7 2b       	or	r27, r23
    121c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    1220:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    1224:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    1228:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    122c:	b0 9b       	sbis	0x16, 0	; 22
    122e:	1b c0       	rjmp	.+54     	; 0x1266 <__vector_17+0x98>
    1230:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1234:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1238:	c9 01       	movw	r24, r18
    123a:	01 96       	adiw	r24, 0x01	; 1
    123c:	09 2e       	mov	r0, r25
    123e:	00 0c       	add	r0, r0
    1240:	aa 0b       	sbc	r26, r26
    1242:	bb 0b       	sbc	r27, r27
    1244:	dc 01       	movw	r26, r24
    1246:	99 27       	eor	r25, r25
    1248:	88 27       	eor	r24, r24
    124a:	60 e0       	ldi	r22, 0x00	; 0
    124c:	70 e0       	ldi	r23, 0x00	; 0
    124e:	84 2b       	or	r24, r20
    1250:	95 2b       	or	r25, r21
    1252:	a6 2b       	or	r26, r22
    1254:	b7 2b       	or	r27, r23
    1256:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    125a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    125e:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    1262:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    1266:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x18>
    126a:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x19>
    126e:	30 97       	sbiw	r30, 0x00	; 0
    1270:	39 f0       	breq	.+14     	; 0x1280 <__vector_17+0xb2>
    1272:	6c e0       	ldi	r22, 0x0C	; 12
    1274:	70 e0       	ldi	r23, 0x00	; 0
    1276:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x18>
    127a:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x19>
    127e:	09 95       	icall
    1280:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    1284:	ff 91       	pop	r31
    1286:	ef 91       	pop	r30
    1288:	bf 91       	pop	r27
    128a:	af 91       	pop	r26
    128c:	9f 91       	pop	r25
    128e:	8f 91       	pop	r24
    1290:	7f 91       	pop	r23
    1292:	6f 91       	pop	r22
    1294:	5f 91       	pop	r21
    1296:	4f 91       	pop	r20
    1298:	3f 91       	pop	r19
    129a:	2f 91       	pop	r18
    129c:	0f 90       	pop	r0
    129e:	0f be       	out	0x3f, r0	; 63
    12a0:	0f 90       	pop	r0
    12a2:	1f 90       	pop	r1
    12a4:	18 95       	reti

000012a6 <__vector_18>:
    12a6:	1f 92       	push	r1
    12a8:	0f 92       	push	r0
    12aa:	0f b6       	in	r0, 0x3f	; 63
    12ac:	0f 92       	push	r0
    12ae:	11 24       	eor	r1, r1
    12b0:	2f 93       	push	r18
    12b2:	3f 93       	push	r19
    12b4:	4f 93       	push	r20
    12b6:	5f 93       	push	r21
    12b8:	6f 93       	push	r22
    12ba:	7f 93       	push	r23
    12bc:	8f 93       	push	r24
    12be:	9f 93       	push	r25
    12c0:	af 93       	push	r26
    12c2:	bf 93       	push	r27
    12c4:	ef 93       	push	r30
    12c6:	ff 93       	push	r31
    12c8:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    12cc:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    12d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12d8:	c9 01       	movw	r24, r18
    12da:	03 2e       	mov	r0, r19
    12dc:	00 0c       	add	r0, r0
    12de:	aa 0b       	sbc	r26, r26
    12e0:	bb 0b       	sbc	r27, r27
    12e2:	dc 01       	movw	r26, r24
    12e4:	99 27       	eor	r25, r25
    12e6:	88 27       	eor	r24, r24
    12e8:	60 e0       	ldi	r22, 0x00	; 0
    12ea:	70 e0       	ldi	r23, 0x00	; 0
    12ec:	84 2b       	or	r24, r20
    12ee:	95 2b       	or	r25, r21
    12f0:	a6 2b       	or	r26, r22
    12f2:	b7 2b       	or	r27, r23
    12f4:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    12f8:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    12fc:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    1300:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    1304:	b0 9b       	sbis	0x16, 0	; 22
    1306:	1b c0       	rjmp	.+54     	; 0x133e <__vector_18+0x98>
    1308:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    130c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1310:	c9 01       	movw	r24, r18
    1312:	01 96       	adiw	r24, 0x01	; 1
    1314:	09 2e       	mov	r0, r25
    1316:	00 0c       	add	r0, r0
    1318:	aa 0b       	sbc	r26, r26
    131a:	bb 0b       	sbc	r27, r27
    131c:	dc 01       	movw	r26, r24
    131e:	99 27       	eor	r25, r25
    1320:	88 27       	eor	r24, r24
    1322:	60 e0       	ldi	r22, 0x00	; 0
    1324:	70 e0       	ldi	r23, 0x00	; 0
    1326:	84 2b       	or	r24, r20
    1328:	95 2b       	or	r25, r21
    132a:	a6 2b       	or	r26, r22
    132c:	b7 2b       	or	r27, r23
    132e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    1332:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    1336:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    133a:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    133e:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x1a>
    1342:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x1b>
    1346:	30 97       	sbiw	r30, 0x00	; 0
    1348:	39 f0       	breq	.+14     	; 0x1358 <__vector_18+0xb2>
    134a:	6d e0       	ldi	r22, 0x0D	; 13
    134c:	70 e0       	ldi	r23, 0x00	; 0
    134e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x1a>
    1352:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x1b>
    1356:	09 95       	icall
    1358:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    135c:	ff 91       	pop	r31
    135e:	ef 91       	pop	r30
    1360:	bf 91       	pop	r27
    1362:	af 91       	pop	r26
    1364:	9f 91       	pop	r25
    1366:	8f 91       	pop	r24
    1368:	7f 91       	pop	r23
    136a:	6f 91       	pop	r22
    136c:	5f 91       	pop	r21
    136e:	4f 91       	pop	r20
    1370:	3f 91       	pop	r19
    1372:	2f 91       	pop	r18
    1374:	0f 90       	pop	r0
    1376:	0f be       	out	0x3f, r0	; 63
    1378:	0f 90       	pop	r0
    137a:	1f 90       	pop	r1
    137c:	18 95       	reti

0000137e <__vector_19>:
    137e:	1f 92       	push	r1
    1380:	0f 92       	push	r0
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	0f 92       	push	r0
    1386:	11 24       	eor	r1, r1
    1388:	2f 93       	push	r18
    138a:	3f 93       	push	r19
    138c:	4f 93       	push	r20
    138e:	5f 93       	push	r21
    1390:	6f 93       	push	r22
    1392:	7f 93       	push	r23
    1394:	8f 93       	push	r24
    1396:	9f 93       	push	r25
    1398:	af 93       	push	r26
    139a:	bf 93       	push	r27
    139c:	ef 93       	push	r30
    139e:	ff 93       	push	r31
    13a0:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    13a4:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    13a8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13ac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13b0:	c9 01       	movw	r24, r18
    13b2:	03 2e       	mov	r0, r19
    13b4:	00 0c       	add	r0, r0
    13b6:	aa 0b       	sbc	r26, r26
    13b8:	bb 0b       	sbc	r27, r27
    13ba:	dc 01       	movw	r26, r24
    13bc:	99 27       	eor	r25, r25
    13be:	88 27       	eor	r24, r24
    13c0:	60 e0       	ldi	r22, 0x00	; 0
    13c2:	70 e0       	ldi	r23, 0x00	; 0
    13c4:	84 2b       	or	r24, r20
    13c6:	95 2b       	or	r25, r21
    13c8:	a6 2b       	or	r26, r22
    13ca:	b7 2b       	or	r27, r23
    13cc:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    13d0:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    13d4:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    13d8:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    13dc:	b0 9b       	sbis	0x16, 0	; 22
    13de:	1b c0       	rjmp	.+54     	; 0x1416 <__vector_19+0x98>
    13e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13e8:	c9 01       	movw	r24, r18
    13ea:	01 96       	adiw	r24, 0x01	; 1
    13ec:	09 2e       	mov	r0, r25
    13ee:	00 0c       	add	r0, r0
    13f0:	aa 0b       	sbc	r26, r26
    13f2:	bb 0b       	sbc	r27, r27
    13f4:	dc 01       	movw	r26, r24
    13f6:	99 27       	eor	r25, r25
    13f8:	88 27       	eor	r24, r24
    13fa:	60 e0       	ldi	r22, 0x00	; 0
    13fc:	70 e0       	ldi	r23, 0x00	; 0
    13fe:	84 2b       	or	r24, r20
    1400:	95 2b       	or	r25, r21
    1402:	a6 2b       	or	r26, r22
    1404:	b7 2b       	or	r27, r23
    1406:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    140a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    140e:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    1412:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    1416:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x1c>
    141a:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x1d>
    141e:	30 97       	sbiw	r30, 0x00	; 0
    1420:	39 f0       	breq	.+14     	; 0x1430 <__vector_19+0xb2>
    1422:	6e e0       	ldi	r22, 0x0E	; 14
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x1c>
    142a:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x1d>
    142e:	09 95       	icall
    1430:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    1434:	ff 91       	pop	r31
    1436:	ef 91       	pop	r30
    1438:	bf 91       	pop	r27
    143a:	af 91       	pop	r26
    143c:	9f 91       	pop	r25
    143e:	8f 91       	pop	r24
    1440:	7f 91       	pop	r23
    1442:	6f 91       	pop	r22
    1444:	5f 91       	pop	r21
    1446:	4f 91       	pop	r20
    1448:	3f 91       	pop	r19
    144a:	2f 91       	pop	r18
    144c:	0f 90       	pop	r0
    144e:	0f be       	out	0x3f, r0	; 63
    1450:	0f 90       	pop	r0
    1452:	1f 90       	pop	r1
    1454:	18 95       	reti

00001456 <__vector_20>:
    1456:	1f 92       	push	r1
    1458:	0f 92       	push	r0
    145a:	0f b6       	in	r0, 0x3f	; 63
    145c:	0f 92       	push	r0
    145e:	11 24       	eor	r1, r1
    1460:	2f 93       	push	r18
    1462:	3f 93       	push	r19
    1464:	4f 93       	push	r20
    1466:	5f 93       	push	r21
    1468:	6f 93       	push	r22
    146a:	7f 93       	push	r23
    146c:	8f 93       	push	r24
    146e:	9f 93       	push	r25
    1470:	af 93       	push	r26
    1472:	bf 93       	push	r27
    1474:	ef 93       	push	r30
    1476:	ff 93       	push	r31
    1478:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    147c:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    1480:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1484:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1488:	c9 01       	movw	r24, r18
    148a:	03 2e       	mov	r0, r19
    148c:	00 0c       	add	r0, r0
    148e:	aa 0b       	sbc	r26, r26
    1490:	bb 0b       	sbc	r27, r27
    1492:	dc 01       	movw	r26, r24
    1494:	99 27       	eor	r25, r25
    1496:	88 27       	eor	r24, r24
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	84 2b       	or	r24, r20
    149e:	95 2b       	or	r25, r21
    14a0:	a6 2b       	or	r26, r22
    14a2:	b7 2b       	or	r27, r23
    14a4:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    14a8:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    14ac:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    14b0:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    14b4:	b0 9b       	sbis	0x16, 0	; 22
    14b6:	1b c0       	rjmp	.+54     	; 0x14ee <__vector_20+0x98>
    14b8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14bc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14c0:	c9 01       	movw	r24, r18
    14c2:	01 96       	adiw	r24, 0x01	; 1
    14c4:	09 2e       	mov	r0, r25
    14c6:	00 0c       	add	r0, r0
    14c8:	aa 0b       	sbc	r26, r26
    14ca:	bb 0b       	sbc	r27, r27
    14cc:	dc 01       	movw	r26, r24
    14ce:	99 27       	eor	r25, r25
    14d0:	88 27       	eor	r24, r24
    14d2:	60 e0       	ldi	r22, 0x00	; 0
    14d4:	70 e0       	ldi	r23, 0x00	; 0
    14d6:	84 2b       	or	r24, r20
    14d8:	95 2b       	or	r25, r21
    14da:	a6 2b       	or	r26, r22
    14dc:	b7 2b       	or	r27, r23
    14de:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    14e2:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    14e6:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    14ea:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    14ee:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x1e>
    14f2:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x1f>
    14f6:	30 97       	sbiw	r30, 0x00	; 0
    14f8:	39 f0       	breq	.+14     	; 0x1508 <__vector_20+0xb2>
    14fa:	6f e0       	ldi	r22, 0x0F	; 15
    14fc:	70 e0       	ldi	r23, 0x00	; 0
    14fe:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x1e>
    1502:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x1f>
    1506:	09 95       	icall
    1508:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    150c:	ff 91       	pop	r31
    150e:	ef 91       	pop	r30
    1510:	bf 91       	pop	r27
    1512:	af 91       	pop	r26
    1514:	9f 91       	pop	r25
    1516:	8f 91       	pop	r24
    1518:	7f 91       	pop	r23
    151a:	6f 91       	pop	r22
    151c:	5f 91       	pop	r21
    151e:	4f 91       	pop	r20
    1520:	3f 91       	pop	r19
    1522:	2f 91       	pop	r18
    1524:	0f 90       	pop	r0
    1526:	0f be       	out	0x3f, r0	; 63
    1528:	0f 90       	pop	r0
    152a:	1f 90       	pop	r1
    152c:	18 95       	reti

0000152e <__vector_21>:
    152e:	1f 92       	push	r1
    1530:	0f 92       	push	r0
    1532:	0f b6       	in	r0, 0x3f	; 63
    1534:	0f 92       	push	r0
    1536:	11 24       	eor	r1, r1
    1538:	2f 93       	push	r18
    153a:	3f 93       	push	r19
    153c:	4f 93       	push	r20
    153e:	5f 93       	push	r21
    1540:	6f 93       	push	r22
    1542:	7f 93       	push	r23
    1544:	8f 93       	push	r24
    1546:	9f 93       	push	r25
    1548:	af 93       	push	r26
    154a:	bf 93       	push	r27
    154c:	ef 93       	push	r30
    154e:	ff 93       	push	r31
    1550:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    1554:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    1558:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    155c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1560:	c9 01       	movw	r24, r18
    1562:	03 2e       	mov	r0, r19
    1564:	00 0c       	add	r0, r0
    1566:	aa 0b       	sbc	r26, r26
    1568:	bb 0b       	sbc	r27, r27
    156a:	dc 01       	movw	r26, r24
    156c:	99 27       	eor	r25, r25
    156e:	88 27       	eor	r24, r24
    1570:	60 e0       	ldi	r22, 0x00	; 0
    1572:	70 e0       	ldi	r23, 0x00	; 0
    1574:	84 2b       	or	r24, r20
    1576:	95 2b       	or	r25, r21
    1578:	a6 2b       	or	r26, r22
    157a:	b7 2b       	or	r27, r23
    157c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    1580:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    1584:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    1588:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    158c:	b0 9b       	sbis	0x16, 0	; 22
    158e:	1b c0       	rjmp	.+54     	; 0x15c6 <__vector_21+0x98>
    1590:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1594:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1598:	c9 01       	movw	r24, r18
    159a:	01 96       	adiw	r24, 0x01	; 1
    159c:	09 2e       	mov	r0, r25
    159e:	00 0c       	add	r0, r0
    15a0:	aa 0b       	sbc	r26, r26
    15a2:	bb 0b       	sbc	r27, r27
    15a4:	dc 01       	movw	r26, r24
    15a6:	99 27       	eor	r25, r25
    15a8:	88 27       	eor	r24, r24
    15aa:	60 e0       	ldi	r22, 0x00	; 0
    15ac:	70 e0       	ldi	r23, 0x00	; 0
    15ae:	84 2b       	or	r24, r20
    15b0:	95 2b       	or	r25, r21
    15b2:	a6 2b       	or	r26, r22
    15b4:	b7 2b       	or	r27, r23
    15b6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    15ba:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    15be:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    15c2:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    15c6:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x20>
    15ca:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x21>
    15ce:	30 97       	sbiw	r30, 0x00	; 0
    15d0:	39 f0       	breq	.+14     	; 0x15e0 <__vector_21+0xb2>
    15d2:	60 e1       	ldi	r22, 0x10	; 16
    15d4:	70 e0       	ldi	r23, 0x00	; 0
    15d6:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x20>
    15da:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x21>
    15de:	09 95       	icall
    15e0:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    15e4:	ff 91       	pop	r31
    15e6:	ef 91       	pop	r30
    15e8:	bf 91       	pop	r27
    15ea:	af 91       	pop	r26
    15ec:	9f 91       	pop	r25
    15ee:	8f 91       	pop	r24
    15f0:	7f 91       	pop	r23
    15f2:	6f 91       	pop	r22
    15f4:	5f 91       	pop	r21
    15f6:	4f 91       	pop	r20
    15f8:	3f 91       	pop	r19
    15fa:	2f 91       	pop	r18
    15fc:	0f 90       	pop	r0
    15fe:	0f be       	out	0x3f, r0	; 63
    1600:	0f 90       	pop	r0
    1602:	1f 90       	pop	r1
    1604:	18 95       	reti

00001606 <__vector_22>:
    1606:	1f 92       	push	r1
    1608:	0f 92       	push	r0
    160a:	0f b6       	in	r0, 0x3f	; 63
    160c:	0f 92       	push	r0
    160e:	11 24       	eor	r1, r1
    1610:	2f 93       	push	r18
    1612:	3f 93       	push	r19
    1614:	4f 93       	push	r20
    1616:	5f 93       	push	r21
    1618:	6f 93       	push	r22
    161a:	7f 93       	push	r23
    161c:	8f 93       	push	r24
    161e:	9f 93       	push	r25
    1620:	af 93       	push	r26
    1622:	bf 93       	push	r27
    1624:	ef 93       	push	r30
    1626:	ff 93       	push	r31
    1628:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    162c:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    1630:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1634:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1638:	c9 01       	movw	r24, r18
    163a:	03 2e       	mov	r0, r19
    163c:	00 0c       	add	r0, r0
    163e:	aa 0b       	sbc	r26, r26
    1640:	bb 0b       	sbc	r27, r27
    1642:	dc 01       	movw	r26, r24
    1644:	99 27       	eor	r25, r25
    1646:	88 27       	eor	r24, r24
    1648:	60 e0       	ldi	r22, 0x00	; 0
    164a:	70 e0       	ldi	r23, 0x00	; 0
    164c:	84 2b       	or	r24, r20
    164e:	95 2b       	or	r25, r21
    1650:	a6 2b       	or	r26, r22
    1652:	b7 2b       	or	r27, r23
    1654:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    1658:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    165c:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    1660:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    1664:	b0 9b       	sbis	0x16, 0	; 22
    1666:	1b c0       	rjmp	.+54     	; 0x169e <__vector_22+0x98>
    1668:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    166c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1670:	c9 01       	movw	r24, r18
    1672:	01 96       	adiw	r24, 0x01	; 1
    1674:	09 2e       	mov	r0, r25
    1676:	00 0c       	add	r0, r0
    1678:	aa 0b       	sbc	r26, r26
    167a:	bb 0b       	sbc	r27, r27
    167c:	dc 01       	movw	r26, r24
    167e:	99 27       	eor	r25, r25
    1680:	88 27       	eor	r24, r24
    1682:	60 e0       	ldi	r22, 0x00	; 0
    1684:	70 e0       	ldi	r23, 0x00	; 0
    1686:	84 2b       	or	r24, r20
    1688:	95 2b       	or	r25, r21
    168a:	a6 2b       	or	r26, r22
    168c:	b7 2b       	or	r27, r23
    168e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timestamp>
    1692:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timestamp+0x1>
    1696:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <timestamp+0x2>
    169a:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <timestamp+0x3>
    169e:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x22>
    16a2:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x23>
    16a6:	30 97       	sbiw	r30, 0x00	; 0
    16a8:	39 f0       	breq	.+14     	; 0x16b8 <__vector_22+0xb2>
    16aa:	61 e1       	ldi	r22, 0x11	; 17
    16ac:	70 e0       	ldi	r23, 0x00	; 0
    16ae:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x22>
    16b2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x23>
    16b6:	09 95       	icall
    16b8:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    16bc:	ff 91       	pop	r31
    16be:	ef 91       	pop	r30
    16c0:	bf 91       	pop	r27
    16c2:	af 91       	pop	r26
    16c4:	9f 91       	pop	r25
    16c6:	8f 91       	pop	r24
    16c8:	7f 91       	pop	r23
    16ca:	6f 91       	pop	r22
    16cc:	5f 91       	pop	r21
    16ce:	4f 91       	pop	r20
    16d0:	3f 91       	pop	r19
    16d2:	2f 91       	pop	r18
    16d4:	0f 90       	pop	r0
    16d6:	0f be       	out	0x3f, r0	; 63
    16d8:	0f 90       	pop	r0
    16da:	1f 90       	pop	r1
    16dc:	18 95       	reti

000016de <enqueueByDeadline>:
    16de:	ef 92       	push	r14
    16e0:	ff 92       	push	r15
    16e2:	0f 93       	push	r16
    16e4:	1f 93       	push	r17
    16e6:	cf 93       	push	r28
    16e8:	df 93       	push	r29
    16ea:	7b 01       	movw	r14, r22
    16ec:	eb 01       	movw	r28, r22
    16ee:	a8 81       	ld	r26, Y
    16f0:	b9 81       	ldd	r27, Y+1	; 0x01
    16f2:	10 97       	sbiw	r26, 0x00	; 0
    16f4:	61 f1       	breq	.+88     	; 0x174e <enqueueByDeadline+0x70>
    16f6:	fc 01       	movw	r30, r24
    16f8:	06 81       	ldd	r16, Z+6	; 0x06
    16fa:	17 81       	ldd	r17, Z+7	; 0x07
    16fc:	20 85       	ldd	r18, Z+8	; 0x08
    16fe:	31 85       	ldd	r19, Z+9	; 0x09
    1700:	16 96       	adiw	r26, 0x06	; 6
    1702:	4d 91       	ld	r20, X+
    1704:	5d 91       	ld	r21, X+
    1706:	6d 91       	ld	r22, X+
    1708:	7c 91       	ld	r23, X
    170a:	19 97       	sbiw	r26, 0x09	; 9
    170c:	04 17       	cp	r16, r20
    170e:	15 07       	cpc	r17, r21
    1710:	26 07       	cpc	r18, r22
    1712:	37 07       	cpc	r19, r23
    1714:	14 f4       	brge	.+4      	; 0x171a <enqueueByDeadline+0x3c>
    1716:	1b c0       	rjmp	.+54     	; 0x174e <enqueueByDeadline+0x70>
    1718:	df 01       	movw	r26, r30
    171a:	ed 91       	ld	r30, X+
    171c:	fc 91       	ld	r31, X
    171e:	11 97       	sbiw	r26, 0x01	; 1
    1720:	30 97       	sbiw	r30, 0x00	; 0
    1722:	49 f0       	breq	.+18     	; 0x1736 <enqueueByDeadline+0x58>
    1724:	46 81       	ldd	r20, Z+6	; 0x06
    1726:	57 81       	ldd	r21, Z+7	; 0x07
    1728:	60 85       	ldd	r22, Z+8	; 0x08
    172a:	71 85       	ldd	r23, Z+9	; 0x09
    172c:	04 17       	cp	r16, r20
    172e:	15 07       	cpc	r17, r21
    1730:	26 07       	cpc	r18, r22
    1732:	37 07       	cpc	r19, r23
    1734:	8c f7       	brge	.-30     	; 0x1718 <enqueueByDeadline+0x3a>
    1736:	ec 01       	movw	r28, r24
    1738:	f9 83       	std	Y+1, r31	; 0x01
    173a:	e8 83       	st	Y, r30
    173c:	10 97       	sbiw	r26, 0x00	; 0
    173e:	21 f4       	brne	.+8      	; 0x1748 <enqueueByDeadline+0x6a>
    1740:	f7 01       	movw	r30, r14
    1742:	91 83       	std	Z+1, r25	; 0x01
    1744:	80 83       	st	Z, r24
    1746:	07 c0       	rjmp	.+14     	; 0x1756 <enqueueByDeadline+0x78>
    1748:	8d 93       	st	X+, r24
    174a:	9c 93       	st	X, r25
    174c:	04 c0       	rjmp	.+8      	; 0x1756 <enqueueByDeadline+0x78>
    174e:	ec 01       	movw	r28, r24
    1750:	b9 83       	std	Y+1, r27	; 0x01
    1752:	a8 83       	st	Y, r26
    1754:	f5 cf       	rjmp	.-22     	; 0x1740 <enqueueByDeadline+0x62>
    1756:	df 91       	pop	r29
    1758:	cf 91       	pop	r28
    175a:	1f 91       	pop	r17
    175c:	0f 91       	pop	r16
    175e:	ff 90       	pop	r15
    1760:	ef 90       	pop	r14
    1762:	08 95       	ret

00001764 <enqueueByBaseline>:
    1764:	ef 92       	push	r14
    1766:	ff 92       	push	r15
    1768:	0f 93       	push	r16
    176a:	1f 93       	push	r17
    176c:	cf 93       	push	r28
    176e:	df 93       	push	r29
    1770:	7b 01       	movw	r14, r22
    1772:	eb 01       	movw	r28, r22
    1774:	a8 81       	ld	r26, Y
    1776:	b9 81       	ldd	r27, Y+1	; 0x01
    1778:	10 97       	sbiw	r26, 0x00	; 0
    177a:	61 f1       	breq	.+88     	; 0x17d4 <enqueueByBaseline+0x70>
    177c:	fc 01       	movw	r30, r24
    177e:	02 81       	ldd	r16, Z+2	; 0x02
    1780:	13 81       	ldd	r17, Z+3	; 0x03
    1782:	24 81       	ldd	r18, Z+4	; 0x04
    1784:	35 81       	ldd	r19, Z+5	; 0x05
    1786:	12 96       	adiw	r26, 0x02	; 2
    1788:	4d 91       	ld	r20, X+
    178a:	5d 91       	ld	r21, X+
    178c:	6d 91       	ld	r22, X+
    178e:	7c 91       	ld	r23, X
    1790:	15 97       	sbiw	r26, 0x05	; 5
    1792:	04 17       	cp	r16, r20
    1794:	15 07       	cpc	r17, r21
    1796:	26 07       	cpc	r18, r22
    1798:	37 07       	cpc	r19, r23
    179a:	14 f4       	brge	.+4      	; 0x17a0 <enqueueByBaseline+0x3c>
    179c:	1b c0       	rjmp	.+54     	; 0x17d4 <enqueueByBaseline+0x70>
    179e:	df 01       	movw	r26, r30
    17a0:	ed 91       	ld	r30, X+
    17a2:	fc 91       	ld	r31, X
    17a4:	11 97       	sbiw	r26, 0x01	; 1
    17a6:	30 97       	sbiw	r30, 0x00	; 0
    17a8:	49 f0       	breq	.+18     	; 0x17bc <enqueueByBaseline+0x58>
    17aa:	42 81       	ldd	r20, Z+2	; 0x02
    17ac:	53 81       	ldd	r21, Z+3	; 0x03
    17ae:	64 81       	ldd	r22, Z+4	; 0x04
    17b0:	75 81       	ldd	r23, Z+5	; 0x05
    17b2:	04 17       	cp	r16, r20
    17b4:	15 07       	cpc	r17, r21
    17b6:	26 07       	cpc	r18, r22
    17b8:	37 07       	cpc	r19, r23
    17ba:	8c f7       	brge	.-30     	; 0x179e <enqueueByBaseline+0x3a>
    17bc:	ec 01       	movw	r28, r24
    17be:	f9 83       	std	Y+1, r31	; 0x01
    17c0:	e8 83       	st	Y, r30
    17c2:	10 97       	sbiw	r26, 0x00	; 0
    17c4:	21 f4       	brne	.+8      	; 0x17ce <enqueueByBaseline+0x6a>
    17c6:	f7 01       	movw	r30, r14
    17c8:	91 83       	std	Z+1, r25	; 0x01
    17ca:	80 83       	st	Z, r24
    17cc:	07 c0       	rjmp	.+14     	; 0x17dc <enqueueByBaseline+0x78>
    17ce:	8d 93       	st	X+, r24
    17d0:	9c 93       	st	X, r25
    17d2:	04 c0       	rjmp	.+8      	; 0x17dc <enqueueByBaseline+0x78>
    17d4:	ec 01       	movw	r28, r24
    17d6:	b9 83       	std	Y+1, r27	; 0x01
    17d8:	a8 83       	st	Y, r26
    17da:	f5 cf       	rjmp	.-22     	; 0x17c6 <enqueueByBaseline+0x62>
    17dc:	df 91       	pop	r29
    17de:	cf 91       	pop	r28
    17e0:	1f 91       	pop	r17
    17e2:	0f 91       	pop	r16
    17e4:	ff 90       	pop	r15
    17e6:	ef 90       	pop	r14
    17e8:	08 95       	ret

000017ea <dequeue>:
    17ea:	dc 01       	movw	r26, r24
    17ec:	ed 91       	ld	r30, X+
    17ee:	fc 91       	ld	r31, X
    17f0:	11 97       	sbiw	r26, 0x01	; 1
    17f2:	30 97       	sbiw	r30, 0x00	; 0
    17f4:	59 f4       	brne	.+22     	; 0x180c <dequeue+0x22>
    17f6:	8f ef       	ldi	r24, 0xFF	; 255
    17f8:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    17fc:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    1800:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    1804:	81 e0       	ldi	r24, 0x01	; 1
    1806:	83 bf       	out	0x33, r24	; 51
    1808:	88 95       	sleep
    180a:	fd cf       	rjmp	.-6      	; 0x1806 <dequeue+0x1c>
    180c:	20 81       	ld	r18, Z
    180e:	31 81       	ldd	r19, Z+1	; 0x01
    1810:	2d 93       	st	X+, r18
    1812:	3c 93       	st	X, r19
    1814:	cf 01       	movw	r24, r30
    1816:	08 95       	ret

00001818 <__vector_9>:
    1818:	1f 92       	push	r1
    181a:	0f 92       	push	r0
    181c:	0f b6       	in	r0, 0x3f	; 63
    181e:	0f 92       	push	r0
    1820:	11 24       	eor	r1, r1
    1822:	2f 93       	push	r18
    1824:	3f 93       	push	r19
    1826:	4f 93       	push	r20
    1828:	5f 93       	push	r21
    182a:	6f 93       	push	r22
    182c:	7f 93       	push	r23
    182e:	8f 93       	push	r24
    1830:	9f 93       	push	r25
    1832:	ef 93       	push	r30
    1834:	ff 93       	push	r31
    1836:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <overflows>
    183a:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <overflows+0x1>
    183e:	01 96       	adiw	r24, 0x01	; 1
    1840:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <overflows+0x1>
    1844:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <overflows>
    1848:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <timerQ>
    184c:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <timerQ+0x1>
    1850:	30 97       	sbiw	r30, 0x00	; 0
    1852:	01 f1       	breq	.+64     	; 0x1894 <__vector_9+0x7c>
    1854:	42 81       	ldd	r20, Z+2	; 0x02
    1856:	53 81       	ldd	r21, Z+3	; 0x03
    1858:	64 81       	ldd	r22, Z+4	; 0x04
    185a:	75 81       	ldd	r23, Z+5	; 0x05
    185c:	86 17       	cp	r24, r22
    185e:	97 07       	cpc	r25, r23
    1860:	c9 f4       	brne	.+50     	; 0x1894 <__vector_9+0x7c>
    1862:	ca 01       	movw	r24, r20
    1864:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1868:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    186c:	42 1b       	sub	r20, r18
    186e:	53 0b       	sbc	r21, r19
    1870:	41 30       	cpi	r20, 0x01	; 1
    1872:	51 05       	cpc	r21, r1
    1874:	29 f4       	brne	.+10     	; 0x1880 <__vector_9+0x68>
    1876:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    187a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    187e:	01 96       	adiw	r24, 0x01	; 1
    1880:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1884:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1888:	ef e6       	ldi	r30, 0x6F	; 111
    188a:	f0 e0       	ldi	r31, 0x00	; 0
    188c:	80 81       	ld	r24, Z
    188e:	82 60       	ori	r24, 0x02	; 2
    1890:	80 83       	st	Z, r24
    1892:	05 c0       	rjmp	.+10     	; 0x189e <__vector_9+0x86>
    1894:	ef e6       	ldi	r30, 0x6F	; 111
    1896:	f0 e0       	ldi	r31, 0x00	; 0
    1898:	80 81       	ld	r24, Z
    189a:	8d 7f       	andi	r24, 0xFD	; 253
    189c:	80 83       	st	Z, r24
    189e:	ff 91       	pop	r31
    18a0:	ef 91       	pop	r30
    18a2:	9f 91       	pop	r25
    18a4:	8f 91       	pop	r24
    18a6:	7f 91       	pop	r23
    18a8:	6f 91       	pop	r22
    18aa:	5f 91       	pop	r21
    18ac:	4f 91       	pop	r20
    18ae:	3f 91       	pop	r19
    18b0:	2f 91       	pop	r18
    18b2:	0f 90       	pop	r0
    18b4:	0f be       	out	0x3f, r0	; 63
    18b6:	0f 90       	pop	r0
    18b8:	1f 90       	pop	r1
    18ba:	18 95       	reti

000018bc <__vector_7>:
    18bc:	1f 92       	push	r1
    18be:	0f 92       	push	r0
    18c0:	0f b6       	in	r0, 0x3f	; 63
    18c2:	0f 92       	push	r0
    18c4:	11 24       	eor	r1, r1
    18c6:	cf 92       	push	r12
    18c8:	df 92       	push	r13
    18ca:	ef 92       	push	r14
    18cc:	ff 92       	push	r15
    18ce:	2f 93       	push	r18
    18d0:	3f 93       	push	r19
    18d2:	4f 93       	push	r20
    18d4:	5f 93       	push	r21
    18d6:	6f 93       	push	r22
    18d8:	7f 93       	push	r23
    18da:	8f 93       	push	r24
    18dc:	9f 93       	push	r25
    18de:	af 93       	push	r26
    18e0:	bf 93       	push	r27
    18e2:	ef 93       	push	r30
    18e4:	ff 93       	push	r31
    18e6:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <overflows>
    18ea:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <overflows+0x1>
    18ee:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18f2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18f6:	b0 99       	sbic	0x16, 0	; 22
    18f8:	0f c0       	rjmp	.+30     	; 0x1918 <__vector_7+0x5c>
    18fa:	0d 2c       	mov	r0, r13
    18fc:	00 0c       	add	r0, r0
    18fe:	ee 08       	sbc	r14, r14
    1900:	ff 08       	sbc	r15, r15
    1902:	d6 01       	movw	r26, r12
    1904:	99 27       	eor	r25, r25
    1906:	88 27       	eor	r24, r24
    1908:	69 01       	movw	r12, r18
    190a:	e1 2c       	mov	r14, r1
    190c:	f1 2c       	mov	r15, r1
    190e:	c8 2a       	or	r12, r24
    1910:	d9 2a       	or	r13, r25
    1912:	ea 2a       	or	r14, r26
    1914:	fb 2a       	or	r15, r27
    1916:	15 c0       	rjmp	.+42     	; 0x1942 <__vector_7+0x86>
    1918:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    191c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1920:	8f ef       	ldi	r24, 0xFF	; 255
    1922:	c8 1a       	sub	r12, r24
    1924:	d8 0a       	sbc	r13, r24
    1926:	0d 2c       	mov	r0, r13
    1928:	00 0c       	add	r0, r0
    192a:	ee 08       	sbc	r14, r14
    192c:	ff 08       	sbc	r15, r15
    192e:	d6 01       	movw	r26, r12
    1930:	99 27       	eor	r25, r25
    1932:	88 27       	eor	r24, r24
    1934:	69 01       	movw	r12, r18
    1936:	e1 2c       	mov	r14, r1
    1938:	f1 2c       	mov	r15, r1
    193a:	c8 2a       	or	r12, r24
    193c:	d9 2a       	or	r13, r25
    193e:	ea 2a       	or	r14, r26
    1940:	fb 2a       	or	r15, r27
    1942:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <timerQ>
    1946:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <timerQ+0x1>
    194a:	30 97       	sbiw	r30, 0x00	; 0
    194c:	09 f4       	brne	.+2      	; 0x1950 <__vector_7+0x94>
    194e:	42 c0       	rjmp	.+132    	; 0x19d4 <__vector_7+0x118>
    1950:	82 81       	ldd	r24, Z+2	; 0x02
    1952:	93 81       	ldd	r25, Z+3	; 0x03
    1954:	a4 81       	ldd	r26, Z+4	; 0x04
    1956:	b5 81       	ldd	r27, Z+5	; 0x05
    1958:	8c 19       	sub	r24, r12
    195a:	9d 09       	sbc	r25, r13
    195c:	ae 09       	sbc	r26, r14
    195e:	bf 09       	sbc	r27, r15
    1960:	18 16       	cp	r1, r24
    1962:	19 06       	cpc	r1, r25
    1964:	1a 06       	cpc	r1, r26
    1966:	1b 06       	cpc	r1, r27
    1968:	ec f1       	brlt	.+122    	; 0x19e4 <__vector_7+0x128>
    196a:	82 e1       	ldi	r24, 0x12	; 18
    196c:	91 e0       	ldi	r25, 0x01	; 1
    196e:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <dequeue>
    1972:	64 e1       	ldi	r22, 0x14	; 20
    1974:	71 e0       	ldi	r23, 0x01	; 1
    1976:	0e 94 6f 0b 	call	0x16de	; 0x16de <enqueueByDeadline>
    197a:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <timerQ>
    197e:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <timerQ+0x1>
    1982:	30 97       	sbiw	r30, 0x00	; 0
    1984:	39 f1       	breq	.+78     	; 0x19d4 <__vector_7+0x118>
    1986:	82 81       	ldd	r24, Z+2	; 0x02
    1988:	93 81       	ldd	r25, Z+3	; 0x03
    198a:	a4 81       	ldd	r26, Z+4	; 0x04
    198c:	b5 81       	ldd	r27, Z+5	; 0x05
    198e:	8c 19       	sub	r24, r12
    1990:	9d 09       	sbc	r25, r13
    1992:	ae 09       	sbc	r26, r14
    1994:	bf 09       	sbc	r27, r15
    1996:	18 16       	cp	r1, r24
    1998:	19 06       	cpc	r1, r25
    199a:	1a 06       	cpc	r1, r26
    199c:	1b 06       	cpc	r1, r27
    199e:	2c f7       	brge	.-54     	; 0x196a <__vector_7+0xae>
    19a0:	21 c0       	rjmp	.+66     	; 0x19e4 <__vector_7+0x128>
    19a2:	9c 01       	movw	r18, r24
    19a4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19a8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ac:	84 1b       	sub	r24, r20
    19ae:	95 0b       	sbc	r25, r21
    19b0:	01 97       	sbiw	r24, 0x01	; 1
    19b2:	31 f4       	brne	.+12     	; 0x19c0 <__vector_7+0x104>
    19b4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19b8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19bc:	2f 5f       	subi	r18, 0xFF	; 255
    19be:	3f 4f       	sbci	r19, 0xFF	; 255
    19c0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    19c4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    19c8:	ef e6       	ldi	r30, 0x6F	; 111
    19ca:	f0 e0       	ldi	r31, 0x00	; 0
    19cc:	80 81       	ld	r24, Z
    19ce:	82 60       	ori	r24, 0x02	; 2
    19d0:	80 83       	st	Z, r24
    19d2:	05 c0       	rjmp	.+10     	; 0x19de <__vector_7+0x122>
    19d4:	ef e6       	ldi	r30, 0x6F	; 111
    19d6:	f0 e0       	ldi	r31, 0x00	; 0
    19d8:	80 81       	ld	r24, Z
    19da:	8d 7f       	andi	r24, 0xFD	; 253
    19dc:	80 83       	st	Z, r24
    19de:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    19e2:	0c c0       	rjmp	.+24     	; 0x19fc <__vector_7+0x140>
    19e4:	82 81       	ldd	r24, Z+2	; 0x02
    19e6:	93 81       	ldd	r25, Z+3	; 0x03
    19e8:	a4 81       	ldd	r26, Z+4	; 0x04
    19ea:	b5 81       	ldd	r27, Z+5	; 0x05
    19ec:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    19f0:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    19f4:	2a 17       	cp	r18, r26
    19f6:	3b 07       	cpc	r19, r27
    19f8:	69 f7       	brne	.-38     	; 0x19d4 <__vector_7+0x118>
    19fa:	d3 cf       	rjmp	.-90     	; 0x19a2 <__vector_7+0xe6>
    19fc:	ff 91       	pop	r31
    19fe:	ef 91       	pop	r30
    1a00:	bf 91       	pop	r27
    1a02:	af 91       	pop	r26
    1a04:	9f 91       	pop	r25
    1a06:	8f 91       	pop	r24
    1a08:	7f 91       	pop	r23
    1a0a:	6f 91       	pop	r22
    1a0c:	5f 91       	pop	r21
    1a0e:	4f 91       	pop	r20
    1a10:	3f 91       	pop	r19
    1a12:	2f 91       	pop	r18
    1a14:	ff 90       	pop	r15
    1a16:	ef 90       	pop	r14
    1a18:	df 90       	pop	r13
    1a1a:	cf 90       	pop	r12
    1a1c:	0f 90       	pop	r0
    1a1e:	0f be       	out	0x3f, r0	; 63
    1a20:	0f 90       	pop	r0
    1a22:	1f 90       	pop	r1
    1a24:	18 95       	reti

00001a26 <async>:
    1a26:	3f 92       	push	r3
    1a28:	4f 92       	push	r4
    1a2a:	5f 92       	push	r5
    1a2c:	6f 92       	push	r6
    1a2e:	7f 92       	push	r7
    1a30:	8f 92       	push	r8
    1a32:	9f 92       	push	r9
    1a34:	af 92       	push	r10
    1a36:	bf 92       	push	r11
    1a38:	cf 92       	push	r12
    1a3a:	df 92       	push	r13
    1a3c:	ef 92       	push	r14
    1a3e:	ff 92       	push	r15
    1a40:	0f 93       	push	r16
    1a42:	1f 93       	push	r17
    1a44:	cf 93       	push	r28
    1a46:	df 93       	push	r29
    1a48:	2b 01       	movw	r4, r22
    1a4a:	3c 01       	movw	r6, r24
    1a4c:	49 01       	movw	r8, r18
    1a4e:	5a 01       	movw	r10, r20
    1a50:	8f b7       	in	r24, 0x3f	; 63
    1a52:	80 78       	andi	r24, 0x80	; 128
    1a54:	38 2e       	mov	r3, r24
    1a56:	f8 94       	cli
    1a58:	86 e0       	ldi	r24, 0x06	; 6
    1a5a:	91 e0       	ldi	r25, 0x01	; 1
    1a5c:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <dequeue>
    1a60:	ec 01       	movw	r28, r24
    1a62:	1b 87       	std	Y+11, r17	; 0x0b
    1a64:	0a 87       	std	Y+10, r16	; 0x0a
    1a66:	fd 86       	std	Y+13, r15	; 0x0d
    1a68:	ec 86       	std	Y+12, r14	; 0x0c
    1a6a:	df 86       	std	Y+15, r13	; 0x0f
    1a6c:	ce 86       	std	Y+14, r12	; 0x0e
    1a6e:	33 20       	and	r3, r3
    1a70:	61 f0       	breq	.+24     	; 0x1a8a <async+0x64>
    1a72:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a76:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a7a:	02 80       	ldd	r0, Z+2	; 0x02
    1a7c:	f3 81       	ldd	r31, Z+3	; 0x03
    1a7e:	e0 2d       	mov	r30, r0
    1a80:	82 81       	ldd	r24, Z+2	; 0x02
    1a82:	93 81       	ldd	r25, Z+3	; 0x03
    1a84:	a4 81       	ldd	r26, Z+4	; 0x04
    1a86:	b5 81       	ldd	r27, Z+5	; 0x05
    1a88:	08 c0       	rjmp	.+16     	; 0x1a9a <async+0x74>
    1a8a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <timestamp>
    1a8e:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <timestamp+0x1>
    1a92:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <timestamp+0x2>
    1a96:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <timestamp+0x3>
    1a9a:	48 0e       	add	r4, r24
    1a9c:	59 1e       	adc	r5, r25
    1a9e:	6a 1e       	adc	r6, r26
    1aa0:	7b 1e       	adc	r7, r27
    1aa2:	4a 82       	std	Y+2, r4	; 0x02
    1aa4:	5b 82       	std	Y+3, r5	; 0x03
    1aa6:	6c 82       	std	Y+4, r6	; 0x04
    1aa8:	7d 82       	std	Y+5, r7	; 0x05
    1aaa:	18 14       	cp	r1, r8
    1aac:	19 04       	cpc	r1, r9
    1aae:	1a 04       	cpc	r1, r10
    1ab0:	1b 04       	cpc	r1, r11
    1ab2:	44 f0       	brlt	.+16     	; 0x1ac4 <async+0x9e>
    1ab4:	0f 2e       	mov	r0, r31
    1ab6:	88 24       	eor	r8, r8
    1ab8:	8a 94       	dec	r8
    1aba:	98 2c       	mov	r9, r8
    1abc:	a8 2c       	mov	r10, r8
    1abe:	ff e7       	ldi	r31, 0x7F	; 127
    1ac0:	bf 2e       	mov	r11, r31
    1ac2:	f0 2d       	mov	r31, r0
    1ac4:	84 0c       	add	r8, r4
    1ac6:	95 1c       	adc	r9, r5
    1ac8:	a6 1c       	adc	r10, r6
    1aca:	b7 1c       	adc	r11, r7
    1acc:	8e 82       	std	Y+6, r8	; 0x06
    1ace:	9f 82       	std	Y+7, r9	; 0x07
    1ad0:	a8 86       	std	Y+8, r10	; 0x08
    1ad2:	b9 86       	std	Y+9, r11	; 0x09
    1ad4:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <overflows>
    1ad8:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <overflows+0x1>
    1adc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ae0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ae4:	b0 99       	sbic	0x16, 0	; 22
    1ae6:	0e c0       	rjmp	.+28     	; 0x1b04 <async+0xde>
    1ae8:	09 2e       	mov	r0, r25
    1aea:	00 0c       	add	r0, r0
    1aec:	aa 0b       	sbc	r26, r26
    1aee:	bb 0b       	sbc	r27, r27
    1af0:	dc 01       	movw	r26, r24
    1af2:	99 27       	eor	r25, r25
    1af4:	88 27       	eor	r24, r24
    1af6:	60 e0       	ldi	r22, 0x00	; 0
    1af8:	70 e0       	ldi	r23, 0x00	; 0
    1afa:	84 2b       	or	r24, r20
    1afc:	95 2b       	or	r25, r21
    1afe:	a6 2b       	or	r26, r22
    1b00:	b7 2b       	or	r27, r23
    1b02:	13 c0       	rjmp	.+38     	; 0x1b2a <async+0x104>
    1b04:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b08:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b0c:	01 96       	adiw	r24, 0x01	; 1
    1b0e:	09 2e       	mov	r0, r25
    1b10:	00 0c       	add	r0, r0
    1b12:	aa 0b       	sbc	r26, r26
    1b14:	bb 0b       	sbc	r27, r27
    1b16:	dc 01       	movw	r26, r24
    1b18:	99 27       	eor	r25, r25
    1b1a:	88 27       	eor	r24, r24
    1b1c:	a9 01       	movw	r20, r18
    1b1e:	60 e0       	ldi	r22, 0x00	; 0
    1b20:	70 e0       	ldi	r23, 0x00	; 0
    1b22:	84 2b       	or	r24, r20
    1b24:	95 2b       	or	r25, r21
    1b26:	a6 2b       	or	r26, r22
    1b28:	b7 2b       	or	r27, r23
    1b2a:	48 1a       	sub	r4, r24
    1b2c:	59 0a       	sbc	r5, r25
    1b2e:	6a 0a       	sbc	r6, r26
    1b30:	7b 0a       	sbc	r7, r27
    1b32:	14 14       	cp	r1, r4
    1b34:	15 04       	cpc	r1, r5
    1b36:	16 04       	cpc	r1, r6
    1b38:	17 04       	cpc	r1, r7
    1b3a:	ac f5       	brge	.+106    	; 0x1ba6 <async+0x180>
    1b3c:	62 e1       	ldi	r22, 0x12	; 18
    1b3e:	71 e0       	ldi	r23, 0x01	; 1
    1b40:	ce 01       	movw	r24, r28
    1b42:	0e 94 b2 0b 	call	0x1764	; 0x1764 <enqueueByBaseline>
    1b46:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <timerQ>
    1b4a:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <timerQ+0x1>
    1b4e:	30 97       	sbiw	r30, 0x00	; 0
    1b50:	21 f1       	breq	.+72     	; 0x1b9a <async+0x174>
    1b52:	82 81       	ldd	r24, Z+2	; 0x02
    1b54:	93 81       	ldd	r25, Z+3	; 0x03
    1b56:	a4 81       	ldd	r26, Z+4	; 0x04
    1b58:	b5 81       	ldd	r27, Z+5	; 0x05
    1b5a:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <overflows>
    1b5e:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <overflows+0x1>
    1b62:	2a 17       	cp	r18, r26
    1b64:	3b 07       	cpc	r19, r27
    1b66:	c9 f4       	brne	.+50     	; 0x1b9a <async+0x174>
    1b68:	9c 01       	movw	r18, r24
    1b6a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b6e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b72:	84 1b       	sub	r24, r20
    1b74:	95 0b       	sbc	r25, r21
    1b76:	01 97       	sbiw	r24, 0x01	; 1
    1b78:	31 f4       	brne	.+12     	; 0x1b86 <async+0x160>
    1b7a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b7e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b82:	2f 5f       	subi	r18, 0xFF	; 255
    1b84:	3f 4f       	sbci	r19, 0xFF	; 255
    1b86:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b8a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b8e:	ef e6       	ldi	r30, 0x6F	; 111
    1b90:	f0 e0       	ldi	r31, 0x00	; 0
    1b92:	80 81       	ld	r24, Z
    1b94:	82 60       	ori	r24, 0x02	; 2
    1b96:	80 83       	st	Z, r24
    1b98:	41 c0       	rjmp	.+130    	; 0x1c1c <async+0x1f6>
    1b9a:	ef e6       	ldi	r30, 0x6F	; 111
    1b9c:	f0 e0       	ldi	r31, 0x00	; 0
    1b9e:	80 81       	ld	r24, Z
    1ba0:	8d 7f       	andi	r24, 0xFD	; 253
    1ba2:	80 83       	st	Z, r24
    1ba4:	3b c0       	rjmp	.+118    	; 0x1c1c <async+0x1f6>
    1ba6:	64 e1       	ldi	r22, 0x14	; 20
    1ba8:	71 e0       	ldi	r23, 0x01	; 1
    1baa:	ce 01       	movw	r24, r28
    1bac:	0e 94 6f 0b 	call	0x16de	; 0x16de <enqueueByDeadline>
    1bb0:	33 20       	and	r3, r3
    1bb2:	b9 f1       	breq	.+110    	; 0x1c22 <async+0x1fc>
    1bb4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1bb8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1bbc:	00 97       	sbiw	r24, 0x00	; 0
    1bbe:	81 f1       	breq	.+96     	; 0x1c20 <async+0x1fa>
    1bc0:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1bc4:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1bc8:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <msgQ>
    1bcc:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <msgQ+0x1>
    1bd0:	02 81       	ldd	r16, Z+2	; 0x02
    1bd2:	13 81       	ldd	r17, Z+3	; 0x03
    1bd4:	d9 01       	movw	r26, r18
    1bd6:	16 96       	adiw	r26, 0x06	; 6
    1bd8:	4d 91       	ld	r20, X+
    1bda:	5d 91       	ld	r21, X+
    1bdc:	6d 91       	ld	r22, X+
    1bde:	7c 91       	ld	r23, X
    1be0:	19 97       	sbiw	r26, 0x09	; 9
    1be2:	d8 01       	movw	r26, r16
    1be4:	16 96       	adiw	r26, 0x06	; 6
    1be6:	0d 91       	ld	r16, X+
    1be8:	1d 91       	ld	r17, X+
    1bea:	2d 91       	ld	r18, X+
    1bec:	3c 91       	ld	r19, X
    1bee:	19 97       	sbiw	r26, 0x09	; 9
    1bf0:	40 1b       	sub	r20, r16
    1bf2:	51 0b       	sbc	r21, r17
    1bf4:	62 0b       	sbc	r22, r18
    1bf6:	73 0b       	sbc	r23, r19
    1bf8:	9a f4       	brpl	.+38     	; 0x1c20 <async+0x1fa>
    1bfa:	dc 01       	movw	r26, r24
    1bfc:	2d 91       	ld	r18, X+
    1bfe:	3c 91       	ld	r19, X
    1c00:	11 97       	sbiw	r26, 0x01	; 1
    1c02:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1c06:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1c0a:	ed 93       	st	X+, r30
    1c0c:	fc 93       	st	X, r31
    1c0e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1c12:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1c16:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <dispatch>
    1c1a:	02 c0       	rjmp	.+4      	; 0x1c20 <async+0x1fa>
    1c1c:	33 20       	and	r3, r3
    1c1e:	09 f0       	breq	.+2      	; 0x1c22 <async+0x1fc>
    1c20:	78 94       	sei
    1c22:	ce 01       	movw	r24, r28
    1c24:	df 91       	pop	r29
    1c26:	cf 91       	pop	r28
    1c28:	1f 91       	pop	r17
    1c2a:	0f 91       	pop	r16
    1c2c:	ff 90       	pop	r15
    1c2e:	ef 90       	pop	r14
    1c30:	df 90       	pop	r13
    1c32:	cf 90       	pop	r12
    1c34:	bf 90       	pop	r11
    1c36:	af 90       	pop	r10
    1c38:	9f 90       	pop	r9
    1c3a:	8f 90       	pop	r8
    1c3c:	7f 90       	pop	r7
    1c3e:	6f 90       	pop	r6
    1c40:	5f 90       	pop	r5
    1c42:	4f 90       	pop	r4
    1c44:	3f 90       	pop	r3
    1c46:	08 95       	ret

00001c48 <sync>:
    1c48:	cf 92       	push	r12
    1c4a:	df 92       	push	r13
    1c4c:	ef 92       	push	r14
    1c4e:	ff 92       	push	r15
    1c50:	0f 93       	push	r16
    1c52:	1f 93       	push	r17
    1c54:	cf 93       	push	r28
    1c56:	df 93       	push	r29
    1c58:	ec 01       	movw	r28, r24
    1c5a:	7b 01       	movw	r14, r22
    1c5c:	6a 01       	movw	r12, r20
    1c5e:	1f b7       	in	r17, 0x3f	; 63
    1c60:	10 78       	andi	r17, 0x80	; 128
    1c62:	f8 94       	cli
    1c64:	a8 81       	ld	r26, Y
    1c66:	b9 81       	ldd	r27, Y+1	; 0x01
    1c68:	10 97       	sbiw	r26, 0x00	; 0
    1c6a:	61 f1       	breq	.+88     	; 0x1cc4 <sync+0x7c>
    1c6c:	14 96       	adiw	r26, 0x04	; 4
    1c6e:	ed 91       	ld	r30, X+
    1c70:	fc 91       	ld	r31, X
    1c72:	15 97       	sbiw	r26, 0x05	; 5
    1c74:	30 97       	sbiw	r30, 0x00	; 0
    1c76:	41 f0       	breq	.+16     	; 0x1c88 <sync+0x40>
    1c78:	a0 81       	ld	r26, Z
    1c7a:	b1 81       	ldd	r27, Z+1	; 0x01
    1c7c:	14 96       	adiw	r26, 0x04	; 4
    1c7e:	ed 91       	ld	r30, X+
    1c80:	fc 91       	ld	r31, X
    1c82:	15 97       	sbiw	r26, 0x05	; 5
    1c84:	30 97       	sbiw	r30, 0x00	; 0
    1c86:	c1 f7       	brne	.-16     	; 0x1c78 <sync+0x30>
    1c88:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c8c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c90:	2a 17       	cp	r18, r26
    1c92:	3b 07       	cpc	r19, r27
    1c94:	21 f0       	breq	.+8      	; 0x1c9e <sync+0x56>
    1c96:	11 23       	and	r17, r17
    1c98:	09 f4       	brne	.+2      	; 0x1c9c <sync+0x54>
    1c9a:	3d c0       	rjmp	.+122    	; 0x1d16 <sync+0xce>
    1c9c:	07 c0       	rjmp	.+14     	; 0x1cac <sync+0x64>
    1c9e:	11 23       	and	r17, r17
    1ca0:	09 f4       	brne	.+2      	; 0x1ca4 <sync+0x5c>
    1ca2:	3c c0       	rjmp	.+120    	; 0x1d1c <sync+0xd4>
    1ca4:	78 94       	sei
    1ca6:	8f ef       	ldi	r24, 0xFF	; 255
    1ca8:	9f ef       	ldi	r25, 0xFF	; 255
    1caa:	52 c0       	rjmp	.+164    	; 0x1d50 <sync+0x108>
    1cac:	8a 81       	ldd	r24, Y+2	; 0x02
    1cae:	9b 81       	ldd	r25, Y+3	; 0x03
    1cb0:	00 97       	sbiw	r24, 0x00	; 0
    1cb2:	d1 f1       	breq	.+116    	; 0x1d28 <sync+0xe0>
    1cb4:	fc 01       	movw	r30, r24
    1cb6:	15 82       	std	Z+5, r1	; 0x05
    1cb8:	14 82       	std	Z+4, r1	; 0x04
    1cba:	36 c0       	rjmp	.+108    	; 0x1d28 <sync+0xe0>
    1cbc:	78 94       	sei
    1cbe:	80 e0       	ldi	r24, 0x00	; 0
    1cc0:	90 e0       	ldi	r25, 0x00	; 0
    1cc2:	46 c0       	rjmp	.+140    	; 0x1d50 <sync+0x108>
    1cc4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cc8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ccc:	99 83       	std	Y+1, r25	; 0x01
    1cce:	88 83       	st	Y, r24
    1cd0:	11 23       	and	r17, r17
    1cd2:	29 f0       	breq	.+10     	; 0x1cde <sync+0x96>
    1cd4:	8a 81       	ldd	r24, Y+2	; 0x02
    1cd6:	9b 81       	ldd	r25, Y+3	; 0x03
    1cd8:	01 97       	sbiw	r24, 0x01	; 1
    1cda:	09 f0       	breq	.+2      	; 0x1cde <sync+0x96>
    1cdc:	78 94       	sei
    1cde:	b6 01       	movw	r22, r12
    1ce0:	ce 01       	movw	r24, r28
    1ce2:	f7 01       	movw	r30, r14
    1ce4:	09 95       	icall
    1ce6:	f8 2e       	mov	r15, r24
    1ce8:	09 2f       	mov	r16, r25
    1cea:	8f b7       	in	r24, 0x3f	; 63
    1cec:	f8 94       	cli
    1cee:	19 82       	std	Y+1, r1	; 0x01
    1cf0:	18 82       	st	Y, r1
    1cf2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf4:	9b 81       	ldd	r25, Y+3	; 0x03
    1cf6:	82 30       	cpi	r24, 0x02	; 2
    1cf8:	91 05       	cpc	r25, r1
    1cfa:	38 f0       	brcs	.+14     	; 0x1d0a <sync+0xc2>
    1cfc:	1b 82       	std	Y+3, r1	; 0x03
    1cfe:	1a 82       	std	Y+2, r1	; 0x02
    1d00:	fc 01       	movw	r30, r24
    1d02:	15 82       	std	Z+5, r1	; 0x05
    1d04:	14 82       	std	Z+4, r1	; 0x04
    1d06:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <dispatch>
    1d0a:	11 23       	and	r17, r17
    1d0c:	51 f0       	breq	.+20     	; 0x1d22 <sync+0xda>
    1d0e:	78 94       	sei
    1d10:	8f 2d       	mov	r24, r15
    1d12:	90 2f       	mov	r25, r16
    1d14:	1d c0       	rjmp	.+58     	; 0x1d50 <sync+0x108>
    1d16:	8f ef       	ldi	r24, 0xFF	; 255
    1d18:	9f ef       	ldi	r25, 0xFF	; 255
    1d1a:	1a c0       	rjmp	.+52     	; 0x1d50 <sync+0x108>
    1d1c:	8f ef       	ldi	r24, 0xFF	; 255
    1d1e:	9f ef       	ldi	r25, 0xFF	; 255
    1d20:	17 c0       	rjmp	.+46     	; 0x1d50 <sync+0x108>
    1d22:	8f 2d       	mov	r24, r15
    1d24:	90 2f       	mov	r25, r16
    1d26:	14 c0       	rjmp	.+40     	; 0x1d50 <sync+0x108>
    1d28:	3b 83       	std	Y+3, r19	; 0x03
    1d2a:	2a 83       	std	Y+2, r18	; 0x02
    1d2c:	f9 01       	movw	r30, r18
    1d2e:	d5 83       	std	Z+5, r29	; 0x05
    1d30:	c4 83       	std	Z+4, r28	; 0x04
    1d32:	cd 01       	movw	r24, r26
    1d34:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <dispatch>
    1d38:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d3c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d40:	82 81       	ldd	r24, Z+2	; 0x02
    1d42:	93 81       	ldd	r25, Z+3	; 0x03
    1d44:	89 2b       	or	r24, r25
    1d46:	09 f4       	brne	.+2      	; 0x1d4a <sync+0x102>
    1d48:	b9 cf       	rjmp	.-142    	; 0x1cbc <sync+0x74>
    1d4a:	f9 83       	std	Y+1, r31	; 0x01
    1d4c:	e8 83       	st	Y, r30
    1d4e:	c2 cf       	rjmp	.-124    	; 0x1cd4 <sync+0x8c>
    1d50:	df 91       	pop	r29
    1d52:	cf 91       	pop	r28
    1d54:	1f 91       	pop	r17
    1d56:	0f 91       	pop	r16
    1d58:	ff 90       	pop	r15
    1d5a:	ef 90       	pop	r14
    1d5c:	df 90       	pop	r13
    1d5e:	cf 90       	pop	r12
    1d60:	08 95       	ret

00001d62 <run>:
    1d62:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d66:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d6a:	84 e1       	ldi	r24, 0x14	; 20
    1d6c:	91 e0       	ldi	r25, 0x01	; 1
    1d6e:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <dequeue>
    1d72:	ec 01       	movw	r28, r24
    1d74:	d8 01       	movw	r26, r16
    1d76:	13 96       	adiw	r26, 0x03	; 3
    1d78:	9c 93       	st	X, r25
    1d7a:	8e 93       	st	-X, r24
    1d7c:	12 97       	sbiw	r26, 0x02	; 2
    1d7e:	78 94       	sei
    1d80:	4e 85       	ldd	r20, Y+14	; 0x0e
    1d82:	5f 85       	ldd	r21, Y+15	; 0x0f
    1d84:	6c 85       	ldd	r22, Y+12	; 0x0c
    1d86:	7d 85       	ldd	r23, Y+13	; 0x0d
    1d88:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d8a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1d8c:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <sync>
    1d90:	8f b7       	in	r24, 0x3f	; 63
    1d92:	f8 94       	cli
    1d94:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1d98:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1d9c:	99 83       	std	Y+1, r25	; 0x01
    1d9e:	88 83       	st	Y, r24
    1da0:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1da4:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1da8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1dac:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1db0:	00 81       	ld	r16, Z
    1db2:	11 81       	ldd	r17, Z+1	; 0x01
    1db4:	e8 01       	movw	r28, r16
    1db6:	2a 81       	ldd	r18, Y+2	; 0x02
    1db8:	3b 81       	ldd	r19, Y+3	; 0x03
    1dba:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <msgQ>
    1dbe:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <msgQ+0x1>
    1dc2:	10 97       	sbiw	r26, 0x00	; 0
    1dc4:	c1 f0       	breq	.+48     	; 0x1df6 <run+0x94>
    1dc6:	21 15       	cp	r18, r1
    1dc8:	31 05       	cpc	r19, r1
    1dca:	59 f2       	breq	.-106    	; 0x1d62 <run>
    1dcc:	16 96       	adiw	r26, 0x06	; 6
    1dce:	8d 91       	ld	r24, X+
    1dd0:	9d 91       	ld	r25, X+
    1dd2:	0d 90       	ld	r0, X+
    1dd4:	bc 91       	ld	r27, X
    1dd6:	a0 2d       	mov	r26, r0
    1dd8:	e9 01       	movw	r28, r18
    1dda:	4e 81       	ldd	r20, Y+6	; 0x06
    1ddc:	5f 81       	ldd	r21, Y+7	; 0x07
    1dde:	68 85       	ldd	r22, Y+8	; 0x08
    1de0:	79 85       	ldd	r23, Y+9	; 0x09
    1de2:	84 1b       	sub	r24, r20
    1de4:	95 0b       	sbc	r25, r21
    1de6:	a6 0b       	sbc	r26, r22
    1de8:	b7 0b       	sbc	r27, r23
    1dea:	18 16       	cp	r1, r24
    1dec:	19 06       	cpc	r1, r25
    1dee:	1a 06       	cpc	r1, r26
    1df0:	1b 06       	cpc	r1, r27
    1df2:	0c f0       	brlt	.+2      	; 0x1df6 <run+0x94>
    1df4:	b6 cf       	rjmp	.-148    	; 0x1d62 <run>
    1df6:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <activeStack+0x1>
    1dfa:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <activeStack>
    1dfe:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1e02:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1e06:	91 83       	std	Z+1, r25	; 0x01
    1e08:	80 83       	st	Z, r24
    1e0a:	f0 93 05 01 	sts	0x0105, r31	; 0x800105 <threadPool+0x1>
    1e0e:	e0 93 04 01 	sts	0x0104, r30	; 0x800104 <threadPool>
    1e12:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    1e16:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    1e1a:	14 96       	adiw	r26, 0x04	; 4
    1e1c:	ed 91       	ld	r30, X+
    1e1e:	fc 91       	ld	r31, X
    1e20:	15 97       	sbiw	r26, 0x05	; 5
    1e22:	30 97       	sbiw	r30, 0x00	; 0
    1e24:	41 f0       	breq	.+16     	; 0x1e36 <run+0xd4>
    1e26:	a0 81       	ld	r26, Z
    1e28:	b1 81       	ldd	r27, Z+1	; 0x01
    1e2a:	14 96       	adiw	r26, 0x04	; 4
    1e2c:	ed 91       	ld	r30, X+
    1e2e:	fc 91       	ld	r31, X
    1e30:	15 97       	sbiw	r26, 0x05	; 5
    1e32:	30 97       	sbiw	r30, 0x00	; 0
    1e34:	c1 f7       	brne	.-16     	; 0x1e26 <run+0xc4>
    1e36:	cd 01       	movw	r24, r26
    1e38:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <dispatch>
    1e3c:	92 cf       	rjmp	.-220    	; 0x1d62 <run>

00001e3e <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1e3e:	42 31       	cpi	r20, 0x12	; 18
    1e40:	b8 f4       	brcc	.+46     	; 0x1e70 <install+0x32>
        char status;
        DISABLE(status);
    1e42:	2f b7       	in	r18, 0x3f	; 63
    1e44:	f8 94       	cli
        otable[i] = obj;
    1e46:	50 e0       	ldi	r21, 0x00	; 0
    1e48:	44 0f       	add	r20, r20
    1e4a:	55 1f       	adc	r21, r21
    1e4c:	fa 01       	movw	r30, r20
    1e4e:	ea 5e       	subi	r30, 0xEA	; 234
    1e50:	fe 4f       	sbci	r31, 0xFE	; 254
    1e52:	91 83       	std	Z+1, r25	; 0x01
    1e54:	80 83       	st	Z, r24
        mtable[i] = m;
    1e56:	fa 01       	movw	r30, r20
    1e58:	e2 55       	subi	r30, 0x52	; 82
    1e5a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e5c:	71 83       	std	Z+1, r23	; 0x01
    1e5e:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1e60:	41 e0       	ldi	r20, 0x01	; 1
    1e62:	50 e0       	ldi	r21, 0x00	; 0
    1e64:	fc 01       	movw	r30, r24
    1e66:	53 83       	std	Z+3, r21	; 0x03
    1e68:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1e6a:	22 23       	and	r18, r18
    1e6c:	0c f4       	brge	.+2      	; 0x1e70 <install+0x32>
    1e6e:	78 94       	sei
    1e70:	08 95       	ret

00001e72 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1e72:	8c 01       	movw	r16, r24
    1e74:	7b 01       	movw	r14, r22
    1e76:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1e78:	8f b7       	in	r24, 0x3f	; 63
    1e7a:	f8 94       	cli
    initialize();
    1e7c:	0e 94 11 03 	call	0x622	; 0x622 <initialize>
    ENABLE(1);
    1e80:	78 94       	sei
    if (m != NULL)
    1e82:	e1 14       	cp	r14, r1
    1e84:	f1 04       	cpc	r15, r1
    1e86:	41 f0       	breq	.+16     	; 0x1e98 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1e88:	20 e0       	ldi	r18, 0x00	; 0
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	a9 01       	movw	r20, r18
    1e8e:	60 e0       	ldi	r22, 0x00	; 0
    1e90:	70 e0       	ldi	r23, 0x00	; 0
    1e92:	cb 01       	movw	r24, r22
    1e94:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <async>
    DISABLE(status);
    1e98:	8f b7       	in	r24, 0x3f	; 63
    1e9a:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1e9c:	0e 94 9c 03 	call	0x738	; 0x738 <schedule>
    ENABLE(1);
    1ea0:	78 94       	sei
    while (1) {
        SLEEP();
    1ea2:	81 e0       	ldi	r24, 0x01	; 1
    1ea4:	83 bf       	out	0x33, r24	; 51
    1ea6:	88 95       	sleep
    1ea8:	fd cf       	rjmp	.-6      	; 0x1ea4 <tinytimber+0x32>

00001eaa <USART_Init>:


void USART_Init( unsigned int ubrr)
{
/* Set baud rate */
UBRR0H = (unsigned char)(ubrr>>8);
    1eaa:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
UBRR0L = (unsigned char)ubrr;
    1eae:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
/* Enable receiver and transmitter  and enables interupts*/
UCSR0B = (1<<RXEN0)|(1<<TXEN0) | (1 << RXCIE0) | (1 << TXCIE0);
    1eb2:	88 ed       	ldi	r24, 0xD8	; 216
    1eb4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
/* Set frame format: 8data, 2stop bit */
UCSR0C = (1<<USBS0)|(3<<UCSZ00);
    1eb8:	8e e0       	ldi	r24, 0x0E	; 14
    1eba:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
    1ebe:	08 95       	ret

00001ec0 <USART_Receive>:
unsigned char status, resh, resl;
/* Wait for data to be received */
//while ( !(UCSR0A & (1<<RXC0)) );
/* Get status and 9th bit, then data */
/* from buffer */
status = UCSR0A;
    1ec0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
resh = UCSR0B;
    1ec4:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
resl = UDR0;
    1ec8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
    return -1;
}
/* Filter the 9th bit, then return */
resh = (resh >> 1) & 0x01;
return ((resh << 8) | resl  ); 
}
    1ecc:	8f ef       	ldi	r24, 0xFF	; 255
    1ece:	9f ef       	ldi	r25, 0xFF	; 255
    1ed0:	08 95       	ret

00001ed2 <USART_Transmit>:


void USART_Transmit( unsigned int data )
{
    1ed2:	9c 01       	movw	r18, r24
/* Wait for empty transmit buffer */
while ( !( UCSR0A & (1<<UDRE0))) ;
    1ed4:	e0 ec       	ldi	r30, 0xC0	; 192
    1ed6:	f0 e0       	ldi	r31, 0x00	; 0
    1ed8:	90 81       	ld	r25, Z
    1eda:	95 ff       	sbrs	r25, 5
    1edc:	fd cf       	rjmp	.-6      	; 0x1ed8 <USART_Transmit+0x6>
/* Copy 9th bit to TXB8 */
UCSR0B &= ~(1<<TXB80);
    1ede:	e1 ec       	ldi	r30, 0xC1	; 193
    1ee0:	f0 e0       	ldi	r31, 0x00	; 0
    1ee2:	90 81       	ld	r25, Z
    1ee4:	9e 7f       	andi	r25, 0xFE	; 254
    1ee6:	90 83       	st	Z, r25
if ( data & 0x0100 ){
    1ee8:	30 ff       	sbrs	r19, 0
    1eea:	03 c0       	rjmp	.+6      	; 0x1ef2 <USART_Transmit+0x20>
    UCSR0B |= (1<<TXB80);
    1eec:	80 81       	ld	r24, Z
    1eee:	81 60       	ori	r24, 0x01	; 1
    1ef0:	80 83       	st	Z, r24
}
/* Put data into buffer, sends the data */
UDR0 = data;
    1ef2:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
    1ef6:	08 95       	ret

00001ef8 <__divmodsi4>:
    1ef8:	05 2e       	mov	r0, r21
    1efa:	97 fb       	bst	r25, 7
    1efc:	1e f4       	brtc	.+6      	; 0x1f04 <__divmodsi4+0xc>
    1efe:	00 94       	com	r0
    1f00:	0e 94 93 0f 	call	0x1f26	; 0x1f26 <__negsi2>
    1f04:	57 fd       	sbrc	r21, 7
    1f06:	07 d0       	rcall	.+14     	; 0x1f16 <__divmodsi4_neg2>
    1f08:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__udivmodsi4>
    1f0c:	07 fc       	sbrc	r0, 7
    1f0e:	03 d0       	rcall	.+6      	; 0x1f16 <__divmodsi4_neg2>
    1f10:	4e f4       	brtc	.+18     	; 0x1f24 <__divmodsi4_exit>
    1f12:	0c 94 93 0f 	jmp	0x1f26	; 0x1f26 <__negsi2>

00001f16 <__divmodsi4_neg2>:
    1f16:	50 95       	com	r21
    1f18:	40 95       	com	r20
    1f1a:	30 95       	com	r19
    1f1c:	21 95       	neg	r18
    1f1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1f20:	4f 4f       	sbci	r20, 0xFF	; 255
    1f22:	5f 4f       	sbci	r21, 0xFF	; 255

00001f24 <__divmodsi4_exit>:
    1f24:	08 95       	ret

00001f26 <__negsi2>:
    1f26:	90 95       	com	r25
    1f28:	80 95       	com	r24
    1f2a:	70 95       	com	r23
    1f2c:	61 95       	neg	r22
    1f2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1f30:	8f 4f       	sbci	r24, 0xFF	; 255
    1f32:	9f 4f       	sbci	r25, 0xFF	; 255
    1f34:	08 95       	ret

00001f36 <__tablejump2__>:
    1f36:	ee 0f       	add	r30, r30
    1f38:	ff 1f       	adc	r31, r31
    1f3a:	05 90       	lpm	r0, Z+
    1f3c:	f4 91       	lpm	r31, Z
    1f3e:	e0 2d       	mov	r30, r0
    1f40:	09 94       	ijmp

00001f42 <__udivmodsi4>:
    1f42:	a1 e2       	ldi	r26, 0x21	; 33
    1f44:	1a 2e       	mov	r1, r26
    1f46:	aa 1b       	sub	r26, r26
    1f48:	bb 1b       	sub	r27, r27
    1f4a:	fd 01       	movw	r30, r26
    1f4c:	0d c0       	rjmp	.+26     	; 0x1f68 <__udivmodsi4_ep>

00001f4e <__udivmodsi4_loop>:
    1f4e:	aa 1f       	adc	r26, r26
    1f50:	bb 1f       	adc	r27, r27
    1f52:	ee 1f       	adc	r30, r30
    1f54:	ff 1f       	adc	r31, r31
    1f56:	a2 17       	cp	r26, r18
    1f58:	b3 07       	cpc	r27, r19
    1f5a:	e4 07       	cpc	r30, r20
    1f5c:	f5 07       	cpc	r31, r21
    1f5e:	20 f0       	brcs	.+8      	; 0x1f68 <__udivmodsi4_ep>
    1f60:	a2 1b       	sub	r26, r18
    1f62:	b3 0b       	sbc	r27, r19
    1f64:	e4 0b       	sbc	r30, r20
    1f66:	f5 0b       	sbc	r31, r21

00001f68 <__udivmodsi4_ep>:
    1f68:	66 1f       	adc	r22, r22
    1f6a:	77 1f       	adc	r23, r23
    1f6c:	88 1f       	adc	r24, r24
    1f6e:	99 1f       	adc	r25, r25
    1f70:	1a 94       	dec	r1
    1f72:	69 f7       	brne	.-38     	; 0x1f4e <__udivmodsi4_loop>
    1f74:	60 95       	com	r22
    1f76:	70 95       	com	r23
    1f78:	80 95       	com	r24
    1f7a:	90 95       	com	r25
    1f7c:	9b 01       	movw	r18, r22
    1f7e:	ac 01       	movw	r20, r24
    1f80:	bd 01       	movw	r22, r26
    1f82:	cf 01       	movw	r24, r30
    1f84:	08 95       	ret

00001f86 <setjmp>:
    1f86:	dc 01       	movw	r26, r24
    1f88:	2d 92       	st	X+, r2
    1f8a:	3d 92       	st	X+, r3
    1f8c:	4d 92       	st	X+, r4
    1f8e:	5d 92       	st	X+, r5
    1f90:	6d 92       	st	X+, r6
    1f92:	7d 92       	st	X+, r7
    1f94:	8d 92       	st	X+, r8
    1f96:	9d 92       	st	X+, r9
    1f98:	ad 92       	st	X+, r10
    1f9a:	bd 92       	st	X+, r11
    1f9c:	cd 92       	st	X+, r12
    1f9e:	dd 92       	st	X+, r13
    1fa0:	ed 92       	st	X+, r14
    1fa2:	fd 92       	st	X+, r15
    1fa4:	0d 93       	st	X+, r16
    1fa6:	1d 93       	st	X+, r17
    1fa8:	cd 93       	st	X+, r28
    1faa:	dd 93       	st	X+, r29
    1fac:	ff 91       	pop	r31
    1fae:	ef 91       	pop	r30
    1fb0:	8d b7       	in	r24, 0x3d	; 61
    1fb2:	8d 93       	st	X+, r24
    1fb4:	8e b7       	in	r24, 0x3e	; 62
    1fb6:	8d 93       	st	X+, r24
    1fb8:	8f b7       	in	r24, 0x3f	; 63
    1fba:	8d 93       	st	X+, r24
    1fbc:	ed 93       	st	X+, r30
    1fbe:	fd 93       	st	X+, r31
    1fc0:	88 27       	eor	r24, r24
    1fc2:	99 27       	eor	r25, r25
    1fc4:	09 94       	ijmp

00001fc6 <longjmp>:
    1fc6:	dc 01       	movw	r26, r24
    1fc8:	cb 01       	movw	r24, r22
    1fca:	81 30       	cpi	r24, 0x01	; 1
    1fcc:	91 05       	cpc	r25, r1
    1fce:	81 1d       	adc	r24, r1
    1fd0:	2d 90       	ld	r2, X+
    1fd2:	3d 90       	ld	r3, X+
    1fd4:	4d 90       	ld	r4, X+
    1fd6:	5d 90       	ld	r5, X+
    1fd8:	6d 90       	ld	r6, X+
    1fda:	7d 90       	ld	r7, X+
    1fdc:	8d 90       	ld	r8, X+
    1fde:	9d 90       	ld	r9, X+
    1fe0:	ad 90       	ld	r10, X+
    1fe2:	bd 90       	ld	r11, X+
    1fe4:	cd 90       	ld	r12, X+
    1fe6:	dd 90       	ld	r13, X+
    1fe8:	ed 90       	ld	r14, X+
    1fea:	fd 90       	ld	r15, X+
    1fec:	0d 91       	ld	r16, X+
    1fee:	1d 91       	ld	r17, X+
    1ff0:	cd 91       	ld	r28, X+
    1ff2:	dd 91       	ld	r29, X+
    1ff4:	ed 91       	ld	r30, X+
    1ff6:	fd 91       	ld	r31, X+
    1ff8:	0d 90       	ld	r0, X+
    1ffa:	f8 94       	cli
    1ffc:	fe bf       	out	0x3e, r31	; 62
    1ffe:	0f be       	out	0x3f, r0	; 63
    2000:	ed bf       	out	0x3d, r30	; 61
    2002:	ed 91       	ld	r30, X+
    2004:	fd 91       	ld	r31, X+
    2006:	09 94       	ijmp

00002008 <_exit>:
    2008:	f8 94       	cli

0000200a <__stop_program>:
    200a:	ff cf       	rjmp	.-2      	; 0x200a <__stop_program>
